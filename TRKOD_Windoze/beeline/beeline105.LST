MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      00002 ;
                      00003 ;    BeeLine Communications Interface
                      00004 ;    Copyright (C) 2005  BigRedBee, LLC
                      00005 ;
                      00006 ;    This program is free software; you can redistribute it and/or modify
                      00007 ;    it under the terms of the GNU General Public License as published by
                      00008 ;    the Free Software Foundation; either version 2 of the License, or
                      00009 ;    (at your option) any later version.
                      00010 ;
                      00011 ;    This program is distributed in the hope that it will be useful,
                      00012 ;    but WITHOUT ANY WARRANTY; without even the implied warranty of
                      00013 ;    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                      00014 ;    GNU General Public License for more details.
                      00015 ;
                      00016 ;    You should have received a copy of the GNU General Public License
                      00017 ;    along with this program; if not, write to the Free Software
                      00018 ;    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
                      00019 ;
                      00020 ;    BigRedBee, LLC
                      00021 ;    5752 Bay Point Dr
                      00022 ;    Lake Oswego, OR  97035
                      00023 ;
                      00024 ;    info@bigredbee.com
                      00025 ;
                      00026 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      00027 
                      00028 #DEFINE VERSION "0105"
                      00029 
                      00030 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      00031 ;
                      00032     LIST        P=16F688        ; list directive to define processor
                      00033 #INCLUDE    <P16F688.INC>   ; processor specific variable definitions
                      00001         LIST
                      00002 ; P16F688.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                      00366         LIST
                      00034 
  00000688            00035 VER EQU 688
                      00036     ERRORLEVEL  -302            ; suppress message 302 from list file
                      00037 ;
                      00038 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      00039 
                      00040 
                      00041 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      00042 ; 
                      00043 ; Changelog
                      00044 ;
                      00045 ; version 0105
                      00046 ;  - minor cosmetic changes and code cleanup, no functional changes
                      00047 ;
                      00048 ; version 0104
                      00049 ; - call ad_convert early in cmd_text_dump to make sure we send valid data
                      00050 ; - wait before doing ad conversion in check_shutdown. to allow v to creep
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00051 ;   back up
                      00052 ; - set ADRESULTHI and LO to 0's, not 5A.  Looks better when reading 
                      00053 ;   prioir to doing AD conversion
                      00054 ;
                      00055 ; Version 0103
                      00056 ; - When zeroing flash, zero all 3 bytes
                      00057 ; - when writing time to flash, write all 3 bytes.
                      00058 ;
                      00059 ; Version 0102
                      00060 ; - check for input characters in between each morse character transmission
                      00061 ;   make sure to poweroff and poweron the transmitter appropriately
                      00062 ;
                      00063 ; Version 0101
                      00064 ; - instead of goto after cmd_dispatch detects a bogus character, do a return
                      00065 ;   makes plugging and unplugging (which generates spurious chars) transparent
                      00066 ; - check for characters inside the mores loop
                      00067 ;
                      00068 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      00069 
                      00070 #DEFINE MODEL "BLTX0"
                      00071 
                      00072 #DEFINE SER_DRIVER 1            ; set to 0 if driving serial bus direct
                      00073 #DEFINE SIMULATE 0              ; for debug
                      00074 #DEFINE INTERRUPTS_ENABLED 1    ; for debug
                      00075 
2007   30D4           00076     __CONFIG  _INTRC_OSC_NOCLKOUT & _WDT_OFF & _PWRTE_OFF & _MCLRE_OFF & _CP_OFF & _BOD_OFF & _FCMEN_OFF
                              & _IESO_OFF  
                      00077 
                      00078 ;__CONFIG  _INTRC_OSC_NOCLKOUT & _WDT_OFF &  _PWRTE_OFF & _MCLRE_ON  & _CP_OFF & _BOD_OFF & _FCMEN_OFF  
                            & _IESO_OFF  
                      00079 
                      00080 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      00081 ;
                      00082 ; Pins definitions:
                      00083 ;
                      00084 
                      00085 #DEFINE CC_PALE    PORTA, 5             ;; output
                      00086 #DEFINE CC_PDATA   PORTA, 4             ;; output       
                      00087 #DEFINE MCLR_NA    PORTA, 3             ;; input ONLY
                      00088 #DEFINE CC_PCLK    PORTA, 2             ;; output
                      00089 #DEFINE SEROUT_PIN PORTA, 1             ;; output
                      00090 #DEFINE SERIN_PIN  PORTA, 0             ;; input
                      00091 
                      00092 #DEFINE TRIS_PORTA B'001001'
                      00093 
                      00094 #DEFINE RC5_NA     PORTC, 5             ;; input                
                      00095 #DEFINE RC4_NA     PORTC, 4             ;; input
                      00096 #DEFINE RC3_NA     PORTC, 3             ;; input
                      00097 #DEFINE CC_DI      PORTC, 2             ;; output
                      00098 #DEFINE CC_DCLK    PORTC, 1             ;; output       UNUSED
                      00099 #DEFINE VBAT       PORTC, 0             ;; input AN4
                      00100 
                      00101 #DEFINE TRIS_PORTC  B'0111001'
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00102 
                      00103 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      00104 ; Defines
                      00105 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      00106 
  00000000            00107 W       EQU     0X00 
  00000001            00108 F       EQU     0X01 
  00000002            00109 PC      EQU     0X02 
  00000003            00110 STATUS  EQU     0X03 
  00000002            00111 ZEROF   EQU     0X02 
  00000000            00112 CARYF   EQU     0X00 
                      00113 
                      00114 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      00115 ;Bank Select Defines
                      00116 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      00117 
                      00118 #DEFINE BANK0           BCF     STATUS, RP0
                      00119 #DEFINE BANK1           BSF     STATUS, RP0
                      00120 
                      00121 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      00122 ;includes
                      00123 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      00124 
                      00125 #INCLUDE "macros.inc"
                      00001 ;----------------------------------------------------------------------
                      00002 ; File : macros.inc
                      00003 ;       Macros for MPASM
                      00004 ;
                      00005 ; Author:
                      00006 ;       Robert F. Nee
                      00007 ;       robnee@robnee.com
                      00008 ;
                      00009 ; Revisions:
                      00010 ;       last delta :  02/04/04 20:13:28
                      00011 ;
                      00012 ; 1/6/04
                      00013 ; Redesigned switch case to jump out of the switch statement if
                      00014 ; endcase is used.  endcase can be omitted after the last case for
                      00015 ; efficiency
                      00016 ;
                      00017 ;               noexpand
                      00018 
                      00019 ;----------------------------------------------------------------------
                      00020 ; Variables for macros
                      00021 
  0000                00022                 VARIABLE _LABELCOUNT = 0
  0000                00023                 VARIABLE _BLOCKDEPTH = 0
  0000                00024                 VARIABLE _SWITCHDEPTH = 0
  0000                00025                 VARIABLE _CASECOUNT = 0
  0000                00026                 VARIABLE _IFDEPTH = 0
  0000                00027                 VARIABLE _BANKFLAG = 0
                      00028 
                      00029 ;----------------------------------------------------------------------
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00030 ; bank0 - switch to register bank 0
                      00031 
                      00032 BANK01 MACRO
                      00033     BCF STATUS, RP0
                      00034         ENDM
                      00035 
                      00036 BANK00  MACRO
                      00037 
                      00038                 BCF     STATUS, RP0
                      00039                 BCF     STATUS, RP1
                      00040 
                      00041                 ENDM
                      00042 
                      00043 ;----------------------------------------------------------------------
                      00044 ; bank1 - switch to register bank 1
                      00045 
                      00046 BANK10          MACRO
                      00047 
                      00048                 BSF     STATUS, RP0
                      00049 
                      00050                 ENDM
                      00051 
                      00052 ;----------------------------------------------------------------------
                      00053 ; Save and restore registers
                      00054 
                      00055 INT_SAVE        MACRO
                      00056                 MOVWF   W_TEMP
                      00057                 SWAPF   STATUS, W
                      00058                 MOVWF   STATUS_TEMP
                      00059                 ENDM
                      00060 
                      00061 INT_RESTORE     MACRO
                      00062                 SWAPF   STATUS_TEMP, W
                      00063                 MOVWF   STATUS
                      00064 
                      00065                 SWAPF   W_TEMP, F
                      00066                 SWAPF   W_TEMP, W
                      00067                 ENDM
                      00068 
                      00069 ;----------------------------------------------------------------------
                      00070 ; beq - Branch equal
                      00071 
                      00072 BEQ             MACRO   ADDRESS
                      00073                 BTFSC   STATUS, Z
                      00074                 GOTO    ADDRESS
                      00075                 ENDM
                      00076 
                      00077 ;----------------------------------------------------------------------
                      00078 ; bne - Branch not equal
                      00079 
                      00080 BNE             MACRO   ADDRESS
                      00081                 BTFSS   STATUS, Z
                      00082                 GOTO    ADDRESS
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00083                 ENDM
                      00084 
                      00085 ;----------------------------------------------------------------------
                      00086 
                      00087 BEGINIF         MACRO
                      00088 _IFDEPTH += 1
                      00089 _LABELCOUNT += 1
                      00090 _IFNUM#V(_IFDEPTH) = _LABELCOUNT
                      00091                         ENDM
                      00092 
                      00093 ;----------------------------------------------------------------------
                      00094 ; ifweq - if W = <val> do block else do other block
                      00095 
                      00096 IFWEQ   MACRO   VAL
                      00097                 BEGINIF
                      00098                 SUBLW   VAL
                      00099                 BTFSS   STATUS, Z
                      00100                 GOTO    _IF#V(_IFNUM#V(_IFDEPTH))
                      00101                 ENDM
                      00102 
                      00103 IFWNE   MACRO   VAL
                      00104                 BEGINIF
                      00105                 SUBLW   VAL
                      00106                 BTFSC   STATUS, Z
                      00107                 GOTO    _IF#V(_IFNUM#V(_IFDEPTH))
                      00108                 ENDM
                      00109 
                      00110 ;----------------------------------------------------------------------
                      00111 ; ifeq - if <var> = <val> do block else do other block
                      00112 
                      00113 IFEQ    MACRO   VAR, VAL
                      00114                 BEGINIF
                      00115                 MOVFW   VAR
                      00116                 SUBLW   VAL
                      00117                 BTFSS   STATUS, Z
                      00118                 GOTO    _IF#V(_IFNUM#V(_IFDEPTH))
                      00119                 ENDM
                      00120 
                      00121 IFNE    MACRO   VAR, VAL
                      00122                 BEGINIF
                      00123                 MOVFW   VAR
                      00124                 SUBLW   VAL
                      00125                 BTFSC   STATUS, Z
                      00126                 GOTO    _IF#V(_IFNUM#V(_IFDEPTH))
                      00127                 ENDM
                      00128 
                      00129 IFGT    MACRO   VAR, VAL
                      00130                 BEGINIF
                      00131                 MOVFW   VAR
                      00132                 SUBLW   VAL
                      00133                 BTFSC   STATUS, C
                      00134                 GOTO    _IF#V(_IFNUM#V(_IFDEPTH))
                      00135                 ENDM
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00136 
                      00137 IFLT    MACRO   VAR, VAL
                      00138                 BEGINIF
                      00139                 MOVFW   VAR
                      00140                 SUBLW   VAL - 1
                      00141                 BTFSS   STATUS, C
                      00142                 GOTO    _IF#V(_IFNUM#V(_IFDEPTH))
                      00143                 ENDM
                      00144 
                      00145 IFLE    MACRO   VAR, VAL
                      00146                 BEGINIF
                      00147                 MOVFW   VAR
                      00148                 SUBLW   VAL
                      00149                 BTFSS   STATUS, C
                      00150                 GOTO    _IF#V(_IFNUM#V(_IFDEPTH))
                      00151                 ENDM
                      00152 
                      00153 IFZ             MACRO   
                      00154                 BEGINIF
                      00155                 BTFSS   STATUS, Z
                      00156                 GOTO    _IF#V(_IFNUM#V(_IFDEPTH))
                      00157                 ENDM
                      00158 
                      00159 IFNZ    MACRO   
                      00160                 BEGINIF
                      00161                 BTFSC   STATUS, Z
                      00162                 GOTO    _IF#V(_IFNUM#V(_IFDEPTH))
                      00163                 ENDM
                      00164 
                      00165 IFBS    MACRO   REG, BIT
                      00166                 BEGINIF
                      00167                 BTFSS   REG, BIT
                      00168                 GOTO    _IF#V(_IFNUM#V(_IFDEPTH))
                      00169                 ENDM
                      00170 
                      00171 IFBC    MACRO   REG, BIT
                      00172                 BEGINIF
                      00173                 BTFSC   REG, BIT
                      00174                 GOTO    _IF#V(_IFNUM#V(_IFDEPTH))
                      00175                 ENDM
                      00176 
                      00177 IFVGT   MACRO   REGA, REGB
                      00178                 BEGINIF
                      00179                 MOVF    REGA, W
                      00180                 SUBWF   REGB, W
                      00181                 BTFSC   STATUS, C
                      00182                 GOTO    _IF#V(_IFNUM#V(_IFDEPTH))
                      00183                 ENDM
                      00184 
                      00185 ELSE_   MACRO
                      00186 _LABELCOUNT += 1
                      00187                 GOTO    _IF#V(_LABELCOUNT)
                      00188 _IF#V(_IFNUM#V(_IFDEPTH))
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00189 _IFNUM#V(_IFDEPTH) = _LABELCOUNT
                      00190                 ENDM
                      00191 
                      00192 ENDIF_  MACRO
                      00193 _IF#V(_IFNUM#V(_IFDEPTH))
                      00194 _IFDEPTH -= 1
                      00195                 ENDM
                      00196 
                      00197 ;----------------------------------------------------------------------
                      00198 ; begin/endblock - housekeeping for the beginning and end of program blocks
                      00199 
                      00200 BEGINBLOCK      MACRO
                      00201 _BLOCKDEPTH += 1
                      00202 _LABELCOUNT += 1
                      00203 _BLOCKNUM#V(_BLOCKDEPTH) = _LABELCOUNT
                      00204                 ENDM
                      00205 
                      00206 ENDBLOCK        MACRO
                      00207 _ENDBLOCK#V(_BLOCKNUM#V(_BLOCKDEPTH))
                      00208 _BLOCKDEPTH -= 1
                      00209                 ENDM
                      00210 
                      00211 ;----------------------------------------------------------------------
                      00212 ; loop - loop endlessly
                      00213 
                      00214 LOOP            MACRO
                      00215                 BEGINBLOCK
                      00216 _LOOPTEST#V(_BLOCKNUM#V(_BLOCKDEPTH))
                      00217 _LOOP#V(_BLOCKNUM#V(_BLOCKDEPTH))
                      00218                 ENDM
                      00219 
                      00220 ENDLOOP         MACRO
                      00221                 REDO
                      00222                 ENDBLOCK
                      00223                 ENDM
                      00224 
                      00225 ;----------------------------------------------------------------------
                      00226 ; from - Count <var> down from <start> to zero
                      00227 
                      00228 FROM            MACRO   VAR, START
                      00229                 BEGINBLOCK
                      00230                 MOVLW   START
                      00231                 MOVWF   VAR
                      00232 _LOOP#V(_BLOCKNUM#V(_BLOCKDEPTH))
                      00233 _LOOPVAR#V(_BLOCKDEPTH) = VAR
                      00234                 ENDM
                      00235 
                      00236 ;----------------------------------------------------------------------
                      00237 ; from - Count <var> down from value in <reg> to zero
                      00238 
                      00239 FROMF           MACRO   VAR, REG
                      00240                 BEGINBLOCK
                      00241                 MOVFW   REG
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00242                 MOVWF   VAR
                      00243                 ADDLW   0                       ; Test for null loop
                      00244                 BTFSC   STATUS, Z
                      00245                 BREAK
                      00246 _LOOP#V(_BLOCKNUM#V(_BLOCKDEPTH))
                      00247 _LOOPVAR#V(_BLOCKDEPTH) = VAR
                      00248                 ENDM
                      00249 ;----------------------------------------------------------------------
                      00250 ; from - Count <var> down from value in W to zero
                      00251 
                      00252 FROMW           MACRO   VAR
                      00253                 BEGINBLOCK
                      00254                 MOVWF   VAR
                      00255                 ADDLW   0                       ; Test for null loop
                      00256                 BTFSC   STATUS, Z
                      00257                 BREAK
                      00258 _LOOP#V(_BLOCKNUM#V(_BLOCKDEPTH))
                      00259 _LOOPVAR#V(_BLOCKDEPTH) = VAR
                      00260                 ENDM
                      00261 
                      00262 ;----------------------------------------------------------------------
                      00263 
                      00264 ENDFROM         MACRO
                      00265 _LOOPTEST#V(_BLOCKNUM#V(_BLOCKDEPTH))
                      00266                 DECFSZ  _LOOPVAR#V(_BLOCKDEPTH), F
                      00267                 REDO
                      00268                 ENDBLOCK
                      00269                 ENDM
                      00270 
                      00271 ;----------------------------------------------------------------------
                      00272 ; from16 - Count 16bit <var> down from <start> to zero
                      00273 
                      00274 FROM16          MACRO   VAR, START
                      00275                 BEGINBLOCK
                      00276                 MOVLW   LOW START
                      00277                 MOVWF   VAR
                      00278                 MOVLW   HIGH (START - 1) + 1
                      00279                 MOVWF   VAR + 1
                      00280 _LOOP#V(_BLOCKNUM#V(_BLOCKDEPTH))
                      00281 _LOOPVAR#V(_BLOCKDEPTH) = VAR
                      00282                 ENDM
                      00283 
                      00284 ENDFROM16       MACRO
                      00285 _LOOPTEST#V(_BLOCKNUM#V(_BLOCKDEPTH))
                      00286                 DECFSZ  _LOOPVAR#V(_BLOCKDEPTH), F
                      00287                  REDO
                      00288                 DECFSZ  _LOOPVAR#V(_BLOCKDEPTH) + 1, F
                      00289                  REDO
                      00290                 ENDBLOCK
                      00291                 ENDM
                      00292 
                      00293 ;----------------------------------------------------------------------
                      00294 ; for - loop <var> from <start> to <stop> inclusive
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00295 
                      00296 FOR             MACRO   VAR, START, STOP
                      00297                 BEGINBLOCK
                      00298                 MOVLW   START
                      00299                 MOVWF   VAR
                      00300                 GOTO    $ + 2           ; skip over the increment first time
                      00301 _LOOPTEST#V(_BLOCKNUM#V(_BLOCKDEPTH))
                      00302                 IF STOP > START         ; increment or decrement
                      00303                  INCF   VAR, F
                      00304                  MOVFW  VAR
                      00305                  SUBLW  STOP
                      00306                  BTFSS  STATUS, C
                      00307                 ELSE
                      00308                  DECF   VAR, F
                      00309                  MOVFW  VAR
                      00310                  SUBLW  STOP - 1
                      00311                  BTFSC  STATUS, C
                      00312                 ENDIF
                      00313                 BREAK
                      00314 _LOOP#V(_BLOCKNUM#V(_BLOCKDEPTH))
                      00315 _LOOPVAR#V(_BLOCKDEPTH) = VAR
                      00316                 ENDM
                      00317 
                      00318 NEXT            MACRO
                      00319                 CONTINUE
                      00320                 ENDBLOCK
                      00321                 ENDM
                      00322 
                      00323 ;----------------------------------------------------------------------
                      00324 ; break - break out of the current block
                      00325 
                      00326 BREAK           MACRO
                      00327                 GOTO    _ENDBLOCK#V(_BLOCKNUM#V(_BLOCKDEPTH))
                      00328                 ENDM
                      00329 
                      00330 ;----------------------------------------------------------------------
                      00331 ; continue - jump to the next loop iteration
                      00332 
                      00333 CONTINUE        MACRO
                      00334                 GOTO    _LOOPTEST#V(_BLOCKNUM#V(_BLOCKDEPTH))
                      00335                 ENDM
                      00336 
                      00337 ;----------------------------------------------------------------------
                      00338 ; redo - jump to the beginning of the block bypassing any loop test code
                      00339 
                      00340 REDO            MACRO
                      00341                 GOTO _LOOP#V(_BLOCKNUM#V(_BLOCKDEPTH))
                      00342                 ENDM
                      00343 
                      00344 ;----------------------------------------------------------------------
                      00345 ; switch/case - simulates C-style switch and case statements.  Value
                      00346 ; to be tested is in W.  break is used to exit each case.
                      00347 
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00348 SWITCH  MACRO
                      00349 _CASECOUNT += 1
                      00350 _LABELCOUNT += 1
                      00351 _SWITCHDEPTH += 1
                      00352 _SWITCHNUM#V(_SWITCHDEPTH) = _LABELCOUNT
                      00353                 ENDM
                      00354 
                      00355 ENDSWITCH       MACRO
                      00356 _ENDSWITCH#V(_SWITCHNUM#V(_SWITCHDEPTH))
                      00357 _CASE#V(_CASECOUNT)
                      00358 _SWITCHDEPTH -= 1
                      00359                 ENDM
                      00360 
                      00361 CASE            MACRO   VAL
                      00362 _CASEVAL = VAL
                      00363                 XORLW   VAL
                      00364                 BNE     _CASE#V(_CASECOUNT)
                      00365                 ENDM
                      00366 
                      00367 ENDCASE         MACRO
                      00368                 GOTO    _ENDSWITCH#V(_SWITCHNUM#V(_SWITCHDEPTH))
                      00369 _CASE#V(_CASECOUNT)
                      00370 _CASECOUNT += 1
                      00371                 XORLW   _CASEVAL                ; restore previous value of W
                      00372                 ENDM
                      00373 
                      00374 DEFAULT         MACRO
                      00375                 ENDM
                      00376                 
                      00126 
                      00127 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      00128 ; This block of data gets transferred back and forth over the serial
                      00129 ; port 
                      00130 ;
                      00131 ; Some entries are unused:
                      00132 ; - beep_space_lv
                      00133 ; - beep_freq_loop_h
                      00134 ;
                      00135 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      00136         CBLOCK  0X20
                      00137 
  00000020            00138         CALLSIGN: 0X20          ;  message area
  00000040            00139         F2                      ;  Frequency
  00000041            00140         F1
  00000042            00141         F0
  00000043            00142         POWER_OUT               ; power amplifier setting
  00000044            00143         BEEP_TONE               ; freq (tone) of beep
  00000045            00144         BEEP_LEN                ; length of beep
  00000046            00145         BEEP_NUM                ; number of beeps between morse
  00000047            00146         BEEP_SPACE              ; time between beeps
  00000048            00147         BEEP_FREQ_H             ; Beep pitch high
  00000049            00148         BEEP_FREQ               ; Beep pitch
  0000004A            00149         BEEP_FREQ_LOOP_H        ; timing loop
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000004B            00150         BEEP_FREQ_LOOP          ; timing loop
  0000004C            00151         MORSE_FREQ_H            ; morse pitch high
  0000004D            00152         MORSE_FREQ              ; morse pitch
  0000004E            00153         MORSE_FREQ_LOOP         ; timing loop;
  0000004F            00154         BEEP_SPACE_LV           ; time between beeps when voltage is low
  00000050            00155         OPTIONS
                      00156 
  00000051            00157         V_CUTOFFH               ; trigger for low V operation
  00000052            00158         V_CUTOFF                ; trigger for low V operation
                      00159 
  00000053            00160         TIME2                   ; elapsed time
  00000054            00161         TIME1
  00000055            00162         TIME0
  00000056            00163         ADRESULTHI              ; A/D Conversion result
  00000057            00164         ADRESULTLO               
                      00165 
                      00166 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      00167 ;
                      00168 ; This is the end of the image that gets transferred on a "read" command
                      00169 ; 
                      00170 ; general purpose variables follow
                      00171 ;
                      00172 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  00000058            00173         WTEMP
  00000059            00174         OUTDATA
  0000005A            00175         OUTADDR
  0000005B            00176         STATUSTEMP
                      00177         
  0000005C            00178         DELAY1 
  0000005D            00179         MSGREG0
  0000005E            00180         MSGREG1
  0000005F            00181         DIDAH
  00000060            00182         SEND
                      00183         
  00000061            00184         DELAY2
  00000062            00185         D100_H
  00000063            00186         D100
  00000064            00187         D250_H
  00000065            00188         D250
  00000066            00189         D5
  00000067            00190         I:2
  00000069            00191         J
  0000006A            00192         K
  0000006B            00193         PAUSE_I
  0000006C            00194         F_DIVHI         ; for the divide routines
  0000006D            00195         F_DIVLO         
  0000006E            00196         CLK_STATE
                      00197     ENDC
                      00198 
  00000038            00199 PROGRAM_LENGTH EQU  ADRESULTLO - CALLSIGN + 1
  00000033            00200 PROGRAM_PGM_LENGTH EQU PROGRAM_LENGTH -5 
                      00201 
                      00202 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00203 ; cc0105f:  Read from flash, write to cc1050;
                      00204 
                      00205 CC1050F MACRO ADDR0, EEADDR0,  
                      00206         MOVLW ADDR0
                      00207         MOVWF OUTADDR
                      00208 
                      00209         MOVLW EEADDR0
                      00210 
                      00211         BANKSEL EEADR
                      00212 ;       bsf status, RP0
                      00213 ;       bcf status, RP1
                      00214         MOVWF EEADR
                      00215         BCF EECON1, EEPGD
                      00216         BSF EECON1, RD
                      00217 
                      00218         MOVF EEDAT, W
                      00219 
                      00220         BANKSEL OUTDATA
                      00221         MOVWF OUTDATA
                      00222 
                      00223         CALL WRITE_ADDR_DATA
                      00224     ENDM
                      00225 
                      00226 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      00227 ; cc0105r:  Read from register, write to cc1050;
                      00228 
                      00229 CC1050R MACRO ADDR0, RADDR0,  
                      00230         MOVLW ADDR0
                      00231         MOVWF OUTADDR
                      00232 
                      00233         MOVFW RADDR0
                      00234         MOVWF OUTDATA
                      00235 
                      00236         CALL WRITE_ADDR_DATA
                      00237     ENDM
                      00238 
                      00239 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      00240 ; cc0105:  Read from immediate, write to cc1050;
                      00241 
                      00242 CC1050 MACRO ADDR0, DATA0 
                      00243 ;
                      00244         MOVLW ADDR0
                      00245         MOVWF OUTADDR
                      00246         MOVLW DATA0
                      00247         MOVWF OUTDATA
                      00248         CALL WRITE_ADDR_DATA
                      00249     ENDM
                      00250 
                      00251 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      00252 ; Begin Program Memory
                      00253 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      00254         ORG             0X000           ;RESET Vector
0000   0000           00255         NOP                             ;for ICD use
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001   2???           00256         GOTO            S0              ;Initialize the chip in State 0
                      00257 
                      00258         ORG             0X004           ;Interrupt Vector
0004   00D8           00259         MOVWF           WTEMP           ;Save W register
0005   0E03           00260         SWAPF           STATUS, W       ;Swap status to be saved into W
0006   00DB           00261         MOVWF           STATUSTEMP      ;Save STATUS register
                      00262 ;
                      00263 ; DISABLE INTERRUPTS
                      00264 ;
0007   130B           00265         BCF  INTCON, 6
                      00266 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      00267         
                      00268         IFBS INTCON, RAIF
                          M                 BEGINIF
  00000001                M _IFDEPTH += 1
  00000001                M _LABELCOUNT += 1
  00000001                M _IFNUM1            = _LABELCOUNT
0008   1C0B               M                 BTFSS   INTCON, RAIF
0009   2???               M                 GOTO    _IF1
                      00269         
000A   2???           00270         CALL SER_IN
000B   100B           00271         BCF INTCON, RAIF
                      00272         ENDIF_
000C                      M _IF1
  00000000                M _IFDEPTH -= 1
                      00273 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      00274 
                      00275         IFBS PIR1, 0
                          M                 BEGINIF
  00000001                M _IFDEPTH += 1
  00000002                M _LABELCOUNT += 1
  00000002                M _IFNUM1            = _LABELCOUNT
000C   1C0C               M                 BTFSS   PIR1, 0
000D   2???               M                 GOTO    _IF2
000E   2???           00276         CALL CLKINT
000F   100C           00277         BCF PIR1, 0
                      00278         ENDIF_
0010                      M _IF2
  00000000                M _IFDEPTH -= 1
                      00279 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      00280 
                      00281 ;
                      00282 ; re-enable Interrupts
                      00283 ;
0010   170B           00284         BSF  INTCON, 6
                      00285 
0011   0E5B           00286         SWAPF   STATUSTEMP, W   ; swap status_temp into W, sets Bank to original state
0012   0083           00287         MOVWF   STATUS          ; restore STATUS register
0013   0ED8           00288         SWAPF   WTEMP, F
0014   0E58           00289         SWAPF   WTEMP, W        ; restore W register
0015   0009           00290         RETFIE
                      00291 
                      00292 ;=========================================================== 
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00293 ;       w contains a number 0 to 9, returns morse 
                      00294 ;       character for w
                      00295 
0016                  00296 MSG             
0016   0084           00297         MOVWF FSR
0017   0800           00298         MOVFW INDF
0018   0008           00299         RETURN
                      00300 
0019   0782           00301         ADDWF   PC,F        
                      00302 
                      00303   
                      00304 
001A                  00305 GET_VERSION
001A                  00306 TABLE
001A   0782           00307         ADDWF PCL, F
001B   3430 3431 3430 00308         DT VERSION, 0
       3435 3400 
0020                  00309 TABLEEND
0020                  00310 GET_MODEL
0020   0782           00311         ADDWF PCL, F
0021   3442 344C 3454 00312         DT MODEL, 0
       3458 3430 3400 
                      00313 
                      00314 
                      00315 
                      00316 
0027                  00317 MSGNUM
0027   0782           00318         ADDWF PC, F
0028   34FC           00319         RETLW M0
0029   347C           00320         RETLW M1
002A   343C           00321         RETLW M2
002B   341C           00322         RETLW M3
002C   340C           00323         RETLW M4
002D   3404           00324         RETLW M5
002E   3484           00325         RETLW M6
002F   34C4           00326         RETLW M7
0030   34E4           00327         RETLW M8
0031   34F4           00328         RETLW M9
                      00329 
                      00330 
                      00331 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      00332 ;Subroutine: S0, State 0
                      00333 ;
                      00334 ;Description: Initialize the chip
                      00335 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
0032                  00336 S0
                      00337 
                      00338 ;PortA/C Init code
0032   1683 1303      00339         BANKSEL TRISA
                      00340 
0034   3009           00341         MOVLW TRIS_PORTA                ; 1 means input
0035   0085           00342         MOVWF TRISA                     ; 
                      00343 
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00344 
0036   3039           00345         MOVLW TRIS_PORTC                ; 1 means input
0037   0087           00346         MOVWF TRISC     
                      00347 
0038   1683 1303      00348         BANKSEL OPTION_REG
003A   1381           00349         BCF     OPTION_REG, 7
                      00350 
003B   1683 1303      00351         BANKSEL WPUA
003D   1415           00352         BSF     WPUA, 0
                      00353         
003E   1283 1303      00354         BANKSEL PORTA   ; 
0040   0185           00355         CLRF PORTA
0041   0187           00356         CLRF PORTC
                      00357 
                      00358 
0042   3007           00359         MOVLW 0X07                      ; Comparators off;
0043   0099           00360         MOVWF CMCON0
                      00361 
0044   1683           00362         BSF STATUS, RP0
0045   3010           00363         MOVLW 0X10
0046   0091           00364         MOVWF ANSEL                     ; AN4 (C0) is an analog input
0047   1283           00365         BCF STATUS, RP0
                      00366 
0048   2???           00367         CALL READ_PROGRAM
                      00368 
                      00369 
                      00370 ;       clrf time0
                      00371 ;       clrf time1
0049   01EE           00372         CLRF CLK_STATE
                      00373 
                      00374 ; Set AD to zero, so if we read before we convert, we get 0.
                      00375 ;
004A   3000           00376         MOVLW 0X00
004B   00D6           00377         MOVWF ADRESULTHI
004C   00D7           00378         MOVWF ADRESULTLO
                      00379 
                      00380 #IF SER_DRIVER
004D   1485           00381         BSF             SEROUT_PIN; for use w/o inverted
                      00382 #ELSE
                      00383         BCF             SEROUT_PIN;
                      00384 #ENDIF
                      00385 
                      00386 ; this code is unnecessary !!!
                      00387         #IF 1
004E   2???           00388         CALL SER_ENABLE
004F   1074           00389         BCF SER_CON, SER_READY
                      00390         #ENDIF
                      00391 
                      00392 ;
                      00393 ; before we do ANYTHING, sit here for 5 seconds and wait for an input character
                      00394 ;
                      00395 
                      00396         FOR K, 0, 50
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                 BEGINBLOCK
  00000001                M _BLOCKDEPTH += 1
  00000003                M _LABELCOUNT += 1
  00000003                M _BLOCKNUM1               = _LABELCOUNT
0050   3000               M                 MOVLW   0
0051   00EA               M                 MOVWF   K
0052   2???               M                 GOTO    $ + 2           ; skip over the increment first time
0053                      M _LOOPTEST3
                          M                 IF 50   > 0             ; increment or decrement
0053   0AEA               M                  INCF   K,   F
0054   086A               M                  MOVFW  K
0055   3C50               M                  SUBLW  50
0056   1C03               M                  BTFSS  STATUS, C
                          M                 ELSE
                          M                  DECF   K,   F
                          M                  MOVFW  K
                          M                  SUBLW  50   - 1
                          M                  BTFSC  STATUS, C
                          M                 ENDIF
                          M                 BREAK
0057   2???               M                 GOTO    _ENDBLOCK3
0058                      M _LOOP3
  0000006A                M _LOOPVAR1               = K
0058   2???           00397           CALL  W100MS          ; wait 100mS 
0059   1283 1303      00398           BANKSEL SER_CON
005B                  00399 AGAIN_H1
005B   1874           00400           BTFSC SER_CON, SER_READY
005C   2???           00401           GOTO CMD_DISPATCH_H1  ; char available
005D   2???           00402           GOTO CONTINUE10               ; no char
                      00403 
                      00404 
005E                  00405 CMD_DISPATCH_H1
005E   2???           00406           CALL CMD_DISPATCH
005F   2???           00407           GOTO AGAIN_H1                 ; if illegal character, discard
                      00408 
0060                  00409 CONTINUE10
                      00410         NEXT
                          M                 CONTINUE
0060   2???               M                 GOTO    _LOOPTEST3
                          M                 ENDBLOCK
0061                      M _ENDBLOCK3
  00000000                M _BLOCKDEPTH -= 1
                      00411 
                      00412 ;;;;;;
                      00413 ;
                      00414 ; Enable timer interrupts if options allow
                      00415 
0061   19D0           00416         BTFSC   OPTIONS,3       ; SKIP timer init if set.
0062   2???           00417         GOTO BEACON_START
                      00418 
0063   3031           00419         MOVLW 0X31              
0064   0090           00420         MOVWF T1CON             ; 8/1 pre-scaler
                      00421 
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0065   170B           00422         BSF INTCON, 6
                      00423 
0066   1683 1303      00424         BANKSEL PIE1
0068   140C           00425         BSF PIE1, 0
0069   1283 1303      00426         BANKSEL TMR0
                      00427 
006B   2???           00428         GOTO BEACON_START
                      00429 
                      00430 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00431 
006C                  00432 CMD_DISPATCH
                      00433 
006C   2???           00434         CALL SER_GET
                      00435         BANK00
                          M 
006D   1283               M                 BCF     STATUS, RP0
006E   1303               M                 BCF     STATUS, RP1
                          M 
                      00436         SWITCH 
  00000001                M _CASECOUNT += 1
  00000004                M _LABELCOUNT += 1
  00000001                M _SWITCHDEPTH += 1
  00000004                M _SWITCHNUM1                = _LABELCOUNT
                      00437 
                      00438           CASE 'M'
  0000004D                M _CASEVAL = 'M'
006F   3A4D               M                 XORLW   'M'
                          M                 BNE     _CASE1
0070   1D03               M                 BTFSS   STATUS, Z
0071   2???               M                 GOTO    _CASE1
0072   2???           00439                 GOTO CMD_MODEL
                      00440           ENDCASE                       
0073   2???               M                 GOTO    _ENDSWITCH4
0074                      M _CASE1
  00000002                M _CASECOUNT += 1
0074   3A4D               M                 XORLW   _CASEVAL                ; restore previous value of W
                      00441 
                      00442           CASE 'V'
  00000056                M _CASEVAL = 'V'
0075   3A56               M                 XORLW   'V'
                          M                 BNE     _CASE2
0076   1D03               M                 BTFSS   STATUS, Z
0077   2???               M                 GOTO    _CASE2
0078   2???           00443                 GOTO CMD_VERSION
                      00444           ENDCASE                       
0079   2???               M                 GOTO    _ENDSWITCH4
007A                      M _CASE2
  00000003                M _CASECOUNT += 1
007A   3A56               M                 XORLW   _CASEVAL                ; restore previous value of W
                      00445 
                      00446           CASE 'T'
  00000054                M _CASEVAL = 'T'
007B   3A54               M                 XORLW   'T'
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                 BNE     _CASE3
007C   1D03               M                 BTFSS   STATUS, Z
007D   2???               M                 GOTO    _CASE3
007E   2???           00447                 GOTO CMD_TEXT_DUMP
                      00448           ENDCASE                       
007F   2???               M                 GOTO    _ENDSWITCH4
0080                      M _CASE3
  00000004                M _CASECOUNT += 1
0080   3A54               M                 XORLW   _CASEVAL                ; restore previous value of W
                      00449 
                      00450           CASE 'P'
  00000050                M _CASEVAL = 'P'
0081   3A50               M                 XORLW   'P'
                          M                 BNE     _CASE4
0082   1D03               M                 BTFSS   STATUS, Z
0083   2???               M                 GOTO    _CASE4
0084   2???           00451                 GOTO CMD_TEXT_PGM
                      00452           ENDCASE
0085   2???               M                 GOTO    _ENDSWITCH4
0086                      M _CASE4
  00000005                M _CASECOUNT += 1
0086   3A50               M                 XORLW   _CASEVAL                ; restore previous value of W
                      00453 
                      00454           CASE 'G'
  00000047                M _CASEVAL = 'G'
0087   3A47               M                 XORLW   'G'
                          M                 BNE     _CASE5
0088   1D03               M                 BTFSS   STATUS, Z
0089   2???               M                 GOTO    _CASE5
                      00455                 ;goto S0
008A   2???           00456                 GOTO BEACON_START
                      00457           ENDCASE
008B   2???               M                 GOTO    _ENDSWITCH4
008C                      M _CASE5
  00000006                M _CASECOUNT += 1
008C   3A47               M                 XORLW   _CASEVAL                ; restore previous value of W
                      00458 
                      00459           CASE 'S'
  00000053                M _CASEVAL = 'S'
008D   3A53               M                 XORLW   'S'
                          M                 BNE     _CASE6
008E   1D03               M                 BTFSS   STATUS, Z
008F   2???               M                 GOTO    _CASE6
0090   2???           00460                 GOTO CMD_READ_SERIALNUM
                      00461           ENDCASE
0091   2???               M                 GOTO    _ENDSWITCH4
0092                      M _CASE6
  00000007                M _CASECOUNT += 1
0092   3A53               M                 XORLW   _CASEVAL                ; restore previous value of W
                      00462 
                      00463           CASE 'C'
  00000043                M _CASEVAL = 'C'
0093   3A43               M                 XORLW   'C'
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                 BNE     _CASE7
0094   1D03               M                 BTFSS   STATUS, Z
0095   2???               M                 GOTO    _CASE7
0096   2???           00464                 GOTO CMD_READ_CALLSIGN
                      00465           ENDCASE
0097   2???               M                 GOTO    _ENDSWITCH4
0098                      M _CASE7
  00000008                M _CASECOUNT += 1
0098   3A43               M                 XORLW   _CASEVAL                ; restore previous value of W
                      00466 
                      00467           CASE 'Z'
  0000005A                M _CASEVAL = 'Z'
0099   3A5A               M                 XORLW   'Z'
                          M                 BNE     _CASE8
009A   1D03               M                 BTFSS   STATUS, Z
009B   2???               M                 GOTO    _CASE8
009C   2???           00468                 GOTO CMD_ZERO_TIME
                      00469           ENDCASE
009D   2???               M                 GOTO    _ENDSWITCH4
009E                      M _CASE8
  00000009                M _CASECOUNT += 1
009E   3A5A               M                 XORLW   _CASEVAL                ; restore previous value of W
                      00470 
                      00471           CASE 'U'
  00000055                M _CASEVAL = 'U'
009F   3A55               M                 XORLW   'U'
                          M                 BNE     _CASE9
00A0   1D03               M                 BTFSS   STATUS, Z
00A1   2???               M                 GOTO    _CASE9
00A2   2???           00472                 GOTO CMD_UPDATE_SERIAL
                      00473           ENDCASE
00A3   2???               M                 GOTO    _ENDSWITCH4
00A4                      M _CASE9
  0000000A                M _CASECOUNT += 1
00A4   3A55               M                 XORLW   _CASEVAL                ; restore previous value of W
                      00474 
                      00475 ; what do we do if we get a bogus character?  Let's start all over again.
                      00476 ; 
                      00477 ; no wait, let's just return
                      00478 
00A5   0008           00479           RETURN
                      00480 
00A6   2???           00481           GOTO S0
                      00482           ENDSWITCH
00A7                      M _ENDSWITCH4
00A7                      M _CASE10
  00000000                M _SWITCHDEPTH -= 1
                      00483 
00A7                  00484 CMD_READ_SERIALNUM
                      00485 
00A7   1283           00486         BANK0
                      00487         FOR K, SERIALNUM, SERIALNUM+4
                          M                 BEGINBLOCK
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000001                M _BLOCKDEPTH += 1
  00000005                M _LABELCOUNT += 1
  00000005                M _BLOCKNUM1               = _LABELCOUNT
00A8   30??               M                 MOVLW   SERIALNUM
00A9   00EA               M                 MOVWF   K
00AA   2???               M                 GOTO    $ + 2           ; skip over the increment first time
00AB                      M _LOOPTEST5
Error[151]  : Operand contains unresolvable labels or is too complex
                          M                 IF SERIALNUM+4 > SERIALNUM ; increment or decrement
                          M                  INCF   K,   F
                          M                  MOVFW  K
                          M                  SUBLW  SERIALNUM+4
                          M                  BTFSS  STATUS, C
                          M                 ELSE
00AB   03EA               M                  DECF   K,   F
00AC   086A               M                  MOVFW  K
Error[151]  : Operand contains unresolvable labels or is too complex
00AD   3C00               M                  SUBLW  SERIALNUM+4 - 1
00AE   1803               M                  BTFSC  STATUS, C
                          M                 ENDIF
                          M                 BREAK
00AF   2???               M                 GOTO    _ENDBLOCK5
00B0                      M _LOOP5
  0000006A                M _LOOPVAR1               = K
00B0   086A           00488                 MOVFW K
00B1   1683 1303      00489                 BANKSEL EEADR
00B3   009B           00490                 MOVWF   EEADR
                      00491                 BANK00
                          M 
00B4   1283               M                 BCF     STATUS, RP0
00B5   1303               M                 BCF     STATUS, RP1
                          M 
00B6   2???           00492                 CALL FLASH_READ
00B7   2???           00493                 CALL SER_OUT
                      00494         NEXT
                          M                 CONTINUE
00B8   2???               M                 GOTO    _LOOPTEST5
                          M                 ENDBLOCK
00B9                      M _ENDBLOCK5
  00000000                M _BLOCKDEPTH -= 1
00B9   2???           00495         GOTO CMD_OK
                      00496 
00BA                  00497 CMD_READ_CALLSIGN
00BA   1283           00498         BANK0
                      00499         FOR K, SCALL, SCALL+5
                          M                 BEGINBLOCK
  00000001                M _BLOCKDEPTH += 1
  00000006                M _LABELCOUNT += 1
  00000006                M _BLOCKNUM1               = _LABELCOUNT
00BB   30??               M                 MOVLW   SCALL
00BC   00EA               M                 MOVWF   K
00BD   2???               M                 GOTO    $ + 2           ; skip over the increment first time
00BE                      M _LOOPTEST6
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Error[151]  : Operand contains unresolvable labels or is too complex
                          M                 IF SCALL+5 > SCALL      ; increment or decrement
                          M                  INCF   K,   F
                          M                  MOVFW  K
                          M                  SUBLW  SCALL+5
                          M                  BTFSS  STATUS, C
                          M                 ELSE
00BE   03EA               M                  DECF   K,   F
00BF   086A               M                  MOVFW  K
Error[151]  : Operand contains unresolvable labels or is too complex
00C0   3C00               M                  SUBLW  SCALL+5 - 1
00C1   1803               M                  BTFSC  STATUS, C
                          M                 ENDIF
                          M                 BREAK
00C2   2???               M                 GOTO    _ENDBLOCK6
00C3                      M _LOOP6
  0000006A                M _LOOPVAR1               = K
00C3   086A           00500                 MOVFW K
00C4   1683 1303      00501                 BANKSEL EEADR
00C6   009B           00502                 MOVWF   EEADR
                      00503         BANK00
                          M 
00C7   1283               M                 BCF     STATUS, RP0
00C8   1303               M                 BCF     STATUS, RP1
                          M 
00C9   2???           00504                 CALL FLASH_READ
00CA   2???           00505                 CALL SER_OUT
                      00506         NEXT
                          M                 CONTINUE
00CB   2???               M                 GOTO    _LOOPTEST6
                          M                 ENDBLOCK
00CC                      M _ENDBLOCK6
  00000000                M _BLOCKDEPTH -= 1
00CC   2???           00507         GOTO CMD_OK
                      00508 
00CD                  00509 CMD_ZERO_TIME
                      00510         FOR K, EETIME2, EETIME0
                          M                 BEGINBLOCK
  00000001                M _BLOCKDEPTH += 1
  00000007                M _LABELCOUNT += 1
  00000007                M _BLOCKNUM1               = _LABELCOUNT
00CD   30??               M                 MOVLW   EETIME2
00CE   00EA               M                 MOVWF   K
00CF   2???               M                 GOTO    $ + 2           ; skip over the increment first time
00D0                      M _LOOPTEST7
Error[151]  : Operand contains unresolvable labels or is too complex
                          M                 IF EETIME0 > EETIME2    ; increment or decrement
                          M                  INCF   K,   F
                          M                  MOVFW  K
                          M                  SUBLW  EETIME0
                          M                  BTFSS  STATUS, C
                          M                 ELSE
00D0   03EA               M                  DECF   K,   F
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00D1   086A               M                  MOVFW  K
00D2   3C??               M                  SUBLW  EETIME0 - 1
00D3   1803               M                  BTFSC  STATUS, C
                          M                 ENDIF
                          M                 BREAK
00D4   2???               M                 GOTO    _ENDBLOCK7
00D5                      M _LOOP7
  0000006A                M _LOOPVAR1               = K
00D5   086A           00511                 MOVFW K
00D6   1683 1303      00512                 BANKSEL EEADR
00D8   009B           00513                 MOVWF EEADR
                      00514                 BANK00
                          M 
00D9   1283               M                 BCF     STATUS, RP0
00DA   1303               M                 BCF     STATUS, RP1
                          M 
00DB   3000           00515                 MOVLW 0
00DC   2???           00516                 CALL FLASH_WRITE
                      00517         NEXT
                          M                 CONTINUE
00DD   2???               M                 GOTO    _LOOPTEST7
                          M                 ENDBLOCK
00DE                      M _ENDBLOCK7
  00000000                M _BLOCKDEPTH -= 1
                      00518         BANK00
                          M 
00DE   1283               M                 BCF     STATUS, RP0
00DF   1303               M                 BCF     STATUS, RP1
                          M 
00E0   3000           00519         MOVLW 0
00E1   00D3           00520         MOVWF TIME2
00E2   00D4           00521         MOVWF TIME1
00E3   00D5           00522         MOVWF TIME0
00E4   2???           00523         GOTO CMD_OK
                      00524                 
                      00525 
                      00526 
                      00527 ;; the default here should be to go to S0 if we get an illegal character.
                      00528 
00E5                  00529 CMD_UPDATE_SERIAL
                      00530 
00E5   300A           00531         MOVLW 0X0A 
00E6   2???           00532         CALL SER_OUT
00E7   300D           00533         MOVLW  0X0D
00E8   2???           00534         CALL SER_OUT
                      00535         BANK00
                          M 
00E9   1283               M                 BCF     STATUS, RP0
00EA   1303               M                 BCF     STATUS, RP1
                          M 
                      00536 
00EB   1283 1303      00537         BANKSEL CALLSIGN
00ED   3020           00538         MOVLW CALLSIGN
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00EE   0084           00539         MOVWF FSR
                      00540 
                      00541         FOR I,0, 9              ;;6 callsign charas + 4 sernum
                          M                 BEGINBLOCK
  00000001                M _BLOCKDEPTH += 1
  00000008                M _LABELCOUNT += 1
  00000008                M _BLOCKNUM1               = _LABELCOUNT
00EF   3000               M                 MOVLW   0
00F0   00E7               M                 MOVWF   I
00F1   2???               M                 GOTO    $ + 2           ; skip over the increment first time
00F2                      M _LOOPTEST8
                          M                 IF 9    > 0             ; increment or decrement
00F2   0AE7               M                  INCF   I,   F
00F3   0867               M                  MOVFW  I
00F4   3C09               M                  SUBLW  9
00F5   1C03               M                  BTFSS  STATUS, C
                          M                 ELSE
                          M                  DECF   I,   F
                          M                  MOVFW  I
                          M                  SUBLW  9    - 1
                          M                  BTFSC  STATUS, C
                          M                 ENDIF
                          M                 BREAK
00F6   2???               M                 GOTO    _ENDBLOCK8
00F7                      M _LOOP8
  00000067                M _LOOPVAR1               = I
00F7   1283 1303      00542                 BANKSEL SER_CON
00F9   1C74           00543                 BTFSS SER_CON, SER_READY
00FA   2???           00544                 GOTO $-1
                      00545 
00FB   2???           00546                 CALL SER_GET    
                      00547                 BANK00
                          M 
00FC   1283               M                 BCF     STATUS, RP0
00FD   1303               M                 BCF     STATUS, RP1
                          M 
00FE   0080           00548                 MOVWF INDF
00FF   0A84           00549                 INCF FSR, F
                      00550     NEXT        
                          M                 CONTINUE
0100   2???               M                 GOTO    _LOOPTEST8
                          M                 ENDBLOCK
0101                      M _ENDBLOCK8
  00000000                M _BLOCKDEPTH -= 1
0101   2???           00551         CALL WRITE_SERIAL
0102   2???           00552         CALL READ_PROGRAM       ;now restore the data we trashed
0103   2???           00553         GOTO CMD_OK
                      00554 
0104                  00555 CMD_TEXT_PGM
                      00556 
0104   300A           00557         MOVLW 0X0A 
0105   2???           00558         CALL SER_OUT
0106   300D           00559         MOVLW  0X0D
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0107   2???           00560         CALL SER_OUT
                      00561         BANK00
                          M 
0108   1283               M                 BCF     STATUS, RP0
0109   1303               M                 BCF     STATUS, RP1
                          M 
                      00562 
010A   1283 1303      00563         BANKSEL CALLSIGN
010C   3020           00564         MOVLW CALLSIGN
010D   0084           00565         MOVWF FSR
                      00566 
                      00567         FOR I,0, PROGRAM_PGM_LENGTH-1
                          M                 BEGINBLOCK
  00000001                M _BLOCKDEPTH += 1
  00000009                M _LABELCOUNT += 1
  00000009                M _BLOCKNUM1               = _LABELCOUNT
010E   3000               M                 MOVLW   0
010F   00E7               M                 MOVWF   I
0110   2???               M                 GOTO    $ + 2           ; skip over the increment first time
0111                      M _LOOPTEST9
                          M                 IF PROGRAM_PGM_LENGTH-1 > 0 ; increment or decrement
0111   0AE7               M                  INCF   I,   F
0112   0867               M                  MOVFW  I
0113   3C32               M                  SUBLW  PROGRAM_PGM_LENGTH-1
0114   1C03               M                  BTFSS  STATUS, C
                          M                 ELSE
                          M                  DECF   I,   F
                          M                  MOVFW  I
                          M                  SUBLW  PROGRAM_PGM_LENGTH-1 - 1
                          M                  BTFSC  STATUS, C
                          M                 ENDIF
                          M                 BREAK
0115   2???               M                 GOTO    _ENDBLOCK9
0116                      M _LOOP9
  00000067                M _LOOPVAR1               = I
0116   1283 1303      00568                 BANKSEL SER_CON
0118   1C74           00569                 BTFSS SER_CON, SER_READY
0119   2???           00570                 GOTO $-1
                      00571 
011A   2???           00572                 CALL SER_GET    
                      00573                 BANK00
                          M 
011B   1283               M                 BCF     STATUS, RP0
011C   1303               M                 BCF     STATUS, RP1
                          M 
011D   0080           00574                 MOVWF INDF
011E   0A84           00575                 INCF FSR, F
                      00576         NEXT    
                          M                 CONTINUE
011F   2???               M                 GOTO    _LOOPTEST9
                          M                 ENDBLOCK
0120                      M _ENDBLOCK9
  00000000                M _BLOCKDEPTH -= 1
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0120   2???           00577         CALL WRITE_PROGRAM
0121   2???           00578         GOTO CMD_OK
                      00579 
                      00580 
0122                  00581 CMD_TEXT_DUMP
                      00582 
0122   2???           00583         CALL AD_CONVERT ;; this used to be just before goto cmd_ok
                      00584                         ;; need to move here to guarantee valid values
                      00585 
0123   1283 1303      00586         BANKSEL CALLSIGN
                      00587 
0125   3020           00588         MOVLW CALLSIGN
0126   0084           00589         MOVWF FSR
                      00590 
                      00591         FOR I, 0, PROGRAM_LENGTH-1
                          M                 BEGINBLOCK
  00000001                M _BLOCKDEPTH += 1
  0000000A                M _LABELCOUNT += 1
  0000000A                M _BLOCKNUM1               = _LABELCOUNT
0127   3000               M                 MOVLW   0
0128   00E7               M                 MOVWF   I
0129   2???               M                 GOTO    $ + 2           ; skip over the increment first time
012A                      M _LOOPTEST10
                          M                 IF PROGRAM_LENGTH-1 > 0 ; increment or decrement
012A   0AE7               M                  INCF   I,   F
012B   0867               M                  MOVFW  I
012C   3C37               M                  SUBLW  PROGRAM_LENGTH-1
012D   1C03               M                  BTFSS  STATUS, C
                          M                 ELSE
                          M                  DECF   I,   F
                          M                  MOVFW  I
                          M                  SUBLW  PROGRAM_LENGTH-1 - 1
                          M                  BTFSC  STATUS, C
                          M                 ENDIF
                          M                 BREAK
012E   2???               M                 GOTO    _ENDBLOCK10
012F                      M _LOOP10
  00000067                M _LOOPVAR1               = I
012F   0800           00592         MOVFW INDF
0130   2???           00593         CALL SER_OUT
0131   0A84           00594         INCF FSR, F
                      00595         NEXT
                          M                 CONTINUE
0132   2???               M                 GOTO    _LOOPTEST10
                          M                 ENDBLOCK
0133                      M _ENDBLOCK10
  00000000                M _BLOCKDEPTH -= 1
                      00596 
0133   2???           00597         GOTO CMD_OK
                      00598 
                      00599 
0134                  00600 CMD_VERSION
0134   2???           00601         CALL OUTPUT_VERSION
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0135   2???           00602         GOTO CMD_OK
                      00603 
0136                  00604 CMD_MODEL
0136   2???           00605         CALL OUTPUT_MODEL
0137   2???           00606         GOTO CMD_OK
                      00607 
0138                  00608 CMD_OK
0138   300A           00609         MOVLW 0X0A 
0139   2???           00610         CALL SER_OUT
013A   300D           00611         MOVLW  0X0D
013B   2???           00612         CALL SER_OUT
                      00613         BANK00
                          M 
013C   1283               M                 BCF     STATUS, RP0
013D   1303               M                 BCF     STATUS, RP1
                          M 
                      00614 
013E                  00615 GET_CMD_AGAIN
013E   1C74           00616         BTFSS SER_CON, SER_READY
013F   2???           00617         GOTO $-1
                      00618 
0140   2???           00619         CALL CMD_DISPATCH
0141   2???           00620         GOTO GET_CMD_AGAIN
                      00621 
                      00622 
                      00623         
                      00624 ;#endif
                      00625 
                      00626 
                      00627 
                      00628 
                      00629 
                      00630 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      00631 ; Beacon_start
                      00632 ; Start programming the receiver;
                      00633 ;
                      00634 
0142                  00635 BEACON_START 
                      00636 
                      00637 #DEFINE MAIN            0
                      00638 #DEFINE  FREQ_2A        1
                      00639 #DEFINE  FREQ_1A        2
                      00640 #DEFINE  FREQ_0A        3
                      00641 #DEFINE  FREQ_2B        4
                      00642 #DEFINE  FREQ_1B        5
                      00643 #DEFINE  FREQ_0B        6
                      00644 #DEFINE  FSEP1          7
                      00645 #DEFINE  FSEP0          8
                      00646 #DEFINE  CURRENT        9
                      00647 #DEFINE XOSC            0X0A
                      00648 #DEFINE PA_POW          0X0B
                      00649 #DEFINE PLL             0X0C
                      00650 #DEFINE LOCK            0X0D
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00651 #DEFINE CAL             0X0E
                      00652 #DEFINE MODEM0          0X11
                      00653 #DEFINE FSCTRL          0X13
                      00654 #DEFINE PRESCALER       0X1C
                      00655 
                      00656 #DEFINE F_REG   B'01000000'
                      00657 #DEFINE TX_PD   B'00010000'
                      00658 #DEFINE FS_PD   B'00001000'
                      00659 #DEFINE CORE_PD B'00000100'
                      00660 #DEFINE BIAS_PD B'00000010'
                      00661 #DEFINE RESET_N B'00000001'
                      00662 
                      00663 #DEFINE PA_POWER 0XFF
                      00664  
                      00665 ;;;;;;;;;;;;;;;;;;;
                      00666 ; initialize and reset: set main
                      00667 ;       F_REG=0                 bit6
                      00668 ;       TX_PD=1;                bit4
                      00669 ;       FS_PD=1;                bit3
                      00670 ;       CORE_PD=0;              bit2
                      00671 ;       BIAS_PD=1;              bit1
                      00672 ;       reset_N=0;              bit0
                      00673         
                      00674 
0142                  00675 INIT1
0142   1685           00676         BSF CC_PALE
                      00677         CC1050 MAIN, TX_PD | FS_PD | BIAS_PD
                          M ;
0143   3000               M         MOVLW 0
0144   00DA               M         MOVWF OUTADDR
0145   301A               M         MOVLW B'00010000' | B'00001000' | B'00000010'
0146   00D9               M         MOVWF OUTDATA
0147   2???               M         CALL WRITE_ADDR_DATA
                      00678 
                      00679 ;       reset_N=1;              bit0
                      00680 
                      00681         CC1050 MAIN, TX_PD | FS_PD | BIAS_PD | RESET_N
                          M ;
0148   3000               M         MOVLW 0
0149   00DA               M         MOVWF OUTADDR
014A   301B               M         MOVLW B'00010000' | B'00001000' | B'00000010' | B'00000001'
014B   00D9               M         MOVWF OUTDATA
014C   2???               M         CALL WRITE_ADDR_DATA
                      00682 
014D   2???           00683         CALL    W100MS          ; 
                      00684 ;
                      00685 ;       now, program all registers but main;
                      00686 
                      00687         CC1050R FREQ_2A, F2
014E   3001               M         MOVLW 1
014F   00DA               M         MOVWF OUTADDR
                          M 
0150   0840               M         MOVFW F2
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0151   00D9               M         MOVWF OUTDATA
                          M 
0152   2???               M         CALL WRITE_ADDR_DATA
                      00688         CC1050R FREQ_1A, F1
0153   3002               M         MOVLW 2
0154   00DA               M         MOVWF OUTADDR
                          M 
0155   0841               M         MOVFW F1
0156   00D9               M         MOVWF OUTDATA
                          M 
0157   2???               M         CALL WRITE_ADDR_DATA
                      00689         CC1050R FREQ_0A, F0
0158   3003               M         MOVLW 3
0159   00DA               M         MOVWF OUTADDR
                          M 
015A   0842               M         MOVFW F0
015B   00D9               M         MOVWF OUTDATA
                          M 
015C   2???               M         CALL WRITE_ADDR_DATA
                      00690 
                      00691         CC1050R FREQ_2B, F2
015D   3004               M         MOVLW 4
015E   00DA               M         MOVWF OUTADDR
                          M 
015F   0840               M         MOVFW F2
0160   00D9               M         MOVWF OUTDATA
                          M 
0161   2???               M         CALL WRITE_ADDR_DATA
                      00692         CC1050R FREQ_1B, F1
0162   3005               M         MOVLW 5
0163   00DA               M         MOVWF OUTADDR
                          M 
0164   0841               M         MOVFW F1
0165   00D9               M         MOVWF OUTDATA
                          M 
0166   2???               M         CALL WRITE_ADDR_DATA
                      00693         CC1050R FREQ_0B, F0
0167   3006               M         MOVLW 6
0168   00DA               M         MOVWF OUTADDR
                          M 
0169   0842               M         MOVFW F0
016A   00D9               M         MOVWF OUTDATA
                          M 
016B   2???               M         CALL WRITE_ADDR_DATA
                      00694 
                      00695 #IF SIMULATE
                      00696         GOTO LOGMSG
                      00697 #ENDIF
                      00698 
                      00699         CC1050 FSEP1,   0X00
                          M ;
016C   3007               M         MOVLW 7
016D   00DA               M         MOVWF OUTADDR
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

016E   3000               M         MOVLW 0X00
016F   00D9               M         MOVWF OUTDATA
0170   2???               M         CALL WRITE_ADDR_DATA
                      00700         CC1050 FSEP0,   0X32
                          M ;
0171   3008               M         MOVLW 8
0172   00DA               M         MOVWF OUTADDR
0173   3032               M         MOVLW 0X32
0174   00D9               M         MOVWF OUTDATA
0175   2???               M         CALL WRITE_ADDR_DATA
                      00701         CC1050 CURRENT, 0X81
                          M ;
0176   3009               M         MOVLW 9
0177   00DA               M         MOVWF OUTADDR
0178   3081               M         MOVLW 0X81
0179   00D9               M         MOVWF OUTDATA
017A   2???               M         CALL WRITE_ADDR_DATA
                      00702         CC1050 XOSC,    0X00
                          M ;
017B   300A               M         MOVLW 0X0A
017C   00DA               M         MOVWF OUTADDR
017D   3000               M         MOVLW 0X00
017E   00D9               M         MOVWF OUTDATA
017F   2???               M         CALL WRITE_ADDR_DATA
                      00703         CC1050 PA_POW,  0X00
                          M ;
0180   300B               M         MOVLW 0X0B
0181   00DA               M         MOVWF OUTADDR
0182   3000               M         MOVLW 0X00
0183   00D9               M         MOVWF OUTDATA
0184   2???               M         CALL WRITE_ADDR_DATA
                      00704         CC1050 PLL,     0X48
                          M ;
0185   300C               M         MOVLW 0X0C
0186   00DA               M         MOVWF OUTADDR
0187   3048               M         MOVLW 0X48
0188   00D9               M         MOVWF OUTDATA
0189   2???               M         CALL WRITE_ADDR_DATA
                      00705         CC1050 LOCK,    0X10
                          M ;
018A   300D               M         MOVLW 0X0D
018B   00DA               M         MOVWF OUTADDR
018C   3010               M         MOVLW 0X10
018D   00D9               M         MOVWF OUTDATA
018E   2???               M         CALL WRITE_ADDR_DATA
                      00706 ;;      cc1050 CAL,     x026
                      00707         CC1050 MODEM0,  0X6B    ; manchester mode 9.6kb; was 6b
                          M ;
018F   3011               M         MOVLW 0X11
0190   00DA               M         MOVWF OUTADDR
0191   306B               M         MOVLW 0X6B
0192   00D9               M         MOVWF OUTDATA
0193   2???               M         CALL WRITE_ADDR_DATA
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00708         CC1050 FSCTRL,  0X01    
                          M ;
0194   3013               M         MOVLW 0X13
0195   00DA               M         MOVWF OUTADDR
0196   3001               M         MOVLW 0X01
0197   00D9               M         MOVWF OUTDATA
0198   2???               M         CALL WRITE_ADDR_DATA
                      00709         CC1050 PRESCALER, 0X40
                          M ;
0199   301C               M         MOVLW 0X1C
019A   00DA               M         MOVWF OUTADDR
019B   3040               M         MOVLW 0X40
019C   00D9               M         MOVWF OUTDATA
019D   2???               M         CALL WRITE_ADDR_DATA
                      00710         CC1050 0X42,    0X25
                          M ;
019E   3042               M         MOVLW 0X42
019F   00DA               M         MOVWF OUTADDR
01A0   3025               M         MOVLW 0X25
01A1   00D9               M         MOVWF OUTDATA
01A2   2???               M         CALL WRITE_ADDR_DATA
                      00711 
                      00712 
                      00713 ;
                      00714 ; callibrate:
                      00715 ; write cal: cal_dual =1:
                      00716 
                      00717 
                      00718 ; first, turn the outpu power off.
                      00719 
                      00720 #DEFINE CAL_DUAL        B'01000000'
                      00721 #DEFINE CAL_START       B'10000000'
                      00722 #DEFINE CAL_WAIT        B'00100000'
                      00723 #DEFINE CAL_ITERATE     B'00000110'
                      00724 
                      00725         CC1050 PA_POW, 0
                          M ;
01A3   300B               M         MOVLW 0X0B
01A4   00DA               M         MOVWF OUTADDR
01A5   3000               M         MOVLW 0
01A6   00D9               M         MOVWF OUTDATA
01A7   2???               M         CALL WRITE_ADDR_DATA
                      00726         CC1050 CAL, CAL_DUAL | CAL_WAIT | CAL_ITERATE
                          M ;
01A8   300E               M         MOVLW 0X0E
01A9   00DA               M         MOVWF OUTADDR
01AA   3066               M         MOVLW B'01000000' | B'00100000' | B'00000110'
01AB   00D9               M         MOVWF OUTDATA
01AC   2???               M         CALL WRITE_ADDR_DATA
                      00727         CC1050 MAIN, RESET_N
                          M ;
01AD   3000               M         MOVLW 0
01AE   00DA               M         MOVWF OUTADDR
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01AF   3001               M         MOVLW B'00000001'
01B0   00D9               M         MOVWF OUTDATA
01B1   2???               M         CALL WRITE_ADDR_DATA
                      00728         CC1050 CAL, CAL_DUAL | CAL_WAIT | CAL_ITERATE | CAL_START
                          M ;
01B2   300E               M         MOVLW 0X0E
01B3   00DA               M         MOVWF OUTADDR
01B4   30E6               M         MOVLW B'01000000' | B'00100000' | B'00000110' | B'10000000'
01B5   00D9               M         MOVWF OUTDATA
01B6   2???               M         CALL WRITE_ADDR_DATA
                      00729 
01B7   2???           00730         CALL W100MS
                      00731 
                      00732         CC1050 CAL, CAL_DUAL | CAL_WAIT | CAL_ITERATE
                          M ;
01B8   300E               M         MOVLW 0X0E
01B9   00DA               M         MOVWF OUTADDR
01BA   3066               M         MOVLW B'01000000' | B'00100000' | B'00000110'
01BB   00D9               M         MOVWF OUTDATA
01BC   2???               M         CALL WRITE_ADDR_DATA
                      00733         
                      00734 ;
                      00735 ; now powerdown;
                      00736 
                      00737         CC1050 MAIN, TX_PD | FS_PD | CORE_PD | BIAS_PD | RESET_N
                          M ;
01BD   3000               M         MOVLW 0
01BE   00DA               M         MOVWF OUTADDR
01BF   301F               M         MOVLW B'00010000' | B'00001000' | B'00000100' | B'00000010' | B'00000001'
01C0   00D9               M         MOVWF OUTDATA
01C1   2???               M         CALL WRITE_ADDR_DATA
                      00738 
                      00739 ;
                      00740 ; now, powerup; release CORE_PD
                      00741 ;
                      00742         CC1050 MAIN,  TX_PD | FS_PD |  BIAS_PD |RESET_N
                          M ;
01C2   3000               M         MOVLW 0
01C3   00DA               M         MOVWF OUTADDR
01C4   301B               M         MOVLW B'00010000' | B'00001000' |  B'00000010' |B'00000001'
01C5   00D9               M         MOVWF OUTDATA
01C6   2???               M         CALL WRITE_ADDR_DATA
                      00743 
01C7   2???           00744         CALL    W100MS          ; wait 100mS 
                      00745 
                      00746 ; release BIAS_PD
                      00747 
                      00748         CC1050 MAIN,  TX_PD | FS_PD | RESET_N
                          M ;
01C8   3000               M         MOVLW 0
01C9   00DA               M         MOVWF OUTADDR
01CA   3019               M         MOVLW B'00010000' | B'00001000' | B'00000001'
01CB   00D9               M         MOVWF OUTDATA
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01CC   2???               M         CALL WRITE_ADDR_DATA
                      00749 
01CD   2???           00750         CALL    W100MS          ; wait 100mS 
                      00751 
                      00752 ; release FS_PD
                      00753         CC1050 MAIN,  TX_PD |  RESET_N
                          M ;
01CE   3000               M         MOVLW 0
01CF   00DA               M         MOVWF OUTADDR
01D0   3011               M         MOVLW B'00010000' |  B'00000001'
01D1   00D9               M         MOVWF OUTDATA
01D2   2???               M         CALL WRITE_ADDR_DATA
                      00754 
01D3   2???           00755         CALL    W100MS          ; wait 100mS 
                      00756 
                      00757 ;set output power
                      00758 
                      00759         CC1050R PA_POW, POWER_OUT;
01D4   300B               M         MOVLW 0X0B
01D5   00DA               M         MOVWF OUTADDR
                          M 
01D6   0843               M         MOVFW POWER_OUT
01D7   00D9               M         MOVWF OUTDATA
                          M 
01D8   2???               M         CALL WRITE_ADDR_DATA
                      00760 
                      00761 ; release TX_PD
                      00762         CC1050 MAIN, RESET_N
                          M ;
01D9   3000               M         MOVLW 0
01DA   00DA               M         MOVWF OUTADDR
01DB   3001               M         MOVLW B'00000001'
01DC   00D9               M         MOVWF OUTDATA
01DD   2???               M         CALL WRITE_ADDR_DATA
                      00763 
01DE                  00764 HERE:
                      00765         CC1050R PA_POW, POWER_OUT;
01DE   300B               M         MOVLW 0X0B
01DF   00DA               M         MOVWF OUTADDR
                          M 
01E0   0843               M         MOVFW POWER_OUT
01E1   00D9               M         MOVWF OUTDATA
                          M 
01E2   2???               M         CALL WRITE_ADDR_DATA
                      00766         CC1050 MAIN, RESET_N
                          M ;
01E3   3000               M         MOVLW 0
01E4   00DA               M         MOVWF OUTADDR
01E5   3001               M         MOVLW B'00000001'
01E6   00D9               M         MOVWF OUTDATA
01E7   2???               M         CALL WRITE_ADDR_DATA
                      00767 
                      00768         
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00769         
                      00770 ;;;;;; goto long
                      00771 
01E8                  00772 LONG    
                      00773 
                      00774 
                      00775         CC1050 MAIN, RESET_N
                          M ;
01E8   3000               M         MOVLW 0
01E9   00DA               M         MOVWF OUTADDR
01EA   3001               M         MOVLW B'00000001'
01EB   00D9               M         MOVWF OUTDATA
01EC   2???               M         CALL WRITE_ADDR_DATA
                      00776         ;; THis is reset
01ED   2???           00777         CALL RESET
01EE   2???           00778         CALL    W100MS          ; wait 100mS
                      00779         ;;;
01EF   2???           00780         CALL POWERON
01F0   2???           00781         CALL CALIBRATE          ; calibrate returns with power on
                      00782 
                      00783         ; We need to do at least one coversion in case we skip both below
                      00784         
                      00785 ;
                      00786 ; this call to ad_convert is unnecessary
                      00787 ;
01F1   2???           00788         CALL AD_CONVERT
                      00789    
01F2   2???           00790         CALL    LOGMSG          ; play ID message
                      00791 ;
                      00792 ; This call to ad_convert is being done with the transmitter enabled
                      00793 ;
                      00794 
01F3   1850           00795         BTFSC   OPTIONS,0       ; SKIP playing  voltage if set
01F4   2???           00796         GOTO CHECK_AGAIN
                      00797 
01F5   2???           00798         CALL AD_CONVERT
                      00799 
01F6   3018           00800         MOVLW MV
01F7   00E0           00801         MOVWF SEND
01F8   2???           00802         CALL MOROUT
                      00803 
01F9   307C           00804         MOVLW M1
01FA   00E0           00805         MOVWF SEND
01FB   2???           00806         CALL MOROUT
                      00807 
01FC   2???           00808         CALL DIV_AND_MORSE
                      00809 
01FD                  00810 CHECK_AGAIN
                      00811 
01FD   2???           00812         CALL POWEROFF
                      00813 
01FE   18D0           00814         BTFSC   OPTIONS,1       ; SKIP playing voltage if set
01FF   2???           00815         GOTO CHECK_DONE
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00816 
                      00817 ; let the power drain out 
                      00818 
0200   2???           00819         CALL W100MS
0201   2???           00820         CALL W100MS
0202   2???           00821         CALL W100MS
0203   2???           00822         CALL W100MS
0204   2???           00823         CALL W100MS
                      00824 
                      00825 ; 
                      00826 ; the last call to ad_convert is the one that will be displayed 
                      00827 ; when a read command is issued.  This call is being  done with the transmitter
                      00828 ; turned off.
                      00829 
0205   2???           00830         CALL AD_CONVERT
0206   2???           00831         CALL POWERON
                      00832 
0207   3018           00833         MOVLW MV
0208   00E0           00834         MOVWF SEND
0209   2???           00835         CALL MOROUT
                      00836 
020A   30FC           00837         MOVLW M0
020B   00E0           00838         MOVWF SEND
020C   2???           00839         CALL MOROUT
                      00840 
020D   2???           00841         CALL DIV_AND_MORSE
020E   2???           00842         CALL POWEROFF           ; end with the power off
                      00843 
020F                  00844 CHECK_DONE:
                      00845 
                      00846 ; main loop, produce a locating tone for 1 second out of every
                      00847 ; three, then at 5 minute intervals play the ID message
                      00848 
020F                  00849 MAIN5   
020F   0846           00850         MOVFW   BEEP_NUM        ; How many beeps between morse transmissions 
0210   00E6           00851         MOVWF   D5              ; = 300/60 = 5 minutes
                      00852 
0211                  00853 FIVEL
                      00854 
                      00855 ; 
                      00856 ; check for a new command at the beginning of every beep, with the power on
                      00857 ;
0211                  00858 TRY_AGAIN3
                      00859 
0211   1283 1303      00860         BANKSEL SER_CON
0213   1874           00861         BTFSC SER_CON, SER_READY
0214   2???           00862         GOTO CMD_DISPATCH_H2    ; handle charactger
0215   2???           00863         GOTO CONTINUE23         ; no char available
                      00864 
0216                  00865 CMD_DISPATCH_H2
0216   2???           00866         CALL CMD_DISPATCH
0217   2???           00867         GOTO TRY_AGAIN3         ; try again
                      00868 
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0218                  00869 CONTINUE23
0218   2???           00870         CALL POWERON
                      00871 
                      00872 ; produce a tone for 1 second, 10 loops of 100mS
                      00873 
                      00874 
0219   0845           00875         MOVFW   BEEP_LEN
021A   00DC           00876         MOVWF   DELAY1
                      00877 
021B   084B           00878 TNLOP   MOVF    BEEP_FREQ_LOOP,W                ; get 100mS constant
021C   00E3           00879         MOVWF   D100            ; based upon tone frequency
021D   1507           00880 WTONE   BSF     CC_DI           ; high cycle of tone
                      00881 
021E   0849           00882         MOVF    BEEP_FREQ,W     ; get period constant
021F   00E5           00883         MOVWF   D250
                      00884 
0220   0848           00885         MOVF    BEEP_FREQ_H,W   ; get period constant
0221   3E01           00886         ADDLW 1                 ; becasue decfsz decs first, then checks
0222   00E4           00887         MOVWF   D250_H
                      00888 
0223   0BE5           00889 WHIGHT  DECFSZ  D250,F          ; delay high period
0224   2???           00890         GOTO    WHIGHT
                      00891 
Message[305]: Using default destination of 1 (file).
0225   0BE4           00892         DECFSZ D250_H
0226   2???           00893         GOTO FIXD250
0227   2???           00894         GOTO CONTINUE11
                      00895 
0228                  00896 FIXD250
0228   30FF           00897         MOVLW 0XFF
0229   00E5           00898         MOVWF D250
022A   2???           00899         GOTO WHIGHT
                      00900 
022B                  00901 CONTINUE11
                      00902 
022B   1107           00903         BCF     CC_DI           ; low cycle of tone
022C   0849           00904         MOVF    BEEP_FREQ,W     ; get period constant
022D   00E5           00905         MOVWF   D250
022E   0848           00906         MOVF    BEEP_FREQ_H,W   ; get period constant
022F   3E01           00907         ADDLW 1                 ; because decfsz decs first, then checks
0230   00E4           00908         MOVWF   D250_H
                      00909 
0231   0BE5           00910 WLOWT   DECFSZ  D250,F          ; delay low period
0232   2???           00911         GOTO    WLOWT
                      00912 
Message[305]: Using default destination of 1 (file).
0233   0BE4           00913         DECFSZ D250_H
0234   2???           00914         GOTO FIXD250A
0235   2???           00915         GOTO CONTINUE1
                      00916 
0236                  00917 FIXD250A
0236   30FF           00918         MOVLW 0XFF
0237   00E5           00919         MOVWF D250
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0238   2???           00920         GOTO WLOWT
                      00921 
0239                  00922 CONTINUE1
0239   0BE3           00923         DECFSZ  D100,F          ; done w/100mS?
023A   2???           00924         GOTO    WTONE           ; nope, loop
                      00925 
023B   0BDC           00926         DECFSZ  DELAY1,F        ; done with 1 second?
023C   2???           00927         GOTO    TNLOP           ; nope, loop
                      00928 
023D   2???           00929         CALL POWEROFF
                      00930 ; delay 1.8 seconds (18 x 100mS)
                      00931 
023E   0847           00932         MOVFW   BEEP_SPACE
023F   00E5           00933         MOVWF   D250
0240   2???           00934 D15     CALL    W100MS
0241   0BE5           00935         DECFSZ  D250,F          ; done ?
0242   2???           00936         GOTO    D15             ; nope, loop back
                      00937 
0243   0BE6           00938         DECFSZ  D5,F            ; done ?
0244   2???           00939         GOTO    FIVEL           ; nope, loop back
                      00940 
                      00941 
                      00942 ;;;;;
0245                  00943 UPDATE_FLASH_TIME
0245   30??           00944         MOVLW EETIME0
0246   1683 1303      00945         BANKSEL EEADR
0248   009B           00946         MOVWF EEADR
                      00947         BANK00
                          M 
0249   1283               M                 BCF     STATUS, RP0
024A   1303               M                 BCF     STATUS, RP1
                          M 
024B   0855           00948         MOVFW TIME0
024C   2???           00949         CALL FLASH_WRITE
                      00950 
024D   30??           00951         MOVLW EETIME1
024E   1683 1303      00952         BANKSEL EEADR
0250   009B           00953         MOVWF EEADR
                      00954         BANK00
                          M 
0251   1283               M                 BCF     STATUS, RP0
0252   1303               M                 BCF     STATUS, RP1
                          M 
0253   0854           00955         MOVFW TIME1
0254   2???           00956         CALL FLASH_WRITE
                      00957 
0255   30??           00958         MOVLW EETIME2
0256   1683 1303      00959         BANKSEL EEADR
0258   009B           00960         MOVWF EEADR
                      00961         BANK00
                          M 
0259   1283               M                 BCF     STATUS, RP0
025A   1303               M                 BCF     STATUS, RP1
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
025B   0853           00962         MOVFW TIME2
025C   2???           00963         CALL FLASH_WRITE
                      00964 
025D   0854           00965         MOVFW TIME1
                      00966 ;;;;;;
                      00967 ;  
                      00968 ;
                      00969 ; before we start playing the thing again, let's check the volate and see 
                      00970 ; if we need to shutdown
                      00971 ;
                      00972 ; We've just stopped beeping, then disabled the TX
                      00973 ; then wrote the time to flash
                      00974 ; now do the conversion and check.
                      00975 ;
025E                  00976 CHECK_SHUTDOWN
025E   2???           00977         CALL W100MS     ; wait some more for the power to settle down.
025F   2???           00978         CALL W100MS     ; before doing a conversion
0260   2???           00979         CALL W100MS
0261   2???           00980         CALL W100MS
0262   2???           00981         CALL W100MS
                      00982 
0263   1950           00983         BTFSC   OPTIONS,2       ; if bit2 set, don't check this
0264   2???           00984         GOTO LONG
                      00985 
0265   2???           00986         CALL AD_CONVERT
                      00987 
0266   0851           00988         MOVFW V_CUTOFFH
0267   0256           00989         SUBWF ADRESULTHI, W
0268   1903           00990         BTFSC STATUS, ZEROF
0269   2???           00991         GOTO DOIT2              ; no match, keep playing
026A   2???           00992         GOTO LONG
026B                  00993 DOIT2
                      00994 
026B   0857           00995         MOVFW ADRESULTLO
026C   0252           00996         SUBWF V_CUTOFF, W
026D   1803           00997         BTFSC STATUS, CARYF     
026E   2???           00998         GOTO GOODNIGHT
026F   2???           00999         GOTO LONG                ; not less than, keep playing
                      01000 
0270                  01001 GOODNIGHT
                      01002 ;
                      01003 ; play some ZZZZZ's
                      01004 ;
0270   2???           01005         CALL POWERON
0271   30C8           01006         MOVLW MZ
0272   00E0           01007         MOVWF SEND
0273   2???           01008         CALL MOROUT
0274   30C8           01009         MOVLW MZ
0275   00E0           01010         MOVWF SEND
0276   2???           01011         CALL MOROUT
0277   30C8           01012         MOVLW MZ
0278   00E0           01013         MOVWF SEND
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0279   2???           01014         CALL MOROUT
027A   30C8           01015         MOVLW MZ
027B   00E0           01016         MOVWF SEND
027C   2???           01017         CALL MOROUT
                      01018 
027D   2???           01019         CALL POWEROFF
                      01020 
027E   0063           01021         SLEEP
                      01022 
                      01023 ;
                      01024 ; if we happen to wake up from sleep, we'll start up again here
                      01025 ;
                      01026 
                      01027 ; this routine sends the message stored at msg in morse
                      01028 
027F   01DD           01029 LOGMSG  CLRF    MSGREG0
0280   01DE           01030         CLRF    MSGREG1         ; clear the message counter
                      01031 
0281                  01032 CALLDONE
0281   01DE           01033         CLRF MSGREG1
0282                  01034 PLAYL   
0282   3020           01035         MOVLW CALLSIGN  
0283   075E           01036         ADDWF MSGREG1, W        ; w has the address of the char to send
0284   2???           01037         CALL    MSG             ; used to point to msg character
0285   0ADE           01038         INCF    MSGREG1,F       ; move to next character (pointer)
                      01039                                 ; returned is morse equivalent
0286                  01040 PLAY    
0286   00E0           01041         MOVWF   SEND            ; save the morse character
0287   3000           01042         MOVLW   MEND            ; is it the end flag?
0288   0260           01043         SUBWF   SEND,W
0289   1D03           01044         BTFSS   STATUS,ZEROF
028A   2???           01045         GOTO    MORPLAY         ; no, so play it
028B   0008           01046         RETURN                  ; yes, end, leave
                      01047 
028C   2???           01048 MORPLAY CALL MOROUT
028D   2???           01049         GOTO PLAYL
                      01050 
                      01051 ;----------------------------------------------------
                      01052 ; morout
                      01053 ;       enter with the morse character to be transmitted
                      01054 ;       in the send register, this routine will toggle
                      01055 ;       an output line, simulating a morse code transmission
                      01056 ;
                      01057 ;
                      01058 ; But, before we do anything, check for a character
                      01059 ;
                      01060 ;
                      01061 ; check for a control word delay flag first, then do
                      01062 ; either the delay or start sending the cw
                      01063 ;
028E                  01064 MOROUT  
028E   1874           01065         BTFSC SER_CON, SER_READY
028F   2???           01066         GOTO CMD_DISPATCH_H3    ; char available
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0290   2???           01067         GOTO CONTINUE99         ; no char
                      01068 
0291                  01069 CMD_DISPATCH_H3
0291   2???           01070         CALL POWEROFF
0292   2???           01071         CALL CMD_DISPATCH       ; returns if character is bad
0293   2???           01072         CALL POWERON            ; turn power back on just in case we return
                      01073 
0294                  01074 CONTINUE99
0294   3001           01075         MOVLW   MSPACE          ; is it a space (between words)
0295   0260           01076         SUBWF   SEND,W
0296   1D03           01077         BTFSS   STATUS,ZEROF
0297   2???           01078         GOTO    MORLOP          ; not a space, go send didah
0298   2???           01079         CALL    W100MS          ; space, wait 700mS
0299   2???           01080         CALL    W100MS          ; for 12wpm cw
029A   2???           01081         CALL    W100MS          ; 400mS here and another
029B   2???           01082         CALL    W100MS          ; 300mS at mordn
029C   2???           01083         GOTO    MORDN
                      01084 
                      01085 ; send the cw from the information stored in the send register
                      01086 ; Shift the eight bit register to the left, if the carry bit
                      01087 ; is 0 then send a di, if the carry bit is a 1 send a dah.
                      01088 ; When the send register = 1000 0000 then all bits have been
                      01089 ; sent.
                      01090 
029D   3001           01091 MORLOP  MOVLW   0X01            ; setup for di
029E   1003           01092         BCF     STATUS,CARYF    ; make sure carry bit is clear
029F   0DE0           01093         RLF     SEND,F          ; shift to get bit to send
02A0   1803           01094         BTFSC   STATUS,CARYF    ; skip next instruction for di's
02A1   3802           01095         IORLW   0X02            ; 3x di = dah
02A2   00DF           01096         MOVWF   DIDAH           ; save didah time
                      01097 
02A3                  01098 MORWAT  
02A3   084E           01099         MOVFW   MORSE_FREQ_LOOP
02A4   00E3           01100         MOVWF   D100
                      01101 
02A5   1507           01102 WMORS   BSF     CC_DI   ; turn on tone bit (high period)
02A6   084D           01103         MOVFW   MORSE_FREQ
02A7   00E5           01104         MOVWF   D250
                      01105 
02A8   084C           01106         MOVF    MORSE_FREQ_H, W
02A9   3E01           01107         ADDLW 1
02AA   00E4           01108         MOVWF  D250_H
                      01109 
02AB   0BE5           01110 WHIGH   DECFSZ  D250,F          ; high period delay
02AC   2???           01111         GOTO    WHIGH
                      01112 
Message[305]: Using default destination of 1 (file).
02AD   0BE4           01113         DECFSZ  D250_H
02AE   2???           01114         GOTO FIXD2501
02AF   2???           01115         GOTO CONTINUE12
                      01116 
02B0                  01117 FIXD2501
02B0   30FF           01118         MOVLW 0XFF
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02B1   00E5           01119         MOVWF D250
02B2   2???           01120         GOTO WHIGH
                      01121 
02B3                  01122 CONTINUE12
02B3   1107           01123         BCF     CC_DI   ; low period for tone bit
02B4   084D           01124         MOVFW   MORSE_FREQ
02B5   00E5           01125         MOVWF   D250
                      01126 
02B6   084C           01127         MOVF MORSE_FREQ_H, W
02B7   3E01           01128         ADDLW 1
02B8   00E4           01129         MOVWF D250_H
                      01130         
02B9   0BE5           01131 WLOW    DECFSZ  D250,F          ; low period delay
02BA   2???           01132         GOTO    WLOW
                      01133 
Message[305]: Using default destination of 1 (file).
02BB   0BE4           01134         DECFSZ D250_H
02BC   2???           01135         GOTO FIXD250B
02BD   2???           01136         GOTO CONTINUE13
                      01137 
02BE                  01138 FIXD250B
02BE   30FF           01139         MOVLW 0XFF
02BF   3065           01140         MOVLW D250
02C0   2???           01141         GOTO WLOW
                      01142 
02C1                  01143 CONTINUE13
                      01144 
02C1   0BE3           01145         DECFSZ  D100,F          ; loop for 100mS
02C2   2???           01146         GOTO    WMORS
                      01147 
02C3   0BDF           01148         DECFSZ  DIDAH,F         ; fall thru for di's
02C4   2???           01149         GOTO    MORWAT          ; or do again twice for dah's
02C5   2???           01150         CALL    W100MS          ; delay between di-dahs
                      01151 
02C6   3080           01152         MOVLW   B'10000000'     ; check for end of data
02C7   0260           01153         SUBWF   SEND,W
02C8   1D03           01154         BTFSS   STATUS,ZEROF    ; not equal, not end
02C9   2???           01155         GOTO    MORLOP          ; so continue with this character
                      01156 
02CA   2???           01157 MORDN   CALL    W100MS          ; delay between characters
02CB   2???           01158         CALL    W100MS          ; 300mS for 12wpm
02CC   2???           01159         CALL    W100MS
                      01160 ;       incf    msgreg1,f       ; move to next character (pointer)
                      01161 ;       goto    playl           ; loop for rest of message
02CD   0008           01162         RETURN
                      01163 
                      01164 
                      01165 ;-----------------------------------------------------
                      01166 ; 100 mS delay rtn 
                      01167 
                      01168 
02CE                  01169 W500MS  
                      01170 #IF SIMULATE
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01171         RETURN
                      01172 #ENDIF
                      01173 
02CE   2???           01174         CALL W100MS
02CF   2???           01175         CALL W100MS
02D0   2???           01176         CALL W100MS
02D1   2???           01177         CALL W100MS
02D2   0008           01178         RETURN
                      01179 
02D3                  01180 W100MS  
                      01181 #IF SIMULATE
                      01182         RETURN
                      01183 #ENDIF
02D3   3064           01184         MOVLW   D'100'          ; 1 cycle 
02D4   00E1           01185         MOVWF   DELAY2          ; 1 cycle 
                      01186 
                      01187                                 ; gets kinda funky here 
                      01188                                 ; as there is a 1mS rtn 
                      01189                                 ; built into the 100mS 
                      01190                                 ; rtn (saving a sub call 
                      01191                                 ; and stack space!) 
                      01192 
02D5   30C5           01193 D100MS  MOVLW   D'197'          ; 1 cycle           ---+ 
02D6   00DC           01194         MOVWF   DELAY1          ; 1 cycle              | 
02D7   2???           01195 D1MS2   GOTO    $+1             ; 2 cycles (x 197)     | 
02D8   0BDC           01196         DECFSZ  DELAY1,F        ; 1 cycle  (x 197)     | 
02D9   2???           01197         GOTO    D1MS2           ; 2 cycles (x 197)     | 
                      01198                                 ; 3 + 197 x 5 = 988    | 
02DA   2???           01199         GOTO    $+1             ; = 990                |  
02DB   2???           01200         GOTO    $+1             ; = 992             ---+ 
                      01201 
02DC   0BE1           01202         DECFSZ  DELAY2,F        ; 1 cycle 
02DD   2???           01203         GOTO    D100MS          ; 2 cycles, = 995 
                      01204 
                      01205 ; setup cycles 2 + 1 for fall thru = 3 
                      01206 ; interior cycles = 100 x 995 = 99500 
                      01207 ; = 99503 uS (99.503 mS) 
                      01208 ; the calling rtn eats up 2 more and the return eats 
                      01209 ; two cycles, = 99507uS, need to eat up 493 uS to 
                      01210 ; give a precise 100mS delay 
                      01211 ; also gives us an approximate 500uS delay
                      01212 
02DE   307A           01213 W500US  MOVLW   D'122'          ; 1 cycle 
02DF   00DC           01214         MOVWF   DELAY1          ; 1 cycle 
02E0   0000           01215 D101MS  NOP                     ; 1 cycle x 122 
02E1   0BDC           01216         DECFSZ  DELAY1,F        ; 1 cycle x 122 
02E2   2???           01217         GOTO    D101MS          ; 2 cycles x 122 
                      01218 
                      01219 ; 2 + 1 + 4 x 122 = 491 uS 
                      01220 
02E3   2???           01221         GOTO    $+1             ; waste 2 more cycles 
                      01222                                 ; for 493 uS, add in 
                      01223                                 ; the call (2uS) and 
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01224                                 ; return (2uS) for 
02E4   0008           01225         RETURN                  ; a grand total of 100mS 
                      01226 
02E5   3041           01227 W250US  MOVLW   D'65'          ; 1 cycle 
02E6   00DC           01228         MOVWF   DELAY1          ; 1 cycle 
02E7   0000           01229 D101AMS NOP                     ; 1 cycle x 122 
02E8   0BDC           01230         DECFSZ  DELAY1,F        ; 1 cycle x 122 
02E9   2???           01231         GOTO    D101AMS          ; 2 cycles x 122 
                      01232 
                      01233 
                      01234 
02EA   2???           01235         GOTO    $+1             ; waste 2 more cycles 
                      01236                                 ; for 493 uS, add in 
                      01237                                 ; the call (2uS) and 
                      01238                                 ; return (2uS) for 
02EB   0008           01239         RETURN                  ; a grand total of 100mS 
                      01240 
02EC   3020           01241 W125US  MOVLW   D'32'          ; 1 cycle 
02ED   00DC           01242         MOVWF   DELAY1          ; 1 cycle 
02EE   0000           01243 D101BMS NOP                     ; 1 cycle x 122 
02EF   0BDC           01244         DECFSZ  DELAY1,F        ; 1 cycle x 122 
02F0   2???           01245         GOTO    D101BMS          ; 2 cycles x 122 
                      01246 
02F1   2???           01247         GOTO    $+1             ; waste 2 more cycles 
                      01248                                 ; for 493 uS, add in 
                      01249                                 ; the call (2uS) and 
                      01250                                 ; return (2uS) for 
02F2   0008           01251         RETURN                  ; a grand total of 100mS 
                      01252 
                      01253 
                      01254 
                      01255 ; equates for morse characters 
                      01256 ; specify the coded characters by using 'm' followed 
                      01257 ; by the letter you want to send the coded form of 
                      01258 ; morse is based in... 0 = dit, 1 = dash, roll out 
                      01259 ; the bits, when 0x80 remains the code is done 
                      01260 ; this Morse Code storage rtn was published in _BYTE_ 
                      01261 ; October 1976, pg. 36 in an article by L. Krakauer 
                      01262 
  00000060            01263 MA      EQU     0X60 
  00000088            01264 MB      EQU     0X88 
  000000A8            01265 MC      EQU     0XA8 
  00000090            01266 MD      EQU     0X90 
  00000040            01267 ME      EQU     0X40 
  00000028            01268 MF      EQU     0X28 
  000000D0            01269 MG      EQU     0XD0 
  00000008            01270 MH      EQU     0X08 
  00000020            01271 MI      EQU     0X20 
  00000078            01272 MJ      EQU     0X78 
  000000B0            01273 MK      EQU     0XB0 
  00000048            01274 ML      EQU     0X48 
  000000E0            01275 MM      EQU     0XE0 
  000000A0            01276 MN      EQU     0XA0 
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  000000F0            01277 MO      EQU     0XF0 
  00000068            01278 MP      EQU     0X68 
  000000D8            01279 MQ      EQU     0XD8 
  00000050            01280 MR      EQU     0X50 
  00000010            01281 MS      EQU     0X10 
  000000C0            01282 MT      EQU     0XC0 
  00000030            01283 MU      EQU     0X30 
  00000018            01284 MV      EQU     0X18 
  00000070            01285 MW      EQU     0X70 
  00000098            01286 MX      EQU     0X98 
  000000B8            01287 MY      EQU     0XB8 
  000000C8            01288 MZ      EQU     0XC8 
                      01289 
  000000FC            01290 M0      EQU     0XFC 
  0000007C            01291 M1      EQU     0X7C 
  0000003C            01292 M2      EQU     0X3C 
  0000001C            01293 M3      EQU     0X1C 
  0000000C            01294 M4      EQU     0X0C 
  00000004            01295 M5      EQU     0X04 
  00000084            01296 M6      EQU     0X84 
  000000C4            01297 M7      EQU     0XC4 
  000000E4            01298 M8      EQU     0XE4 
  000000F4            01299 M9      EQU     0XF4 
                      01300 
  00000056            01301 MPERIOD EQU     0X56 
  000000CE            01302 MCOMMA  EQU     0XCE 
  00000032            01303 MQUEST  EQU     0X32 
  0000008C            01304 MEQUAL  EQU     0X8C 
  000000E2            01305 MCOLON  EQU     0XE2 
  000000AA            01306 MSEMI   EQU     0XAA 
  00000094            01307 MSLASH  EQU     0X94 
  00000086            01308 MDASH   EQU     0X86 
                      01309 
  00000001            01310 MSPACE  EQU     0X01    ; space between words 
  00000000            01311 MEND    EQU     0X00    ; end of the info 
                      01312 
                      01313 
                      01314 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      01315 ;
                      01316 ; write_addr_data:
                      01317 ;
                      01318 ; Write the address and data to the cc1050
                      01319 ; 
                      01320 ; there are only 6 address bits
                      01321 ; MK
                      01322 
02F3                  01323 WRITE_ADDR_DATA:
02F3   1505           01324         BSF CC_PCLK
02F4   1205           01325         BCF CC_PDATA
                      01326 
02F5   1285           01327         BCF CC_PALE
                      01328 
02F6   1B5A           01329         BTFSC   OUTADDR, 6              ; test bit 6, skip of 0
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02F7   1605           01330         BSF     CC_PDATA                ; set the data line
02F8   1105           01331         BCF     CC_PCLK                 ; set the clock line
02F9   1505           01332         BSF     CC_PCLK                 ; clear the clock line
02FA   1205           01333         BCF     CC_PDATA                ;clear the data line
                      01334 
02FB   1ADA           01335         BTFSC   OUTADDR, 5              ; test bit 5, skip of 0
02FC   1605           01336         BSF     CC_PDATA                ; set the data line
02FD   1105           01337         BCF     CC_PCLK                 ; set the clock line
02FE   1505           01338         BSF     CC_PCLK                 ; clear the clock line
02FF   1205           01339         BCF     CC_PDATA                ;clear the data line
                      01340 
0300   1A5A           01341         BTFSC   OUTADDR, 4              ; test bit 4, skip of 0
0301   1605           01342         BSF     CC_PDATA                ; set the data line
0302   1105           01343         BCF     CC_PCLK                 ; set the clock line
0303   1505           01344         BSF     CC_PCLK                 ; clear the clock line
0304   1205           01345         BCF     CC_PDATA                ;clear the data line
                      01346 
0305   19DA           01347         BTFSC   OUTADDR, 3              ; test bit 3, skip of 0
0306   1605           01348         BSF     CC_PDATA                ; set the data line
0307   1105           01349         BCF     CC_PCLK                 ; set the clock line
0308   1505           01350         BSF     CC_PCLK                 ; clear the clock line
0309   1205           01351         BCF     CC_PDATA                ;clear the data line
                      01352 
030A   195A           01353         BTFSC   OUTADDR, 2              ; test bit 2, skip of 0
030B   1605           01354         BSF     CC_PDATA                ; set the data line
030C   1105           01355         BCF     CC_PCLK                 ; set the clock line
030D   1505           01356         BSF     CC_PCLK                 ; clear the clock line
030E   1205           01357         BCF     CC_PDATA                ;clear the data line
                      01358 
030F   18DA           01359         BTFSC   OUTADDR, 1              ; test bit 1, skip of 0
0310   1605           01360         BSF     CC_PDATA                ; set the data line
0311   1105           01361         BCF     CC_PCLK                 ; set the clock line
0312   1505           01362         BSF     CC_PCLK                 ; clear the clock line
0313   1205           01363         BCF     CC_PDATA                ;clear the data line
                      01364 
0314   185A           01365         BTFSC   OUTADDR, 0              ; test bit 0, skip of 0
0315   1605           01366         BSF     CC_PDATA                ; set the data line
0316   1105           01367         BCF     CC_PCLK                 ; set the clock line
0317   1505           01368         BSF     CC_PCLK                 ; clear the clock line
0318   1205           01369         BCF     CC_PDATA                ;clear the data line
                      01370 
                      01371 ; this is a write, so set  to 1, and toggle clk.
0319   1605           01372         BSF CC_PDATA
031A   1105           01373         BCF CC_PCLK
031B   1505           01374         BSF CC_PCLK
                      01375 
                      01376 ; and raise ale
                      01377 
031C   1685           01378         BSF CC_PALE     
                      01379 
031D   1205           01380         BCF     CC_PDATA                ;clear the data line
                      01381 
031E   1BD9           01382         BTFSC   OUTDATA, 7              ; test bit 7, skip of 0
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

031F   1605           01383         BSF     CC_PDATA                ; set the data line
0320   1105           01384         BCF     CC_PCLK                 ; set the clock line
0321   1505           01385         BSF     CC_PCLK                 ; clear the clock line
0322   1205           01386         BCF     CC_PDATA                ;clear the data line
                      01387 
0323   1B59           01388         BTFSC   OUTDATA, 6              ; test bit 6, skip of 0
0324   1605           01389         BSF     CC_PDATA                ; set the data line
0325   1105           01390         BCF     CC_PCLK                 ; set the clock line
0326   1505           01391         BSF     CC_PCLK                 ; clear the clock line
0327   1205           01392         BCF     CC_PDATA                ;clear the data line
                      01393 
0328   1AD9           01394         BTFSC   OUTDATA, 5              ; test bit 5, skip of 0
0329   1605           01395         BSF     CC_PDATA                ; set the data line
032A   1105           01396         BCF     CC_PCLK                 ; set the clock line
032B   1505           01397         BSF     CC_PCLK                 ; clear the clock line
032C   1205           01398         BCF     CC_PDATA                ;clear the data line
                      01399 
032D   1A59           01400         BTFSC   OUTDATA, 4              ; test bit 4, skip of 0
032E   1605           01401         BSF     CC_PDATA                ; set the data line
032F   1105           01402         BCF     CC_PCLK                 ; set the clock line
0330   1505           01403         BSF     CC_PCLK                 ; clear the clock line
0331   1205           01404         BCF     CC_PDATA                ;clear the data line
                      01405 
0332   19D9           01406         BTFSC   OUTDATA, 3              ; test bit 3, skip of 0
0333   1605           01407         BSF     CC_PDATA                ; set the data line
0334   1105           01408         BCF     CC_PCLK                 ; set the clock line
0335   1505           01409         BSF     CC_PCLK                 ; clear the clock line
0336   1205           01410         BCF     CC_PDATA                ;clear the data line
                      01411 
0337   1959           01412         BTFSC   OUTDATA, 2              ; test bit 2, skip of 0
0338   1605           01413         BSF     CC_PDATA                ; set the data line
0339   1105           01414         BCF     CC_PCLK                 ; set the clock line
033A   1505           01415         BSF     CC_PCLK                 ; clear the clock line
033B   1205           01416         BCF     CC_PDATA                ;clear the data line
                      01417 
033C   18D9           01418         BTFSC   OUTDATA, 1              ; test bit 1, skip of 0
033D   1605           01419         BSF     CC_PDATA                ; set the data line
033E   1105           01420         BCF     CC_PCLK                 ; set the clock line
033F   1505           01421         BSF     CC_PCLK                 ; clear the clock line
0340   1205           01422         BCF     CC_PDATA                ;clear the data line
                      01423 
0341   1859           01424         BTFSC   OUTDATA, 0              ; test bit 0, skip of 0
0342   1605           01425         BSF     CC_PDATA                ; set the data line
0343   1105           01426         BCF     CC_PCLK                 ; set the clock line
0344   1505           01427         BSF     CC_PCLK                 ; clear the clock line
0345   1205           01428         BCF     CC_PDATA                ;clear the data line
                      01429 
0346   3400           01430         RETLW   0
                      01431 
                      01432 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      01433 ;
                      01434 ; poweron
                      01435 
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0347                  01436 POWERON:
                      01437         CC1050 MAIN,  TX_PD | FS_PD |  BIAS_PD |RESET_N
                          M ;
0347   3000               M         MOVLW 0
0348   00DA               M         MOVWF OUTADDR
0349   301B               M         MOVLW B'00010000' | B'00001000' |  B'00000010' |B'00000001'
034A   00D9               M         MOVWF OUTDATA
034B   2???               M         CALL WRITE_ADDR_DATA
034C   2???           01438         CALL    W100MS          ; wait 100mS 
                      01439 
                      01440         CC1050 MAIN,  TX_PD | FS_PD | RESET_N
                          M ;
034D   3000               M         MOVLW 0
034E   00DA               M         MOVWF OUTADDR
034F   3019               M         MOVLW B'00010000' | B'00001000' | B'00000001'
0350   00D9               M         MOVWF OUTDATA
0351   2???               M         CALL WRITE_ADDR_DATA
0352   2???           01441         CALL    W100MS          ; wait 100mS 
                      01442 
                      01443         CC1050 MAIN,  TX_PD |  RESET_N
                          M ;
0353   3000               M         MOVLW 0
0354   00DA               M         MOVWF OUTADDR
0355   3011               M         MOVLW B'00010000' |  B'00000001'
0356   00D9               M         MOVWF OUTDATA
0357   2???               M         CALL WRITE_ADDR_DATA
0358   2???           01444         CALL    W100MS          ; wait 100mS 
                      01445 
                      01446 ; release TX_PD
                      01447         CC1050 MAIN, RESET_N
                          M ;
0359   3000               M         MOVLW 0
035A   00DA               M         MOVWF OUTADDR
035B   3001               M         MOVLW B'00000001'
035C   00D9               M         MOVWF OUTDATA
035D   2???               M         CALL WRITE_ADDR_DATA
                      01448         CC1050R PA_POW, POWER_OUT;
035E   300B               M         MOVLW 0X0B
035F   00DA               M         MOVWF OUTADDR
                          M 
0360   0843               M         MOVFW POWER_OUT
0361   00D9               M         MOVWF OUTDATA
                          M 
0362   2???               M         CALL WRITE_ADDR_DATA
0363   3400           01449         RETLW 0
                      01450 
                      01451 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      01452 ;
                      01453 ; poweroff
                      01454 
0364                  01455 POWEROFF:
                      01456         CC1050 MAIN, TX_PD | FS_PD | BIAS_PD |CORE_PD  | RESET_N
                          M ;
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0364   3000               M         MOVLW 0
0365   00DA               M         MOVWF OUTADDR
0366   301F               M         MOVLW B'00010000' | B'00001000' | B'00000010' |B'00000100'  | B'00000001'
0367   00D9               M         MOVWF OUTDATA
0368   2???               M         CALL WRITE_ADDR_DATA
                      01457         CC1050 PA_POW, 0X00
                          M ;
0369   300B               M         MOVLW 0X0B
036A   00DA               M         MOVWF OUTADDR
036B   3000               M         MOVLW 0X00
036C   00D9               M         MOVWF OUTDATA
036D   2???               M         CALL WRITE_ADDR_DATA
036E   3400           01458         RETLW 0
                      01459 
                      01460 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      01461 ;
                      01462 ; reset
                      01463 
036F                  01464 RESET:   
                      01465         CC1050 MAIN, TX_PD | FS_PD | CORE_PD | BIAS_PD 
                          M ;
036F   3000               M         MOVLW 0
0370   00DA               M         MOVWF OUTADDR
0371   301E               M         MOVLW B'00010000' | B'00001000' | B'00000100' | B'00000010'
0372   00D9               M         MOVWF OUTDATA
0373   2???               M         CALL WRITE_ADDR_DATA
0374   2???           01466         CALL    W100MS          ; wait 100mS 
                      01467         CC1050 MAIN, TX_PD | FS_PD | CORE_PD | BIAS_PD | RESET_N;
                          M ;
0375   3000               M         MOVLW 0
0376   00DA               M         MOVWF OUTADDR
0377   301F               M         MOVLW B'00010000' | B'00001000' | B'00000100' | B'00000010' | B'00000001'
0378   00D9               M         MOVWF OUTDATA
0379   2???               M         CALL WRITE_ADDR_DATA
                      01468         CC1050R FREQ_2A, F2
037A   3001               M         MOVLW 1
037B   00DA               M         MOVWF OUTADDR
                          M 
037C   0840               M         MOVFW F2
037D   00D9               M         MOVWF OUTDATA
                          M 
037E   2???               M         CALL WRITE_ADDR_DATA
                      01469         CC1050R FREQ_1A, F1
037F   3002               M         MOVLW 2
0380   00DA               M         MOVWF OUTADDR
                          M 
0381   0841               M         MOVFW F1
0382   00D9               M         MOVWF OUTDATA
                          M 
0383   2???               M         CALL WRITE_ADDR_DATA
                      01470         CC1050R FREQ_0A, F0
0384   3003               M         MOVLW 3
0385   00DA               M         MOVWF OUTADDR
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
0386   0842               M         MOVFW F0
0387   00D9               M         MOVWF OUTDATA
                          M 
0388   2???               M         CALL WRITE_ADDR_DATA
                      01471 
                      01472 
                      01473         CC1050R FREQ_2B, F2
0389   3004               M         MOVLW 4
038A   00DA               M         MOVWF OUTADDR
                          M 
038B   0840               M         MOVFW F2
038C   00D9               M         MOVWF OUTDATA
                          M 
038D   2???               M         CALL WRITE_ADDR_DATA
                      01474         CC1050R FREQ_1B, F1
038E   3005               M         MOVLW 5
038F   00DA               M         MOVWF OUTADDR
                          M 
0390   0841               M         MOVFW F1
0391   00D9               M         MOVWF OUTDATA
                          M 
0392   2???               M         CALL WRITE_ADDR_DATA
                      01475         CC1050R FREQ_0B, F0
0393   3006               M         MOVLW 6
0394   00DA               M         MOVWF OUTADDR
                          M 
0395   0842               M         MOVFW F0
0396   00D9               M         MOVWF OUTDATA
                          M 
0397   2???               M         CALL WRITE_ADDR_DATA
                      01476 
                      01477 
                      01478         CC1050 FSEP1,   0X00
                          M ;
0398   3007               M         MOVLW 7
0399   00DA               M         MOVWF OUTADDR
039A   3000               M         MOVLW 0X00
039B   00D9               M         MOVWF OUTDATA
039C   2???               M         CALL WRITE_ADDR_DATA
                      01479         CC1050 FSEP0,   0X32
                          M ;
039D   3008               M         MOVLW 8
039E   00DA               M         MOVWF OUTADDR
039F   3032               M         MOVLW 0X32
03A0   00D9               M         MOVWF OUTDATA
03A1   2???               M         CALL WRITE_ADDR_DATA
                      01480         CC1050 CURRENT, 0X81
                          M ;
03A2   3009               M         MOVLW 9
03A3   00DA               M         MOVWF OUTADDR
03A4   3081               M         MOVLW 0X81
03A5   00D9               M         MOVWF OUTDATA
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03A6   2???               M         CALL WRITE_ADDR_DATA
                      01481         CC1050 XOSC,    0X00
                          M ;
03A7   300A               M         MOVLW 0X0A
03A8   00DA               M         MOVWF OUTADDR
03A9   3000               M         MOVLW 0X00
03AA   00D9               M         MOVWF OUTDATA
03AB   2???               M         CALL WRITE_ADDR_DATA
                      01482         CC1050 PA_POW,  0X00
                          M ;
03AC   300B               M         MOVLW 0X0B
03AD   00DA               M         MOVWF OUTADDR
03AE   3000               M         MOVLW 0X00
03AF   00D9               M         MOVWF OUTDATA
03B0   2???               M         CALL WRITE_ADDR_DATA
                      01483         CC1050 PLL,     0X48
                          M ;
03B1   300C               M         MOVLW 0X0C
03B2   00DA               M         MOVWF OUTADDR
03B3   3048               M         MOVLW 0X48
03B4   00D9               M         MOVWF OUTDATA
03B5   2???               M         CALL WRITE_ADDR_DATA
                      01484         CC1050 LOCK,    0X10
                          M ;
03B6   300D               M         MOVLW 0X0D
03B7   00DA               M         MOVWF OUTADDR
03B8   3010               M         MOVLW 0X10
03B9   00D9               M         MOVWF OUTDATA
03BA   2???               M         CALL WRITE_ADDR_DATA
                      01485 ;;      cc1050 CAL,     x026
                      01486         CC1050 MODEM0,  0X6B    ; manchester mode 9.6kb; was 6b
                          M ;
03BB   3011               M         MOVLW 0X11
03BC   00DA               M         MOVWF OUTADDR
03BD   306B               M         MOVLW 0X6B
03BE   00D9               M         MOVWF OUTDATA
03BF   2???               M         CALL WRITE_ADDR_DATA
                      01487         CC1050 FSCTRL,  0X01    
                          M ;
03C0   3013               M         MOVLW 0X13
03C1   00DA               M         MOVWF OUTADDR
03C2   3001               M         MOVLW 0X01
03C3   00D9               M         MOVWF OUTDATA
03C4   2???               M         CALL WRITE_ADDR_DATA
                      01488         CC1050 PRESCALER, 0X40
                          M ;
03C5   301C               M         MOVLW 0X1C
03C6   00DA               M         MOVWF OUTADDR
03C7   3040               M         MOVLW 0X40
03C8   00D9               M         MOVWF OUTDATA
03C9   2???               M         CALL WRITE_ADDR_DATA
                      01489         CC1050 0X42,    0X25
                          M ;
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03CA   3042               M         MOVLW 0X42
03CB   00DA               M         MOVWF OUTADDR
03CC   3025               M         MOVLW 0X25
03CD   00D9               M         MOVWF OUTDATA
03CE   2???               M         CALL WRITE_ADDR_DATA
03CF   3400           01490         RETLW 0
                      01491 
                      01492 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      01493 ;
                      01494 ; calibrate
                      01495 
03D0                  01496 CALIBRATE:
                      01497         CC1050 PA_POW, 0
                          M ;
03D0   300B               M         MOVLW 0X0B
03D1   00DA               M         MOVWF OUTADDR
03D2   3000               M         MOVLW 0
03D3   00D9               M         MOVWF OUTDATA
03D4   2???               M         CALL WRITE_ADDR_DATA
                      01498         CC1050 CAL, CAL_DUAL | CAL_WAIT | CAL_ITERATE
                          M ;
03D5   300E               M         MOVLW 0X0E
03D6   00DA               M         MOVWF OUTADDR
03D7   3066               M         MOVLW B'01000000' | B'00100000' | B'00000110'
03D8   00D9               M         MOVWF OUTDATA
03D9   2???               M         CALL WRITE_ADDR_DATA
                      01499         CC1050 MAIN, RESET_N
                          M ;
03DA   3000               M         MOVLW 0
03DB   00DA               M         MOVWF OUTADDR
03DC   3001               M         MOVLW B'00000001'
03DD   00D9               M         MOVWF OUTDATA
03DE   2???               M         CALL WRITE_ADDR_DATA
                      01500         CC1050 CAL, CAL_DUAL | CAL_WAIT | CAL_ITERATE | CAL_START
                          M ;
03DF   300E               M         MOVLW 0X0E
03E0   00DA               M         MOVWF OUTADDR
03E1   30E6               M         MOVLW B'01000000' | B'00100000' | B'00000110' | B'10000000'
03E2   00D9               M         MOVWF OUTDATA
03E3   2???               M         CALL WRITE_ADDR_DATA
                      01501 
03E4   2???           01502         CALL W100MS
                      01503 
                      01504         CC1050 CAL, CAL_DUAL | CAL_WAIT | CAL_ITERATE
                          M ;
03E5   300E               M         MOVLW 0X0E
03E6   00DA               M         MOVWF OUTADDR
03E7   3066               M         MOVLW B'01000000' | B'00100000' | B'00000110'
03E8   00D9               M         MOVWF OUTDATA
03E9   2???               M         CALL WRITE_ADDR_DATA
                      01505         CC1050R PA_POW, POWER_OUT;
03EA   300B               M         MOVLW 0X0B
03EB   00DA               M         MOVWF OUTADDR
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
03EC   0843               M         MOVFW POWER_OUT
03ED   00D9               M         MOVWF OUTDATA
                          M 
03EE   2???               M         CALL WRITE_ADDR_DATA
03EF   3400           01506         RETLW 0
                      01507 
                      01508 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      01509 ;
                      01510 ; calibrate
                      01511 
03F0                  01512 OUTPUT_CRLF
03F0   2???           01513         CALL SEROUT_CRLF
                      01514         BANK00
                          M 
03F1   1283               M                 BCF     STATUS, RP0
03F2   1303               M                 BCF     STATUS, RP1
                          M 
03F3   0008           01515         RETURN
                      01516 
                      01517 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      01518 ;
                      01519 ; output_model
                      01520 
03F4                  01521 OUTPUT_MODEL
03F4   01E7           01522         CLRF I
                      01523         LOOP
                          M                 BEGINBLOCK
  00000001                M _BLOCKDEPTH += 1
  0000000B                M _LABELCOUNT += 1
  0000000B                M _BLOCKNUM1               = _LABELCOUNT
03F5                      M _LOOPTEST11
03F5                      M _LOOP11
03F5   0867           01524           MOVFW I
03F6   2???           01525           CALL GET_MODEL
03F7   39FF           01526           ANDLW 0XFF
03F8   1903           01527           BTFSC STATUS, Z
                      01528           BREAK 
03F9   2???               M                 GOTO    _ENDBLOCK11
03FA   2???           01529           CALL SER_OUT
                      01530           BANK00
                          M 
03FB   1283               M                 BCF     STATUS, RP0
03FC   1303               M                 BCF     STATUS, RP1
                          M 
03FD   0AE7           01531           INCF I, F
                      01532         ENDLOOP
                          M                 REDO
03FE   2???               M                 GOTO _LOOP11
                          M                 ENDBLOCK
03FF                      M _ENDBLOCK11
  00000000                M _BLOCKDEPTH -= 1
03FF   0008           01533         RETURN
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01534 
                      01535 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      01536 ;
                      01537 ; output_model
                      01538 
0400                  01539 OUTPUT_VERSION
0400   01E7           01540         CLRF I
                      01541         LOOP
                          M                 BEGINBLOCK
  00000001                M _BLOCKDEPTH += 1
  0000000C                M _LABELCOUNT += 1
  0000000C                M _BLOCKNUM1               = _LABELCOUNT
0401                      M _LOOPTEST12
0401                      M _LOOP12
0401   0867           01542           MOVFW I
0402   2???           01543           CALL GET_VERSION
0403   39FF           01544           ANDLW 0XFF
0404   1903           01545           BTFSC STATUS, Z
                      01546           BREAK 
0405   2???               M                 GOTO    _ENDBLOCK12
0406   2???           01547           CALL SER_OUT
                      01548           BANK00
                          M 
0407   1283               M                 BCF     STATUS, RP0
0408   1303               M                 BCF     STATUS, RP1
                          M 
0409   0AE7           01549           INCF I, F
                      01550         ENDLOOP
                          M                 REDO
040A   2???               M                 GOTO _LOOP12
                          M                 ENDBLOCK
040B                      M _ENDBLOCK12
  00000000                M _BLOCKDEPTH -= 1
                      01551 
040B   0008           01552         RETURN
                      01553 
                      01554 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      01555 ;
                      01556 ; read_program
                      01557 
040C                  01558 READ_PROGRAM
040C   1283           01559         BANK0   ;;;;; was bank1
040D   3020           01560         MOVLW CALLSIGN
040E   0084           01561         MOVWF FSR
                      01562 
                      01563         FOR K, 0, PROGRAM_LENGTH-1
                          M                 BEGINBLOCK
  00000001                M _BLOCKDEPTH += 1
  0000000D                M _LABELCOUNT += 1
  0000000D                M _BLOCKNUM1               = _LABELCOUNT
040F   3000               M                 MOVLW   0
0410   00EA               M                 MOVWF   K
0411   2???               M                 GOTO    $ + 2           ; skip over the increment first time
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0412                      M _LOOPTEST13
                          M                 IF PROGRAM_LENGTH-1 > 0 ; increment or decrement
0412   0AEA               M                  INCF   K,   F
0413   086A               M                  MOVFW  K
0414   3C37               M                  SUBLW  PROGRAM_LENGTH-1
0415   1C03               M                  BTFSS  STATUS, C
                          M                 ELSE
                          M                  DECF   K,   F
                          M                  MOVFW  K
                          M                  SUBLW  PROGRAM_LENGTH-1 - 1
                          M                  BTFSC  STATUS, C
                          M                 ENDIF
                          M                 BREAK
0416   2???               M                 GOTO    _ENDBLOCK13
0417                      M _LOOP13
  0000006A                M _LOOPVAR1               = K
0417   086A           01564           MOVFW K
0418   1683 1303      01565           BANKSEL EEADR
041A   009B           01566           MOVWF EEADR
                      01567           BANK00
                          M 
041B   1283               M                 BCF     STATUS, RP0
041C   1303               M                 BCF     STATUS, RP1
                          M 
041D   2???           01568           CALL FLASH_READ
041E   0080           01569           MOVWF INDF
041F   0A84           01570           INCF FSR, F
                      01571         NEXT
                          M                 CONTINUE
0420   2???               M                 GOTO    _LOOPTEST13
                          M                 ENDBLOCK
0421                      M _ENDBLOCK13
  00000000                M _BLOCKDEPTH -= 1
0421   0008           01572         RETURN
                      01573 
                      01574 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      01575 ;
                      01576 ; write_serial
                      01577 
0422                  01578 WRITE_SERIAL
0422   3020           01579         MOVLW CALLSIGN
0423   0084           01580         MOVWF FSR
                      01581 
                      01582         FOR K, SERIALNUM, SERIALNUM+9
                          M                 BEGINBLOCK
  00000001                M _BLOCKDEPTH += 1
  0000000E                M _LABELCOUNT += 1
  0000000E                M _BLOCKNUM1               = _LABELCOUNT
0424   30??               M                 MOVLW   SERIALNUM
0425   00EA               M                 MOVWF   K
0426   2???               M                 GOTO    $ + 2           ; skip over the increment first time
0427                      M _LOOPTEST14
Error[151]  : Operand contains unresolvable labels or is too complex
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                 IF SERIALNUM+9 > SERIALNUM ; increment or decrement
                          M                  INCF   K,   F
                          M                  MOVFW  K
                          M                  SUBLW  SERIALNUM+9
                          M                  BTFSS  STATUS, C
                          M                 ELSE
0427   03EA               M                  DECF   K,   F
0428   086A               M                  MOVFW  K
Error[151]  : Operand contains unresolvable labels or is too complex
0429   3C00               M                  SUBLW  SERIALNUM+9 - 1
042A   1803               M                  BTFSC  STATUS, C
                          M                 ENDIF
                          M                 BREAK
042B   2???               M                 GOTO    _ENDBLOCK14
042C                      M _LOOP14
  0000006A                M _LOOPVAR1               = K
042C   086A           01583           MOVFW K
042D   1683 1303      01584           BANKSEL       EEADR
042F   009B           01585           MOVWF EEADR
                      01586           BANK00
                          M 
0430   1283               M                 BCF     STATUS, RP0
0431   1303               M                 BCF     STATUS, RP1
                          M 
0432   0800           01587           MOVFW INDF
0433   2???           01588           CALL FLASH_WRITE
0434   0A84           01589           INCF FSR, F
                      01590         NEXT
                          M                 CONTINUE
0435   2???               M                 GOTO    _LOOPTEST14
                          M                 ENDBLOCK
0436                      M _ENDBLOCK14
  00000000                M _BLOCKDEPTH -= 1
0436   0008           01591         RETURN  
                      01592 
                      01593 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      01594 ;
                      01595 ; write_program
                      01596 ;
                      01597 
0437                  01598 WRITE_PROGRAM
0437   3020           01599         MOVLW CALLSIGN
0438   0084           01600         MOVWF FSR
                      01601 
                      01602         FOR K, 0, PROGRAM_PGM_LENGTH - 1
                          M                 BEGINBLOCK
  00000001                M _BLOCKDEPTH += 1
  0000000F                M _LABELCOUNT += 1
  0000000F                M _BLOCKNUM1               = _LABELCOUNT
0439   3000               M                 MOVLW   0
043A   00EA               M                 MOVWF   K
043B   2???               M                 GOTO    $ + 2           ; skip over the increment first time
043C                      M _LOOPTEST15
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                 IF PROGRAM_PGM_LENGTH - 1 > 0 ; increment or decrement
043C   0AEA               M                  INCF   K,   F
043D   086A               M                  MOVFW  K
043E   3C32               M                  SUBLW  PROGRAM_PGM_LENGTH - 1
043F   1C03               M                  BTFSS  STATUS, C
                          M                 ELSE
                          M                  DECF   K,   F
                          M                  MOVFW  K
                          M                  SUBLW  PROGRAM_PGM_LENGTH - 1 - 1
                          M                  BTFSC  STATUS, C
                          M                 ENDIF
                          M                 BREAK
0440   2???               M                 GOTO    _ENDBLOCK15
0441                      M _LOOP15
  0000006A                M _LOOPVAR1               = K
0441   086A           01603           MOVFW K
0442   1683 1303      01604           BANKSEL       EEADR
0444   009B           01605           MOVWF EEADR
                      01606           BANK00
                          M 
0445   1283               M                 BCF     STATUS, RP0
0446   1303               M                 BCF     STATUS, RP1
                          M 
0447   0800           01607           MOVFW INDF
0448   2???           01608           CALL FLASH_WRITE
0449   0A84           01609           INCF FSR, F
                      01610         NEXT
                          M                 CONTINUE
044A   2???               M                 GOTO    _LOOPTEST15
                          M                 ENDBLOCK
044B                      M _ENDBLOCK15
  00000000                M _BLOCKDEPTH -= 1
044B   0008           01611         RETURN
                      01612 
                      01613 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      01614 ;
                      01615 ; ad_convert
                      01616           
044C                  01617 AD_CONVERT
044C   1683 1303      01618         BANKSEL ANSEL
044E   3010           01619         MOVLW 0X10
044F   0091           01620         MOVWF ANSEL                     ; AN4 (C0) is an analog input
                      01621 
0450   1683 1303      01622         BANKSEL ADCON1
0452   3010           01623         MOVLW B'00010000'               
0453   009F           01624         MOVWF ADCON1
                      01625 
0454   1283 1303      01626         BANKSEL ADCON0
0456   3091           01627         MOVLW B'10010001'       ; RIght, VDD Vref, AN4, Start
0457   009F           01628         MOVWF ADCON0
0458   2???           01629         CALL PAUSE_1MS          ; really only needs to be 11.5 uSecs
0459   149F           01630         BSF ADCON0, GO          ; Start the conversion
045A   189F           01631         BTFSC ADCON0, GO
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 56


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

045B   2???           01632         GOTO $-1
                      01633 
045C   1283 1303      01634         BANKSEL ADRESH
045E   081E           01635         MOVF ADRESH, W
                      01636 ;       CLRF ADRESH
                      01637 
045F   1283 1303      01638         BANKSEL ADRESULTHI
0461   00D6           01639         MOVWF ADRESULTHI
                      01640 
0462   1683 1303      01641         BANKSEL ADRESL
0464   081E           01642         MOVF ADRESL, W
                      01643 ;       CLRF ADRESL
                      01644 
0465   1283 1303      01645         BANKSEL ADRESULTLO
0467   00D7           01646         MOVWF ADRESULTLO
                      01647 ;
                      01648 ; now turn it off
                      01649 ;
0468   1283 1303      01650         BANKSEL ADCON0
046A   3090           01651         MOVLW B'10010000'       ; RIght, VDD Vref, AN4, Start
046B   009F           01652         MOVWF ADCON0
                      01653 
046C   1683 1303      01654         BANKSEL ANSEL
046E   0191           01655         CLRF ANSEL
                      01656 
046F   1283 1303      01657         BANKSEL ADCON0
0471   019F           01658         CLRF ADCON0
                      01659 
0472   1683 1303      01660         BANKSEL ADCON1
0474   019F           01661         CLRF ADCON1
                      01662 
0475   1283 1303      01663         BANKSEL  ADRESULTLO
                      01664 
0477   0008           01665         RETURN
                      01666 
                      01667 #DEFINE BF_CARRY 3, 0
                      01668 #DEFINE BF_ZERO 3, 2
                      01669 
                      01670 #DEFINE SAME 1
                      01671 #DEFINE WREG 0
                      01672 
                      01673 #DEFINE STC BSF BF_CARRY
                      01674 #DEFINE CLC BCF BF_CARRY
                      01675 
                      01676 ;-[ Div ]--------------------------------------------------------------
                      01677 ; Call w/: Number in f_divhi:f_divlo, divisor in W.
                      01678 ; Returns: Quotient in f_divlo, remainder in f_divhi. W preserved.
                      01679 ;          Carry set if error. Z if divide by zero, NZ if divide overflow.
                      01680 ; Notes:   Works by left shifted subtraction.
                      01681 ;          Size = 29, Speed(w/ call&ret) = 7 cycles if div by zero
                      01682 ;          Speed = 94 minimum, 129 maximum cycles
                      01683 
                      01684         
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 57


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0478                  01685 DIV:
0478   3E00           01686     ADDLW 0          ; w+=0 (to test for div by zero)
0479   1403           01687     STC              ; set carry in case of error
047A   1903           01688     BTFSC BF_ZERO    ; if zero
047B   0008           01689     RETURN          ;   return (error C,Z)
                      01690 
047C   2???           01691     CALL DIVSKIPHISHIFT
  00000008            01692 IDIVREPEAT = 8
                      01693     WHILE IDIVREPEAT
                      01694 
047D   2???           01695     CALL DIVCODE
                      01696 
  00000007            01697 IDIVREPEAT--
                      01694 
047E   2???           01695     CALL DIVCODE
                      01696 
  00000006            01697 IDIVREPEAT--
                      01694 
047F   2???           01695     CALL DIVCODE
                      01696 
  00000005            01697 IDIVREPEAT--
                      01694 
0480   2???           01695     CALL DIVCODE
                      01696 
  00000004            01697 IDIVREPEAT--
                      01694 
0481   2???           01695     CALL DIVCODE
                      01696 
  00000003            01697 IDIVREPEAT--
                      01694 
0482   2???           01695     CALL DIVCODE
                      01696 
  00000002            01697 IDIVREPEAT--
                      01694 
0483   2???           01695     CALL DIVCODE
                      01696 
  00000001            01697 IDIVREPEAT--
                      01694 
0484   2???           01695     CALL DIVCODE
                      01696 
  00000000            01697 IDIVREPEAT--
                      01698     ENDW
                      01699 
0485   0DED           01700     RLF F_DIVLO, SAME ; C << lo << C
                      01701 
                      01702     ; If the first subtract didn't underflow, and the carry was shifted
                      01703     ; into the quotient, then it will be shifted back off the end by this
                      01704     ; last RLF. This will automatically raise carry to indicate an error.
                      01705     ; The divide will be accurate to quotients of 9-bits, but past that
                      01706     ; the quotient and remainder will be bogus and carry will be set.
                      01707 
0486   1103           01708     BCF BF_ZERO  ; NZ (in case of overflow error)
0487   0008           01709     RETURN       ; we are done!
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 58


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01710 
0488                  01711 DIVCODE
0488   0DED           01712     RLF F_DIVLO, SAME    ; C << lo << C
0489   0DEC           01713     RLF F_DIVHI, SAME    ; C << hi << C
048A   1C03           01714     BTFSS BF_CARRY       ; if Carry
048B   2???           01715     GOTO DIVSKIPHISHIFT ;
048C   02EC           01716     SUBWF F_DIVHI, SAME  ;   hi-=w
048D   1403           01717     STC                  ;   ignore carry
048E   0008           01718     RETURN               ;   done
                      01719                          ; endif
048F                  01720 DIVSKIPHISHIFT
048F   02EC           01721     SUBWF F_DIVHI, SAME  ; hi-=w
0490   1803           01722     BTFSC BF_CARRY       ; if carry set
0491   0008           01723     RETURN              ;   done
0492   07EC           01724     ADDWF F_DIVHI, SAME  ; hi+=w
0493   1003           01725     CLC                  ; clear carry
0494   0008           01726     RETURN               ; done
                      01727 
                      01728 
0495                  01729 MPY8X8:
                      01730 
0495   01EC           01731         CLRF F_DIVHI
0496   01E7           01732         CLRF I
0497   15E7           01733         BSF I,3
Message[305]: Using default destination of 1 (file).
0498   0CED           01734         RRF F_DIVLO
                      01735 
0499                  01736 LOOPMULT:
                      01737 
0499   1803           01738         SKPNC
Message[305]: Using default destination of 1 (file).
049A   07EC           01739         ADDWF F_DIVHI
                      01740         
Message[305]: Using default destination of 1 (file).
049B   0CEC           01741         RRF F_DIVHI
Message[305]: Using default destination of 1 (file).
049C   0CED           01742         RRF F_DIVLO
                      01743 
Message[305]: Using default destination of 1 (file).
049D   0BE7           01744         DECFSZ I
049E   2???           01745         GOTO LOOPMULT
049F   0008           01746         RETURN
                      01747 
                      01748 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      01749 ;
                      01750 ; div_and_morse
                      01751 ;
                      01752 ; change the AD value into decimal by dividing my some magic numbers,
                      01753 ; and the transmit these values;
                      01754 ;
                      01755 ; more magic numbers
                      01756 ;
                      01757 
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 59


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04A0                  01758 DIV_AND_MORSE:
                      01759 
                      01760 
04A0   3001           01761         MOVLW MSPACE
04A1   00E0           01762         MOVWF SEND
04A2   2???           01763         CALL MOROUT
                      01764 
04A3   0856           01765         MOVFW ADRESULTHI
04A4   00EC           01766         MOVWF F_DIVHI
                      01767 
04A5   0857           01768         MOVFW ADRESULTLO
04A6   00ED           01769         MOVWF F_DIVLO
                      01770 
04A7   30AB           01771         MOVLW D'171'
04A8   2???           01772         CALL DIV                ; now quotent is in low, remainder in hi
                      01773 
04A9   086D           01774         MOVFW F_DIVLO
04AA   2???           01775         CALL MSGNUM
04AB   00E0           01776         MOVWF   SEND            ; save the morse character
04AC   2???           01777         CALL MOROUT
                      01778 
04AD   3056           01779         MOVLW MPERIOD
04AE   00E0           01780         MOVWF SEND
04AF   2???           01781         CALL MOROUT
                      01782 
04B0   086C           01783         MOVFW F_DIVHI
04B1   00ED           01784         MOVWF F_DIVLO
04B2   01EC           01785         CLRF F_DIVHI
04B3   300A           01786         MOVLW D'10'
04B4   2???           01787         CALL MPY8X8
Warning[209]: Missing quote
04B5   30AB           01788         MOVLW D'171
04B6   2???           01789         CALL DIV
                      01790 
04B7   086D           01791         MOVFW F_DIVLO
04B8   2???           01792         CALL MSGNUM
04B9   00E0           01793         MOVWF   SEND            ; save the morse character
04BA   2???           01794         CALL MOROUT
                      01795 
04BB   086C           01796         MOVFW F_DIVHI
04BC   00ED           01797         MOVWF F_DIVLO
04BD   01EC           01798         CLRF F_DIVHI
04BE   300A           01799         MOVLW D'10'
04BF   2???           01800         CALL MPY8X8
04C0   30AB           01801         MOVLW D'171'
04C1   2???           01802         CALL DIV
                      01803 
04C2   086D           01804         MOVFW F_DIVLO
04C3   2???           01805         CALL MSGNUM
04C4   00E0           01806         MOVWF   SEND            ; save the morse character
04C5   2???           01807         CALL MOROUT
                      01808 
04C6   0008           01809         RETURN
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 60


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01810 
                      01811 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      01812 ;
                      01813 ; TImer is ticking once every xxx secsonds timer counts up;
                      01814 ; timer interrupts when it wraps from FFFF-> 0.
                      01815 ;
                      01816 ; clock speed / 2 = tick rate
                      01817 ; pre-scaler is 8, so 4Mhz/2/8 = 125,000 Hz.
                      01818 ; 
                      01819 ; that means  one cycle from 0-> FFFF (65536)
                      01820 ; and anther cycle from 17b8-> FFFF   (another 59464) 
                      01821 ; for a total of 125000 ticks of the clock.
                      01822 ;
                      01823 ; I think it should really be 17B8, not 28B8
                      01824 ; 
                      01825 ; When timer expires,  inc timer, which  really  consist of 3 
                      01826 ; seperate 8 bit counters .
                      01827 ;
                      01828 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      01829 
04C7                  01830 CLKINT                          
                      01831         
                      01832         IFBC CLK_STATE, 0
                          M                 BEGINIF
  00000001                M _IFDEPTH += 1
  00000010                M _LABELCOUNT += 1
  00000010                M _IFNUM1            = _LABELCOUNT
04C7   186E               M                 BTFSC   CLK_STATE, 0
04C8   2???               M                 GOTO    _IF16
04C9   146E           01833           BSF CLK_STATE, 0
04CA   30B8           01834           MOVLW 0XB8
04CB   008E           01835           MOVWF TMR1L
04CC   3017           01836           MOVLW 0X17
04CD   008F           01837           MOVWF TMR1H
04CE   0008           01838           RETURN
                      01839         ENDIF_
04CF                      M _IF16
  00000000                M _IFDEPTH -= 1
                      01840 
                      01841         IFBS CLK_STATE, 0
                          M                 BEGINIF
  00000001                M _IFDEPTH += 1
  00000011                M _LABELCOUNT += 1
  00000011                M _IFNUM1            = _LABELCOUNT
04CF   1C6E               M                 BTFSS   CLK_STATE, 0
04D0   2???               M                 GOTO    _IF17
04D1   106E           01842           BCF CLK_STATE, 0
Message[305]: Using default destination of 1 (file).
04D2   0AD5           01843           INCF TIME0
                      01844           IFBS STATUS, ZEROF
                          M                 BEGINIF
  00000002                M _IFDEPTH += 1
  00000012                M _LABELCOUNT += 1
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 61


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000012                M _IFNUM2            = _LABELCOUNT
04D3   1D03               M                 BTFSS   STATUS, ZEROF
04D4   2???               M                 GOTO    _IF18
Message[305]: Using default destination of 1 (file).
04D5   0AD4           01845             INCF TIME1
                      01846             IFBS STATUS, ZEROF
                          M                 BEGINIF
  00000003                M _IFDEPTH += 1
  00000013                M _LABELCOUNT += 1
  00000013                M _IFNUM3            = _LABELCOUNT
04D6   1D03               M                 BTFSS   STATUS, ZEROF
04D7   2???               M                 GOTO    _IF19
Message[305]: Using default destination of 1 (file).
04D8   0AD3           01847               INCF TIME2
04D9   0008           01848               RETURN
                      01849             ENDIF_
04DA                      M _IF19
  00000002                M _IFDEPTH -= 1
04DA   0008           01850             RETURN
                      01851           ENDIF_
04DB                      M _IF18
  00000001                M _IFDEPTH -= 1
04DB   0008           01852           RETURN
                      01853         ENDIF_
04DC                      M _IF17
  00000000                M _IFDEPTH -= 1
                      01854 
                      01855         ;; should never get here.....
04DC   0063           01856         SLEEP
                      01857 
                      01858 
                      01859         
                      01860 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      01861  
04DD                  01862 PAUSE_1MS
                      01863 #IFDEF DEBUG
                      01864         RETURN
                      01865 #ENDIF
                      01866         FROM PAUSE_I, .199
                          M                 BEGINBLOCK
  00000001                M _BLOCKDEPTH += 1
  00000014                M _LABELCOUNT += 1
  00000014                M _BLOCKNUM1               = _LABELCOUNT
04DD   30C7               M                 MOVLW   .199
04DE   00EB               M                 MOVWF   PAUSE_I
04DF                      M _LOOP20
  0000006B                M _LOOPVAR1               = PAUSE_I
04DF   2???           01867         GOTO $+1
                      01868         ENDFROM
04E0                      M _LOOPTEST20
04E0   0BEB               M                 DECFSZ  _LOOPVAR1,               F
                          M                 REDO
04E1   2???               M                 GOTO _LOOP20
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 62


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                 ENDBLOCK
04E2                      M _ENDBLOCK20
  00000000                M _BLOCKDEPTH -= 1
                      01869 
04E2   0008           01870         RETURN
                      01871 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      01872 
Warning[205]: Found directive in column 1. (RADIX)
                      01873 RADIX DEC
                      01874 
                      01875 #DEFINE SERIN_DEC
                      01876 #DEFINE SEROUT_DEC
                      01877 #DEFINE BAUD_RATE 2400
                      01878 #INCLUDE "serutil.asm"
                      00001 ;----------------------------------------------------------------------
                      00002 ;
                      00003 ; File: serutil.asm
                      00004 ;   Serial I/O routines for decimal, 
                      00005 ;
                      00006 ; Author:
                      00007 ;       Robert F. Nee
                      00008 ;       robnee@robnee.com
                      00009 ;
                      00010 ; Revisions:
                      00011 ;       last delta :  03/10/04 23:15:49
                      00012 ;
                      00013 ;       6/10/99 V1.0
                      00014 ;       Initial fully functional release.
                      00015 ;
                      00016 ;       2/12/02 V1.1
                      00017 ;       Added #ifdefs to allow turning off unnecessary routines.
                      00018 ;       Tweaked time delays to be more precise
                      00019 ;       ser_disable no longer turns off the GIE to prevent interference
                      00020 ;       with other interrupt services.
                      00021 ;
                      00022 ;       Serout disables all interrupts temporarily
                      00023 ;
                      00024 ;       12/15/03 V1.2
                      00025 ;       Added ser_wait routine that waits for a serial character (forever)
                      00026 ;       and returns it when received.
                      00027 ;
                      00028 ;       1/3/04 V1.3
                      00029 ;       Rewrote several routines to eliminate labels
                      00030 ;       Fixed serout_dec to properly display values where the middle digit is 0
                      00031 ;       Added bank control logic
                      00032 ;
                      00033 ;----------------------------------------------------------------------
                      00034 
                      00035         CBLOCK
  0000006F            00036 SER_VALUE       ; temp variable for serial display routine
  00000070            00037 SER_DIGIT       ; digit counter for serial display routine
  00000071            00038 SER_INPUT       ; temp variable for serial input routine
                      00039         ENDC
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 63


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00040 
                      00041 ;----------------------------------------------------------------------
                      00042 
04E3                  00043 SER_OUT_BANK
04E3   2???           00044                 CALL    SER_OUT
04E4   1283 1303      00045                 BANKSEL SER_VALUE
                      00046 
04E6   0008           00047                 RETURN
                      00048 
                      00049 ;----------------------------------------------------------------------
                      00050 
04E7                  00051 SEROUT_CRLF
04E7   300D           00052                 MOVLW   '\r'
04E8   2???           00053                 CALL    SER_OUT_BANK
04E9   300A           00054                 MOVLW   '\n'
04EA   2???           00055                 CALL    SER_OUT_BANK
                      00056 
04EB   0008           00057                 RETURN
                      00058 
                      00059 ;----------------------------------------------------------------------
                      00060 ; Output the byte in W in hex
                      00061 
                      00062 #IFDEF SEROUT_HEX
                      00063 
                      00064 SEROUT_HEX
                      00065                 MOVWF   SER_VALUE
                      00066 
                      00067                 ; isolate MSN
                      00068                 SWAPF   SER_VALUE, W
                      00069                 ANDLW   0X0F
                      00070 
                      00071                 CALL    NIB_TO_ASCII
                      00072                 CALL    SER_OUT_BANK
                      00073 
                      00074                 ; isolate LSN
                      00075                 MOVFW   SER_VALUE
                      00076                 ANDLW   0X0F
                      00077 
                      00078                 CALL    NIB_TO_ASCII
                      00079                 CALL    SER_OUT_BANK
                      00080 
                      00081                 RETURN
                      00082 
                      00083 NIB_TO_ASCII
                      00084                 MOVWF   SER_DIGIT
                      00085                 MOVLW   0X0A
                      00086                 SUBWF   SER_DIGIT, W            ; is it greater than 10?
                      00087 
                      00088                 IFBS    STATUS, C
                      00089                  MOVLW  'A' - 10
                      00090                  ADDWF  SER_DIGIT, W
                      00091                 ELSE_
                      00092                  MOVLW  '0'
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 64


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00093                  ADDWF  SER_DIGIT, W
                      00094                 ENDIF_
                      00095 
                      00096                 RETURN
                      00097 
                      00098 #ENDIF
                      00099 
                      00100 ;----------------------------------------------------------------------
                      00101 ; Output the byte in W in decimal
                      00102 
                      00103 #IFDEF SEROUT_DEC
                      00104 
                      00105 SEROUT_DEC
04EC   00EF           00106                 MOVWF   SER_VALUE
                      00107 
04ED   01F0           00108                 CLRF    SER_DIGIT
                      00109 
                      00110                 LOOP
                          M                 BEGINBLOCK
  00000001                M _BLOCKDEPTH += 1
  00000015                M _LABELCOUNT += 1
  00000015                M _BLOCKNUM1               = _LABELCOUNT
04EE                      M _LOOPTEST21
04EE                      M _LOOP21
04EE   3064           00111                  MOVLW  100
04EF   02EF           00112                  SUBWF  SER_VALUE, F
04F0   1C03           00113                  BTFSS  STATUS, C
                      00114                   BREAK
04F1   2???               M                 GOTO    _ENDBLOCK21
                      00115 
04F2   0AF0           00116                  INCF   SER_DIGIT, F    ; increment the 100s
                      00117                 ENDLOOP
                          M                 REDO
04F3   2???               M                 GOTO _LOOP21
                          M                 ENDBLOCK
04F4                      M _ENDBLOCK21
  00000000                M _BLOCKDEPTH -= 1
                      00118 
04F4   3064           00119                 MOVLW   100
04F5   07EF           00120                 ADDWF   SER_VALUE, F    ; add the last 100 back
                      00121 
                      00122                 ; output the 100s digit
                      00123                 IFNE    SER_DIGIT, 0
                          M                 BEGINIF
  00000001                M _IFDEPTH += 1
  00000016                M _LABELCOUNT += 1
  00000016                M _IFNUM1            = _LABELCOUNT
04F6   0870               M                 MOVFW   SER_DIGIT
04F7   3C00               M                 SUBLW   0
04F8   1903               M                 BTFSC   STATUS, Z
04F9   2???               M                 GOTO    _IF22
04FA   0870           00124                  MOVFW  SER_DIGIT
04FB   3E30           00125                  ADDLW  '0'
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 65


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04FC   2???           00126                  CALL   SER_OUT_BANK
                      00127 
04FD   01F0           00128                  CLRF   SER_DIGIT               ; reset the digit counter
                      00129 
                      00130                  LOOP
                          M                 BEGINBLOCK
  00000001                M _BLOCKDEPTH += 1
  00000017                M _LABELCOUNT += 1
  00000017                M _BLOCKNUM1               = _LABELCOUNT
04FE                      M _LOOPTEST23
04FE                      M _LOOP23
04FE   300A           00131                   MOVLW 10
04FF   02EF           00132                   SUBWF SER_VALUE, F
0500   1C03           00133                   BTFSS STATUS, C
                      00134                    BREAK
0501   2???               M                 GOTO    _ENDBLOCK23
                      00135 
0502   0AF0           00136                   INCF  SER_DIGIT, F    ; increment the 100s
                      00137                  ENDLOOP
                          M                 REDO
0503   2???               M                 GOTO _LOOP23
                          M                 ENDBLOCK
0504                      M _ENDBLOCK23
  00000000                M _BLOCKDEPTH -= 1
                      00138 
0504   300A           00139                  MOVLW  10
0505   07EF           00140                  ADDWF  SER_VALUE, F    ; add the last 10 back
                      00141 
0506   0870           00142                  MOVFW  SER_DIGIT               ; output the 10s digit
0507   3E30           00143                  ADDLW  '0'
0508   2???           00144                  CALL   SER_OUT_BANK
                      00145                 ELSE_
  00000018                M _LABELCOUNT += 1
0509   2???               M                 GOTO    _IF24
050A                      M _IF22
  00000018                M _IFNUM1            = _LABELCOUNT
050A   01F0           00146                  CLRF   SER_DIGIT               ; reset the digit counter
                      00147 
                      00148                  LOOP
                          M                 BEGINBLOCK
  00000001                M _BLOCKDEPTH += 1
  00000019                M _LABELCOUNT += 1
  00000019                M _BLOCKNUM1               = _LABELCOUNT
050B                      M _LOOPTEST25
050B                      M _LOOP25
050B   300A           00149                   MOVLW 10
050C   02EF           00150                   SUBWF SER_VALUE, F
050D   1C03           00151                   BTFSS STATUS, C
                      00152                    BREAK
050E   2???               M                 GOTO    _ENDBLOCK25
                      00153 
050F   0AF0           00154                   INCF  SER_DIGIT, F    ; increment the 100s
                      00155                  ENDLOOP
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 66


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                 REDO
0510   2???               M                 GOTO _LOOP25
                          M                 ENDBLOCK
0511                      M _ENDBLOCK25
  00000000                M _BLOCKDEPTH -= 1
                      00156 
0511   300A           00157                  MOVLW  10
0512   07EF           00158                  ADDWF  SER_VALUE, F    ; add the last 10 back
                      00159 
                      00160                  IFNE   SER_DIGIT, 0    ; ignore if 0
                          M                 BEGINIF
  00000002                M _IFDEPTH += 1
  0000001A                M _LABELCOUNT += 1
  0000001A                M _IFNUM2            = _LABELCOUNT
0513   0870               M                 MOVFW   SER_DIGIT
0514   3C00               M                 SUBLW   0
0515   1903               M                 BTFSC   STATUS, Z
0516   2???               M                 GOTO    _IF26
0517   0870           00161                   MOVFW SER_DIGIT               ; output the 10s digit
0518   3E30           00162                   ADDLW '0'
0519   2???           00163                   CALL  SER_OUT_BANK
                      00164                  ENDIF_
051A                      M _IF26
  00000001                M _IFDEPTH -= 1
                      00165                 ENDIF_
051A                      M _IF24
  00000000                M _IFDEPTH -= 1
                      00166 
051A   086F           00167                 MOVFW   SER_VALUE
051B   3E30           00168                 ADDLW   '0'
051C   2???           00169                 CALL    SER_OUT_BANK
                      00170 
051D   0008           00171                 RETURN
                      00172 
                      00173 #ENDIF
                      00174 
                      00175 ;----------------------------------------------------------------------
                      00176 ; Output the byte in W in binary
                      00177 
                      00178 #IFDEF SEROUT_BIN
                      00179 
                      00180 SEROUT_BIN
                      00181                 MOVWF           SER_VALUE
                      00182 
                      00183                 ; clock in the bits
                      00184                 FROM            SER_DIGIT, 8
                      00185                  RLF            SER_VALUE, F
                      00186                  IFBC           STATUS, C
                      00187                   MOVLW         '0'
                      00188                  ELSE_
                      00189                   MOVLW         '1'
                      00190                  ENDIF_
                      00191                  CALL           SER_OUT_BANK
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 67


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00192                 ENDFROM
                      00193 
                      00194                 RETURN
                      00195 
                      00196 #ENDIF
                      00197 
                      00198 ;----------------------------------------------------------------------
                      00199 ;
                      00200 
                      00201 #IFDEF SERIN_DEC
                      00202 
                      00203 SERIN_DEC
051E   00F1           00204                 MOVWF   SER_INPUT
                      00205 
051F   30FF           00206                 MOVLW   0XFF
Error[128]  : Missing argument(s)
051F   30FF           00207                 CALL    SEROUT_DEC
                      00208 
                      00209                 LOOP
                          M                 BEGINBLOCK
  00000001                M _BLOCKDEPTH += 1
  0000001B                M _LABELCOUNT += 1
  0000001B                M _BLOCKNUM1               = _LABELCOUNT
0520                      M _LOOPTEST27
0520                      M _LOOP27
0520   2???           00210                  CALL   SER_ERASE
0521   0871           00211                  MOVFW  SER_INPUT
Error[128]  : Missing argument(s)
0521   0871           00212                  CALL   SEROUT_DEC              ; Display the current value
                      00213 
                      00214                  ; pad with spaces
                      00215                  IFLT   SER_INPUT, 100
                          M                 BEGINIF
  00000001                M _IFDEPTH += 1
  0000001C                M _LABELCOUNT += 1
  0000001C                M _IFNUM1            = _LABELCOUNT
0522   0871               M                 MOVFW   SER_INPUT
0523   3C63               M                 SUBLW   100 - 1
0524   1C03               M                 BTFSS   STATUS, C
0525   2???               M                 GOTO    _IF28
0526   3020           00216                   MOVLW ' '
0527   2???           00217                   CALL  SER_OUT_BANK
                      00218                  ENDIF_
0528                      M _IF28
  00000000                M _IFDEPTH -= 1
                      00219 
                      00220                  IFLT   SER_INPUT, 10
                          M                 BEGINIF
  00000001                M _IFDEPTH += 1
  0000001D                M _LABELCOUNT += 1
  0000001D                M _IFNUM1            = _LABELCOUNT
0528   0871               M                 MOVFW   SER_INPUT
0529   3C09               M                 SUBLW   10  - 1
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 68


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

052A   1C03               M                 BTFSS   STATUS, C
052B   2???               M                 GOTO    _IF29
052C   3020           00221                   MOVLW ' '
052D   2???           00222                   CALL  SER_OUT_BANK
                      00223                  ENDIF_
052E                      M _IF29
  00000000                M _IFDEPTH -= 1
                      00224                  
                      00225                  ; Get command
052E   2???           00226                  CALL           SER_WAIT
052F   1283 1303      00227                  BANKSEL        SER_INPUT
                      00228 
                      00229                  SWITCH
  0000000B                M _CASECOUNT += 1
  0000001E                M _LABELCOUNT += 1
  00000001                M _SWITCHDEPTH += 1
  0000001E                M _SWITCHNUM1                = _LABELCOUNT
                      00230                  CASE   '+'
  0000002B                M _CASEVAL = '+'
0531   3A2B               M                 XORLW   '+'
                          M                 BNE     _CASE11
0532   1D03               M                 BTFSS   STATUS, Z
0533   2???               M                 GOTO    _CASE11
0534   0AF1           00231                   INCF  SER_INPUT, F
                      00232                  ENDCASE
0535   2???               M                 GOTO    _ENDSWITCH30
0536                      M _CASE11
  0000000C                M _CASECOUNT += 1
0536   3A2B               M                 XORLW   _CASEVAL                ; restore previous value of W
                      00233 
                      00234                  CASE   '-'
  0000002D                M _CASEVAL = '-'
0537   3A2D               M                 XORLW   '-'
                          M                 BNE     _CASE12
0538   1D03               M                 BTFSS   STATUS, Z
0539   2???               M                 GOTO    _CASE12
053A   03F1           00235                   DECF  SER_INPUT, F
                      00236                  ENDCASE
053B   2???               M                 GOTO    _ENDSWITCH30
053C                      M _CASE12
  0000000D                M _CASECOUNT += 1
053C   3A2D               M                 XORLW   _CASEVAL                ; restore previous value of W
                      00237 
                      00238                  CASE   '0'
  00000030                M _CASEVAL = '0'
053D   3A30               M                 XORLW   '0'
                          M                 BNE     _CASE13
053E   1D03               M                 BTFSS   STATUS, Z
053F   2???               M                 GOTO    _CASE13
0540   01F1           00239                   CLRF  SER_INPUT
                      00240                  ENDCASE
0541   2???               M                 GOTO    _ENDSWITCH30
0542                      M _CASE13
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 69


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000000E                M _CASECOUNT += 1
0542   3A30               M                 XORLW   _CASEVAL                ; restore previous value of W
                      00241 
                      00242                  CASE   27
  0000001B                M _CASEVAL = 27
0543   3A1B               M                 XORLW   27
                          M                 BNE     _CASE14
0544   1D03               M                 BTFSS   STATUS, Z
0545   2???               M                 GOTO    _CASE14
0546   34FF           00243                   RETLW 0XFF
                      00244                  ENDCASE
0547   2???               M                 GOTO    _ENDSWITCH30
0548                      M _CASE14
  0000000F                M _CASECOUNT += 1
0548   3A1B               M                 XORLW   _CASEVAL                ; restore previous value of W
                      00245 
                      00246                  CASE   '\r'
  0000000D                M _CASEVAL = '\r'
0549   3A0D               M                 XORLW   '\r'
                          M                 BNE     _CASE15
054A   1D03               M                 BTFSS   STATUS, Z
054B   2???               M                 GOTO    _CASE15
054C   0871           00247                   MOVFW SER_INPUT
054D   0008           00248                   RETURN
                      00249                  ENDCASE
054E   2???               M                 GOTO    _ENDSWITCH30
054F                      M _CASE15
  00000010                M _CASECOUNT += 1
054F   3A0D               M                 XORLW   _CASEVAL                ; restore previous value of W
                      00250 
                      00251                  ENDSWITCH
0550                      M _ENDSWITCH30
0550                      M _CASE16
  00000000                M _SWITCHDEPTH -= 1
                      00252                 ENDLOOP
                          M                 REDO
0550   2???               M                 GOTO _LOOP27
                          M                 ENDBLOCK
0551                      M _ENDBLOCK27
  00000000                M _BLOCKDEPTH -= 1
                      00253 
0551   0008           00254                 RETURN
                      00255 
                      00256 ;----------------------------------------------------------------------
                      00257 ; Erase the input value
                      00258 
0552                  00259 SER_ERASE
0552   3008           00260                 MOVLW   '\b'
0553   2???           00261                 CALL    SER_OUT
0554   3008           00262                 MOVLW   '\b'
0555   2???           00263                 CALL    SER_OUT
0556   3008           00264                 MOVLW   '\b'
0557   2???           00265                 CALL    SER_OUT
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 70


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00266 
0558   0008           00267                 RETURN
                      00268                  
                      00269 #ENDIF
                      01879 #INCLUDE "serial.asm" 
                      00001 ;----------------------------------------------------------------------
                      00002 ;
                      00003 ; File: serial.asm
                      00004 ;   Serial I/O routines.  define BAUD_RATE prior to including
                      00005 ;
                      00006 ; Author:
                      00007 ;       Robert F. Nee
                      00008 ;       robnee@robnee.com
                      00009 ;
                      00010 ; Revisions:
                      00011 ;       last delta :  05/27/04 18:49:27
                      00012 ;
                      00013 ;       6/10/99 V1.0
                      00014 ;       Initial fully functional release.
                      00015 ;
                      00016 ;       2/12/02 V1.1
                      00017 ;       Added #ifdefs to allow turning off unnecessary routines.
                      00018 ;       Tweaked time delays to be more precise
                      00019 ;       ser_disable no longer turns off the GIE to prevent interference
                      00020 ;       with other interrupt services.
                      00021 ;
                      00022 ;       Serout disables all interrupts temporarily
                      00023 ;
                      00024 ;       12/15/03 V1.2
                      00025 ;       Added ser_wait routine that waits for a serial character (forever)
                      00026 ;       and returns it when received.
                      00027 ;
                      00028 ;       1/3/04 V1.3
                      00029 ;       Rewrote several routines to eliminate labels
                      00030 ;       Fixed serout_dec to properly display values where the middle digit is 0
                      00031 ;       Added bank control logic
                      00032 ;
                      00033 ;       3/8/04 V1.4
                      00034 ;       Rewrite timing routines to save program space
                      00035 ;       Moved ancillary routines to their own file
                      00036 ;
                      00037 ;       5/12/04 V1.9
                      00038 ;       Use a common delay routine
                      00039 ;       Turn delays into formulae so BAUD_RATE can be specified
                      00040 ;
                      00041 ;       5/26/04 V1.10
                      00042 ;       Eliminate the SER_ENABLE flag.  One can test if the serial port is
                      00043 ;       enabled by looking at the INTE flag
                      00044 ;       Allow serwait to fall through to ser_get to save the goto instruction
                      00045 ;       No longer uses excessive logic to disable and reenable GIE.  Simply
                      00046 ;       disables it on ser_out and the enables at the end.  No issue enabling
                      00047 ;       GIE even if it wasn't enabled to start.
                      00048 ;----------------------------------------------------------------------
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 71


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00049 
  00000000            00050 SER_READY       EQU     0
  00000001            00051 SER_ERROR       EQU     1
                      00052 
                      00053         CBLOCK
  00000072            00054 SER_DATA        ; Serial data
  00000073            00055 SER_TEMP
  00000074            00056 SER_CON         ; Serial I/O status and control
  00000075            00057 SER_ITER        ; Loop counter for serial bit timing
  00000076            00058 SER_BIT_COUNT   ; Serial bit count
                      00059         ENDC
                      00060 
                      00061 ;----------------------------------------------------------------------
                      00062 ; Baud rate delays. assumes BAUD_RATE is defined to adjust serial timing.
                      00063 
  003D0900            00064 CLOCK_SPEED     EQU 4000000                                                             ; Clock speed in
                             Hz
  000F4240            00065 CYCLE_SPEED     EQU CLOCK_SPEED / 4                                                     ; Cycles per sec
                            ond
  000001A1            00066 BAUD_TIME       EQU (CYCLE_SPEED + BAUD_RATE/2) / BAUD_RATE     ; time between bits in cycles
  0000008A            00067 BAUD_DELAY      EQU (BAUD_TIME - 4 + 3/2)/3                                     ; Iterations for 1 bit d
                            elay
  000000CF            00068 BAUD_DELAY2     EQU (BAUD_TIME - 4 + 1)/2                                       ; Iterations for 3/2 bit
                             delay
                      00069 ;BAUD_TIME equ 417
                      00070 ;BAUD_DELAY equ 138
                      00071 ;BAUD_DELAY2 equ 207
                      00072 
                      00073 
                      00074 ;----------------------------------------------------------------------
                      00075 ; Call ser_del doing cycle calculations.  Takes desired number of cycles
                      00076 ; to pause and accounts for 5 cycles for setup/call/return then divides
                      00077 ; by 3 and rounds the result (by adding 3/2)
                      00078 
                      00079 SER_DELAY       MACRO CYCLES
                      00080                         MOVLW   (CYCLES - 5 + 3/2)/3
                      00081                         CALL    SER_DEL
                      00082                         ENDM
                      00083 
                      00084 ;----------------------------------------------------------------------
                      00085 ; Ser_enable - enables the serial input buffer interrupt
                      00086 
0559                  00087 SER_ENABLE
0559   1283 1303      00088                 BANKSEL SER_DATA
055B   01F2           00089                 CLRF    SER_DATA
055C   01F4           00090                 CLRF    SER_CON
                      00091 
                      00092                 ; Set the interupt trigger to rising edge
055D   1683 1303      00093                 BANKSEL OPTION_REG
055F   1701           00094                 BSF             OPTION_REG, INTEDG
                      00095 
                      00096                 ; Enable RB0 interrupt
0560   178B           00097                 BSF             INTCON, GIE
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 72


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0561   158B           00098                 BSF             INTCON, RAIE
0562   1416           00099                 BSF IOCA, 0
0563   1283 1303      00100         BANKSEL SER_DATA
                      00101 
0565   0008           00102                 RETURN
                      00103 
                      00104 ;----------------------------------------------------------------------
                      00105 ; Ser_disable - disables the serial input buffer interrupt
                      00106 
0566                  00107 SER_DISABLE
                      00108                 ; Disable RB0 interrupt
0566   120B           00109                 BCF     INTCON, INTE
                      00110 
0567   0008           00111                 RETURN
                      00112 
                      00113 ;----------------------------------------------------------------------
                      00114 ; ser_del - delay for 3 * W + 4 cycles
                      00115 
0568                  00116 SER_DEL                                                 ; 2 call
0568   00F5           00117                 MOVWF   SER_ITER                ; 1 init
                      00118                 LOOP
                          M                 BEGINBLOCK
  00000001                M _BLOCKDEPTH += 1
  0000001F                M _LABELCOUNT += 1
  0000001F                M _BLOCKNUM1               = _LABELCOUNT
0569                      M _LOOPTEST31
0569                      M _LOOP31
0569   0BF5           00119                  DECFSZ SER_ITER, F             ; 3 * (W - 1) + 2
                      00120                 ENDLOOP
                          M                 REDO
056A   2???               M                 GOTO _LOOP31
                          M                 ENDBLOCK
056B                      M _ENDBLOCK31
  00000000                M _BLOCKDEPTH -= 1
                      00121 
056B   0008           00122                 RETURN                                  ; 2
                      00123 
                      00124 
                      00125 ;----------------------------------------------------------------------
                      00126 ; Serin - reads one character from the serial port
                      00127 ;
                      00128 ; Serin set bit 0 of ser_con to 1 when a character is available.  The
                      00129 ; consumer should reset this bit.  On error bit 1 of ser_con is set
                      00130 ; to high until the next byte comes in.  An error condition can be set
                      00131 ; while there is still an available character.
                      00132 
056C                  00133 SER_IN
                      00134                 ; Clear the ready flag and set the error flag until good data
056C   1283 1303      00135                 BANKSEL SER_CON
056E   1074           00136                 BCF             SER_CON, SER_READY
056F   14F4           00137                 BSF             SER_CON, SER_ERROR
                      00138 
0570   01F3           00139                 CLRF    SER_TEMP
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 73


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00140 
                      00141                 ; wait one and a half the bit-time to positions in the center
                      00142                 ; of the first data bit.  Take into account the interrupt
                      00143                 ; call and dispatch time.
                      00144                 SER_DELAY BAUD_TIME * 3/2 - 12
0571   30CB               M                         MOVLW   (BAUD_TIME * 3/2 - 12 - 5 + 3/2)/3
0572   2???               M                         CALL    SER_DEL
                      00145 
                      00146                 ; clock in the bits
                      00147                 FROM SER_BIT_COUNT, 8
                          M                 BEGINBLOCK
  00000001                M _BLOCKDEPTH += 1
  00000020                M _LABELCOUNT += 1
  00000020                M _BLOCKNUM1               = _LABELCOUNT
0573   3008               M                 MOVLW   8
0574   00F6               M                 MOVWF   SER_BIT_COUNT
0575                      M _LOOP32
  00000076                M _LOOPVAR1               = SER_BIT_COUNT
                      00148                  ; get bit and invert it
                      00149 #IF SER_DRIVER
0575   1C05           00150                  BTFSS  SERIN_PIN
0576   1003           00151                  BCF    STATUS, C
0577   1805           00152                  BTFSC  SERIN_PIN
0578   1403           00153                  BSF    STATUS, C
                      00154 #ELSE
                      00155                  BTFSS  SERIN_PIN
                      00156                  BSF    STATUS, C
                      00157                  BTFSC  SERIN_PIN
                      00158                  BCF    STATUS, C
                      00159 #ENDIF
                      00160 
                      00161                  SER_DELAY BAUD_TIME - 8
0579   3087               M                         MOVLW   (BAUD_TIME - 8 - 5 + 3/2)/3
057A   2???               M                         CALL    SER_DEL
                      00162 
                      00163                  ; rotate the bit into the word
057B   0CF3           00164                  RRF    SER_TEMP, F
                      00165                 ENDFROM
057C                      M _LOOPTEST32
057C   0BF6               M                 DECFSZ  _LOOPVAR1,               F
                          M                 REDO
057D   2???               M                 GOTO _LOOP32
                          M                 ENDBLOCK
057E                      M _ENDBLOCK32
  00000000                M _BLOCKDEPTH -= 1
                      00166 
                      00167                 ; get the stop bit
                      00168 #IF SER_DRIVER
                      00169                 IFBS    SERIN_PIN
                          M                 BEGINIF
  00000001                M _IFDEPTH += 1
  00000021                M _LABELCOUNT += 1
  00000021                M _IFNUM1            = _LABELCOUNT
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 74


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

057E   1C05               M                 BTFSS   PORTA, 0
057F   2???               M                 GOTO    _IF33
                      00170 #ELSE
                      00171                 IFBC    SERIN_PIN
                      00172 #ENDIF
0580   0873           00173                  MOVFW  SER_TEMP
0581   00F2           00174                  MOVWF  SER_DATA
0582   1474           00175                  BSF    SER_CON, SER_READY      ; Signify new byte ready
0583   10F4           00176                  BCF    SER_CON, SER_ERROR      ; Clear the error flag
                      00177                 ENDIF_
0584                      M _IF33
  00000000                M _IFDEPTH -= 1
                      00178 
0584   0008           00179                 RETURN 
                      00180 
                      00181 ;----------------------------------------------------------------------
                      00182 ; Ser_wait - Waits for a character on the serial port then continues
                      00183 
0585                  00184 SER_WAIT
0585   1283 1303      00185                 BANKSEL SER_CON
                      00186                 LOOP
                          M                 BEGINBLOCK
  00000001                M _BLOCKDEPTH += 1
  00000022                M _LABELCOUNT += 1
  00000022                M _BLOCKNUM1               = _LABELCOUNT
0587                      M _LOOPTEST34
0587                      M _LOOP34
0587   1C74           00187                  BTFSS  SER_CON, SER_READY
                      00188                 ENDLOOP
                          M                 REDO
0588   2???               M                 GOTO _LOOP34
                          M                 ENDBLOCK
0589                      M _ENDBLOCK34
  00000000                M _BLOCKDEPTH -= 1
                      00189 
                      00190                 ; Fall through to ser_get
                      00191 
                      00192 ;----------------------------------------------------------------------
                      00193 ; Ser_get - returns the current available character and reset ser_con
                      00194 
0589                  00195 SER_GET
0589   1283 1303      00196                 BANKSEL SER_DATA
058B   0872           00197                 MOVFW   SER_DATA
058C   1074           00198                 BCF             SER_CON, SER_READY
                      00199 
058D   0008           00200                 RETURN
                      00201 
                      00202 ;----------------------------------------------------------------------
                      00203 ; Serout - outputs a character in w to the serial port
                      00204 
                      00205 
                      00206 
                      00207 
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 75


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

058E                  00208 SER_OUT 
058E   1283 1303      00209                 BANKSEL SER_TEMP
0590   00F3           00210                 MOVWF   SER_TEMP
                      00211 
                      00212                 ; Disable interrupts during output to preserve timing
                      00213 
0591   138B           00214                 BCF     INTCON, GIE
                      00215 
                      00216                 ; start bit
0592   1003           00217                 BCF             STATUS, C       
                      00218 
                      00219                 ; clock out start/carry bit then 8 data bits
                      00220                 FROM SER_BIT_COUNT, 9
                          M                 BEGINBLOCK
  00000001                M _BLOCKDEPTH += 1
  00000023                M _LABELCOUNT += 1
  00000023                M _BLOCKNUM1               = _LABELCOUNT
0593   3009               M                 MOVLW   9
0594   00F6               M                 MOVWF   SER_BIT_COUNT
0595                      M _LOOP35
  00000076                M _LOOPVAR1               = SER_BIT_COUNT
                      00221                  ; send bit inverted
                      00222 #IF SER_DRIVER
0595   1C03           00223                  BTFSS  STATUS, C
0596   1085           00224                  BCF    SEROUT_PIN
0597   1803           00225                  BTFSC  STATUS, C
0598   1485           00226                  BSF    SEROUT_PIN      ; for use w/o inverter
                      00227 #ELSE
                      00228                  BTFSS  STATUS, C
                      00229                  BSF    SEROUT_PIN
                      00230                  BTFSC  STATUS, C
                      00231                  BCF    SEROUT_PIN      ; for use w/o inverter
                      00232 #ENDIF
                      00233 
                      00234 
                      00235                  SER_DELAY BAUD_TIME - 8
0599   3087               M                         MOVLW   (BAUD_TIME - 8 - 5 + 3/2)/3
059A   2???               M                         CALL    SER_DEL
                      00236 
                      00237                  ; rotate the next bit to the carry position.  endfrom OK
059B   0CF3           00238                  RRF    SER_TEMP, F
                      00239                 ENDFROM
059C                      M _LOOPTEST35
059C   0BF6               M                 DECFSZ  _LOOPVAR1,               F
                          M                 REDO
059D   2???               M                 GOTO _LOOP35
                          M                 ENDBLOCK
059E                      M _ENDBLOCK35
  00000000                M _BLOCKDEPTH -= 1
                      00240 
                      00241                 ; stop bit
                      00242 #IF SER_DRIVER
059E   1485           00243                 BSF             SEROUT_PIN; for use w/o inverted
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 76


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00244 #ELSE
                      00245         
                      00246                 BCF             SEROUT_PIN; for use w/o inverted
                      00247 #ENDIF
                      00248 
                      00249                 ; hold pin stable for a full cycle
                      00250         SER_DELAY BAUD_TIME
059F   3089               M                         MOVLW   (BAUD_TIME - 5 + 3/2)/3
05A0   2???               M                         CALL    SER_DEL
                      00251 
                      00252                 ; reenable interrupts
                      00253 #IF INTERRUPTS_ENABLED
05A1   178B           00254                 BSF     INTCON, GIE
                      00255 #ENDIF
                      00256 
05A2   0008           00257                 RETURN
                      00258 
                      00259 ;----------------------------------------------------------------------
                      01880 #INCLUDE "flash.asm"
                      00001 ;----------------------------------------------------------------------
                      00002 ;
                      00003 ; File: flash.asm
                      00004 ;       Flash read and write routines.  These are implemented in a deviece
                      00005 ;       independant manner.  The routines all use macros to interface with
                      00006 ;       the routines:
                      00007 ;
                      00008 ;       flash_addr      - Sets flash address register to contents of W register
                      00009 ;       flash_write     - Writes contents of flash data register to address in
                      00010 ;                 flash address register
                      00011 ;       flash_read      - Reads flash location pointed to by flash address register
                      00012 ;                 into W
                      00013 ;
                      00014 ; Author:
                      00015 ;       Robert F. Nee
                      00016 ;       robnee@robnee.com
                      00017 ;
                      00018 ; Revisions:
                      00019 ;       last delta 01/06/04 23:12:52
                      00020 ;
                      00021 ;       01/12/02 V1.01
                      00022 ;       Generalize the I/O routines for all flash parts (8 and 18 pin)
                      00023 ;
                      00024 ;       07/09/03 V1.02
                      00025 ;       Add support for parts with EE registers in separate banks.
                      00026 ;
                      00027 ;----------------------------------------------------------------------
                      00028 
                      00029 FLASH_ADDR      MACRO
                      00030                 BANKSEL EEADR
                      00031                 MOVWF   EEADR
                      00032                 BANK00
                      00033                 ENDM
                      00034 
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 77


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

05A3                  00035 FLASH_WRITE
05A3   1683 1303      00036                 BANKSEL EEDATA
05A5   009A           00037                 MOVWF   EEDATA
                      00038 
05A6   138B           00039                 BCF             INTCON, GIE             ; Disable interrupts
                      00040 
05A7   1683 1303      00041                 BANKSEL EECON1
05A9   151C           00042                 BSF             EECON1, WREN    ; Enable writes
                      00043 
                      00044                 ; Write initiation sequence
05AA   3055           00045                 MOVLW   0X55
05AB   009D           00046                 MOVWF   EECON2                  ; Write 55h
05AC   30AA           00047                 MOVLW   0XAA
05AD   009D           00048                 MOVWF   EECON2                  ; Write AAh
                      00049 
05AE   149C           00050                 BSF             EECON1, WR              ; Begin write
                      00051 
                      00052                 LOOP
                          M                 BEGINBLOCK
  00000001                M _BLOCKDEPTH += 1
  00000024                M _LABELCOUNT += 1
  00000024                M _BLOCKNUM1               = _LABELCOUNT
05AF                      M _LOOPTEST36
05AF                      M _LOOP36
05AF   189C           00053                  BTFSC  EECON1, WR              ; Poll WR bit for write complete
                      00054                 ENDLOOP
                          M                 REDO
05B0   2???               M                 GOTO _LOOP36
                          M                 ENDBLOCK
05B1                      M _ENDBLOCK36
  00000000                M _BLOCKDEPTH -= 1
                      00055 
05B1   178B           00056                 BSF             INTCON, GIE             ; Enable inturrupts
                      00057                 BANK00
                          M 
05B2   1283               M                 BCF     STATUS, RP0
05B3   1303               M                 BCF     STATUS, RP1
                          M 
                      00058 
05B4   0008           00059                 RETURN
                      00060 
05B5                  00061 FLASH_READ
05B5   1683 1303      00062                 BANKSEL EECON1
05B7   141C           00063                 BSF             EECON1, RD              ; EE read command
05B8   1683 1303      00064                 BANKSEL EEDATA
05BA   081A           00065                 MOVF    EEDATA, W
                      00066                 BANK00
                          M 
05BB   1283               M                 BCF     STATUS, RP0
05BC   1303               M                 BCF     STATUS, RP1
                          M 
05BD   0008           00067                 RETURN
                      00068 
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 78


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00069 ;----------------------------------------------------------------------
                      00070 
                      00071 #IFDEF __12CE673
                      00072                 #INCLUDE "../include/fl67xinc.asm"
                      00073 
                      00074 FLASH_ADDR      MACRO
                      00075                 MOVWF   EEADR
                      00076                 ENDM
                      00077 
                      00078 FLASH_WRITE     MOVWF   EEDATA
                      00079                 LOOP    
                      00080                  CALL   WRITE_BYTE
                      00081                  BTFSS  PC_OFFSET,EE_OK         ; Check if operation successful
                      00082                 ENDLOOP
                      00083 
                      00084                 CLRF    PCLATH
                      00085                 RETURN
                      00086 
                      00087 FLASH_READ      CALL    READ_RANDOM
                      00088                 CLRF    PCLATH
                      00089                 MOVF    EEDATA, W
                      00090                 RETURN
                      00091 #ENDIF
                      00092 
                      01881 
                      01882 
                      01883 ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      01884 
                      01885         ORG 0X2100
2100                  01886 EECALL
2100   00A8 00D8 0001 01887         DE  MC, MQ, MSPACE, MC, MQ, MSPACE
       00A8 00D8 0001 
2106   0000           01888         DE MEND
                      01889 
                      01890         ORG 0X2120
2120   0042           01891 EEF2    DE 0X42         ; these #'s correspond to 433.92
2121   0014           01892 EEF1    DE 0X14
2122   0025           01893 EEF0    DE 0X25
2123   00FF           01894 EEPOWER_OUT             DE 0XFF
2124   0000           01895 EEBEEP_TONE             DE 0            ; freq of beep
2125   0003           01896 EEBEEP_LEN              DE 3            ; number of beeps between call signs
2126   0032           01897 EEBEEP_NUM              DE 50           ; length of beep in 100's of ms
2127   002D           01898 EEBEEP_SPACE            DE 45           ; time between beeps (in 100ms increments)
2128   0000           01899 EEBEEP_FREQ_H           DE 0X00         ; Beep Freqency
2129   00A6           01900 EEBEEP_FREQ             DE 0XA6         ; Beep Freqency
212A   0000           01901 EEBEEP_FREQ_LOOP_H      DE 0X00
212B   0064           01902 EEBEEP_FREQ_LOOP        DE 0X64
212C   0000           01903 EEMORSE_FREQ_H          DE 0
212D   00A6           01904 EEMORSE_FREQ            DE 0XA6
212E   0064           01905 EEMORSE_FREQ_LOOP       DE 0X64
212F   0000           01906 EEBEEP_SPACE_LV         DE 0            ; time between beeps when voltage is low
2130   000F           01907 EEOPTIONS               DE 0XF          ; both TX on and TXOFF voltages ID'd
2131   0002           01908 EEV_CUTOFFH             DE 2            ; trigger for  low V operation
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 79


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

2132   0044           01909 EEV_CUTOFF              DE 0X44         ; trigger for low V operation   244 is 1.7volts (3.4 VOls)
2133   0000           01910 EETIME2                 DE 0X00
2134   0000           01911 EETIME1                 DE 0X00
2135   0000           01912 EETIME0                 DE 0X00
                      01913 
2136   00FE           01914 JUNK                    DE 0XFE
2137   00FE           01915 JUNK2                   DE 0XFE
2138   005A 005A 005A 01916 JUNK3                   DE 0X5A, 0X5A, 0X5A, 0X5A
       005A 
                      01917 
                      01918 ;
                      01919 ; Private data follows
                      01920 ;
213C   0000 0000 0000 01921 SERIALNUM               DE   0X00, 0X00, 0X00, 0X00
       0000 
2140   003F 003F 003F 01922 SCALL                   DE  '?','?','?','?','?','?'
       003F 003F 003F 
                      01923 
                      01924         END
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 80


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ADRESULTHI                        00000056
ADRESULTLO                        00000057
AD_CONVERT                        0000044C
AGAIN_H1                          0000005B
ANS0                              00000000
ANS1                              00000001
ANS2                              00000002
ANS3                              00000003
ANS4                              00000004
ANS5                              00000005
ANS6                              00000006
ANS7                              00000007
ANSEL                             00000091
BANK0                             BCF     STATUS, RP0
BANK00                            
BANK01                            
BANK1                             BSF     STATUS, RP0
BANK10                            
BAUDCTL                           00000011
BAUD_DELAY                        0000008A
BAUD_DELAY2                       000000CF
BAUD_RATE                         2400
BAUD_TIME                         000001A1
BEACON_START                      00000142
BEEP_FREQ                         00000049
BEEP_FREQ_H                       00000048
BEEP_FREQ_LOOP                    0000004B
BEEP_FREQ_LOOP_H                  0000004A
BEEP_LEN                          00000045
BEEP_NUM                          00000046
BEEP_SPACE                        00000047
BEEP_SPACE_LV                     0000004F
BEEP_TONE                         00000044
BEGINBLOCK                        
BEGINIF                           
BEQ                               
BF_CARRY                          3, 0
BF_ZERO                           3, 2
BIAS_PD                           B'00000010'
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 81


SYMBOL TABLE
  LABEL                             VALUE 

BNE                               
BREAK                             
BRG16                             00000003
BRGH                              00000002
C                                 00000000
C1IE                              00000003
C1IF                              00000003
C1INV                             00000004
C1OUT                             00000006
C2IE                              00000004
C2IF                              00000004
C2INV                             00000005
C2OUT                             00000007
C2SYNC                            00000000
CAL                               0X0E
CALIBRATE                         000003D0
CALLDONE                          00000281
CALLSIGN                          00000020
CAL_DUAL                          B'01000000'
CAL_ITERATE                       B'00000110'
CAL_START                         B'10000000'
CAL_WAIT                          B'00100000'
CARYF                             00000000
CASE                              
CC1050                            
CC1050F                           
CC1050R                           
CC_DCLK                           PORTC, 1
CC_DI                             PORTC, 2
CC_PALE                           PORTA, 5
CC_PCLK                           PORTA, 2
CC_PDATA                          PORTA, 4
CHECK_AGAIN                       000001FD
CHECK_DONE                        0000020F
CHECK_SHUTDOWN                    0000025E
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CIS                               00000003
CLC                               BCF BF_CARRY
CLKINT                            000004C7
CLK_STATE                         0000006E
CLOCK_SPEED                       003D0900
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON0                            00000019
CMCON1                            0000001A
CMD_DISPATCH                      0000006C
CMD_DISPATCH_H1                   0000005E
CMD_DISPATCH_H2                   00000216
CMD_DISPATCH_H3                   00000291
CMD_MODEL                         00000136
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 82


SYMBOL TABLE
  LABEL                             VALUE 

CMD_OK                            00000138
CMD_READ_CALLSIGN                 000000BA
CMD_READ_SERIALNUM                000000A7
CMD_TEXT_DUMP                     00000122
CMD_TEXT_PGM                      00000104
CMD_UPDATE_SERIAL                 000000E5
CMD_VERSION                       00000134
CMD_ZERO_TIME                     000000CD
CONTINUE                          
CONTINUE1                         00000239
CONTINUE10                        00000060
CONTINUE11                        0000022B
CONTINUE12                        000002B3
CONTINUE13                        000002C1
CONTINUE23                        00000218
CONTINUE99                        00000294
CORE_PD                           B'00000100'
CREN                              00000004
CSRC                              00000007
CURRENT                           9
CYCLE_SPEED                       000F4240
D100                              00000063
D100MS                            000002D5
D100_H                            00000062
D101AMS                           000002E7
D101BMS                           000002EE
D101MS                            000002E0
D15                               00000240
D1MS2                             000002D7
D250                              00000065
D250_H                            00000064
D5                                00000066
DC                                00000001
DEFAULT                           
DELAY1                            0000005C
DELAY2                            00000061
DIDAH                             0000005F
DIV                               00000478
DIVCODE                           00000488
DIVSKIPHISHIFT                    0000048F
DIV_AND_MORSE                     000004A0
DOIT2                             0000026B
EEADR                             0000009B
EEADRH                            00000098
EEBEEP_FREQ                       00002129
EEBEEP_FREQ_H                     00002128
EEBEEP_FREQ_LOOP                  0000212B
EEBEEP_FREQ_LOOP_H                0000212A
EEBEEP_LEN                        00002125
EEBEEP_NUM                        00002126
EEBEEP_SPACE                      00002127
EEBEEP_SPACE_LV                   0000212F
EEBEEP_TONE                       00002124
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 83


SYMBOL TABLE
  LABEL                             VALUE 

EECALL                            00002100
EECON1                            0000009C
EECON2                            0000009D
EEDAT                             0000009A
EEDATA                            0000009A
EEDATH                            00000097
EEF0                              00002122
EEF1                              00002121
EEF2                              00002120
EEIE                              00000007
EEIF                              00000007
EEMORSE_FREQ                      0000212D
EEMORSE_FREQ_H                    0000212C
EEMORSE_FREQ_LOOP                 0000212E
EEOPTIONS                         00002130
EEPGD                             00000007
EEPOWER_OUT                       00002123
EETIME0                           00002135
EETIME1                           00002134
EETIME2                           00002133
EEV_CUTOFF                        00002132
EEV_CUTOFFH                       00002131
ELSE_                             
ENDBLOCK                          
ENDCASE                           
ENDFROM                           
ENDFROM16                         
ENDIF_                            
ENDLOOP                           
ENDSWITCH                         
F                                 00000001
F0                                00000042
F1                                00000041
F2                                00000040
FERR                              00000002
FIVEL                             00000211
FIXD250                           00000228
FIXD2501                          000002B0
FIXD250A                          00000236
FIXD250B                          000002BE
FLASH_ADDR                        
FLASH_READ                        000005B5
FLASH_WRITE                       000005A3
FOR                               
FREQ_0A                           3
FREQ_0B                           6
FREQ_1A                           2
FREQ_1B                           5
FREQ_2A                           1
FREQ_2B                           4
FROM                              
FROM16                            
FROMF                             
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 84


SYMBOL TABLE
  LABEL                             VALUE 

FROMW                             
FSCTRL                            0X13
FSEP0                             8
FSEP1                             7
FSR                               00000004
FS_PD                             B'00001000'
F_DIVHI                           0000006C
F_DIVLO                           0000006D
F_REG                             B'01000000'
GET_CMD_AGAIN                     0000013E
GET_MODEL                         00000020
GET_VERSION                       0000001A
GIE                               00000007
GO                                00000001
GOODNIGHT                         00000270
GO_DONE                           00000001
HERE                              000001DE
HTS                               00000002
I                                 00000067
IDIVREPEAT                        00000000
IFBC                              
IFBS                              
IFEQ                              
IFGT                              
IFLE                              
IFLT                              
IFNE                              
IFNZ                              
IFVGT                             
IFWEQ                             
IFWNE                             
IFZ                               
INDF                              00000000
INIT1                             00000142
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTERRUPTS_ENABLED                1
INTF                              00000001
INT_RESTORE                       
INT_SAVE                          
IOC                               00000096
IOC0                              00000000
IOC1                              00000001
IOC2                              00000002
IOC3                              00000003
IOC4                              00000004
IOC5                              00000005
IOCA                              00000096
IOCA0                             00000000
IOCA1                             00000001
IOCA2                             00000002
IOCA3                             00000003
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 85


SYMBOL TABLE
  LABEL                             VALUE 

IOCA4                             00000004
IOCA5                             00000005
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRP                               00000007
J                                 00000069
JUNK                              00002136
JUNK2                             00002137
JUNK3                             00002138
K                                 0000006A
LOCK                              0X0D
LOGMSG                            0000027F
LONG                              000001E8
LOOP                              
LOOPMULT                          00000499
LTS                               00000001
M0                                000000FC
M1                                0000007C
M2                                0000003C
M3                                0000001C
M4                                0000000C
M5                                00000004
M6                                00000084
M7                                000000C4
M8                                000000E4
M9                                000000F4
MA                                00000060
MAIN                              0
MAIN5                             0000020F
MB                                00000088
MC                                000000A8
MCLR_NA                           PORTA, 3
MCOLON                            000000E2
MCOMMA                            000000CE
MD                                00000090
MDASH                             00000086
ME                                00000040
MEND                              00000000
MEQUAL                            0000008C
MF                                00000028
MG                                000000D0
MH                                00000008
MI                                00000020
MJ                                00000078
MK                                000000B0
ML                                00000048
MM                                000000E0
MN                                000000A0
MO                                000000F0
MODEL                             "BLTX0"
MODEM0                            0X11
MORDN                             000002CA
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 86


SYMBOL TABLE
  LABEL                             VALUE 

MORLOP                            0000029D
MOROUT                            0000028E
MORPLAY                           0000028C
MORSE_FREQ                        0000004D
MORSE_FREQ_H                      0000004C
MORSE_FREQ_LOOP                   0000004E
MORWAT                            000002A3
MP                                00000068
MPERIOD                           00000056
MPY8X8                            00000495
MQ                                000000D8
MQUEST                            00000032
MR                                00000050
MS                                00000010
MSEMI                             000000AA
MSG                               00000016
MSGNUM                            00000027
MSGREG0                           0000005D
MSGREG1                           0000005E
MSLASH                            00000094
MSPACE                            00000001
MT                                000000C0
MU                                00000030
MV                                00000018
MW                                00000070
MX                                00000098
MY                                000000B8
MZ                                000000C8
NEXT                              
NOT_BOD                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RAPU                          00000007
NOT_T1SYNC                        00000002
NOT_TO                            00000004
OERR                              00000001
OPTIONS                           00000050
OPTION_REG                        00000081
OSCCON                            0000008F
OSCTUNE                           00000090
OSFIE                             00000002
OSFIF                             00000002
OSTS                              00000003
OUTADDR                           0000005A
OUTDATA                           00000059
OUTPUT_CRLF                       000003F0
OUTPUT_MODEL                      000003F4
OUTPUT_VERSION                    00000400
PAUSE_1MS                         000004DD
PAUSE_I                           0000006B
PA_POW                            0X0B
PA_POWER                          0XFF
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 87


SYMBOL TABLE
  LABEL                             VALUE 

PC                                00000002
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PIE1                              0000008C
PIR1                              0000000C
PLAY                              00000286
PLAYL                             00000282
PLL                               0X0C
PORTA                             00000005
PORTC                             00000007
POWEROFF                          00000364
POWERON                           00000347
POWER_OUT                         00000043
PRESCALER                         0X1C
PROGRAM_LENGTH                    00000038
PROGRAM_PGM_LENGTH                00000033
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
RAIE                              00000003
RAIF                              00000000
RC3_NA                            PORTC, 3
RC4_NA                            PORTC, 4
RC5_NA                            PORTC, 5
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             00000014
RCSTA                             00000017
RD                                00000000
READ_PROGRAM                      0000040C
REDO                              
RESET                             0000036F
RESET_N                           B'00000001'
RP0                               00000005
RP1                               00000006
RX9                               00000006
RX9D                              00000000
S0                                00000032
SAME                              1
SBODEN                            00000004
SCALL                             00002140
SCKP                              00000004
SCS                               00000000
SEND                              00000060
SENDB                             00000003
SERIALNUM                         0000213C
SERIN_DEC                         
SERIN_PIN                         PORTA, 0
SEROUT_CRLF                       000004E7
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 88


SYMBOL TABLE
  LABEL                             VALUE 

SEROUT_DEC                        
SEROUT_PIN                        PORTA, 1
SER_BIT_COUNT                     00000076
SER_CON                           00000074
SER_DATA                          00000072
SER_DEL                           00000568
SER_DELAY                         
SER_DIGIT                         00000070
SER_DISABLE                       00000566
SER_DRIVER                        1
SER_ENABLE                        00000559
SER_ERASE                         00000552
SER_ERROR                         00000001
SER_GET                           00000589
SER_IN                            0000056C
SER_INPUT                         00000071
SER_ITER                          00000075
SER_OUT                           0000058E
SER_OUT_BANK                      000004E3
SER_READY                         00000000
SER_TEMP                          00000073
SER_VALUE                         0000006F
SER_WAIT                          00000585
SIMULATE                          0
SPBRG                             00000013
SPBRGH                            00000012
SPEN                              00000007
SREN                              00000005
STATUS                            00000003
STATUSTEMP                        0000005B
STC                               BSF BF_CARRY
SWDTEN                            00000000
SWITCH                            
SYNC                              00000004
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1GINV                            00000007
T1GSS                             00000001
T1IE                              00000000
T1IF                              00000000
T1OSCEN                           00000003
TABLE                             0000001A
TABLEEND                          00000020
TIME0                             00000055
TIME1                             00000054
TIME2                             00000053
TMR0                              00000001
TMR1CS                            00000001
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 89


SYMBOL TABLE
  LABEL                             VALUE 

TMR1GE                            00000006
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TNLOP                             0000021B
TRISA                             00000085
TRISC                             00000087
TRIS_PORTA                        B'001001'
TRIS_PORTC                        B'0111001'
TRMT                              00000001
TRY_AGAIN3                        00000211
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TX9                               00000006
TX9D                              00000000
TXEN                              00000005
TXIE                              00000001
TXIF                              00000001
TXREG                             00000015
TXSTA                             00000016
TX_PD                             B'00010000'
ULPWUE                            00000005
UPDATE_FLASH_TIME                 00000245
VBAT                              PORTC, 0
VCFG                              00000006
VER                               00000688
VERSION                           "0105"
VR0                               00000000
VR1                               00000001
VR2                               00000002
VR3                               00000003
VRCON                             00000099
VREN                              00000007
VRR                               00000005
V_CUTOFF                          00000052
V_CUTOFFH                         00000051
W                                 00000000
W100MS                            000002D3
W125US                            000002EC
W250US                            000002E5
W500MS                            000002CE
W500US                            000002DE
WDTCON                            00000018
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WHIGH                             000002AB
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 90


SYMBOL TABLE
  LABEL                             VALUE 

WHIGHT                            00000223
WLOW                              000002B9
WLOWT                             00000231
WMORS                             000002A5
WPU                               00000095
WPUA                              00000095
WR                                00000001
WREG                              0
WREN                              00000002
WRERR                             00000003
WRITE_ADDR_DATA                   000002F3
WRITE_PROGRAM                     00000437
WRITE_SERIAL                      00000422
WTEMP                             00000058
WTONE                             0000021D
WUE                               00000001
XOSC                              0X0A
Z                                 00000002
ZEROF                             00000002
_.org_1_0052                      00000052
_.org_1_00AA                      000000AA
_.org_1_00BD                      000000BD
_.org_1_00CF                      000000CF
_.org_1_00F1                      000000F1
_.org_1_00FA                      000000FA
_.org_1_0110                      00000110
_.org_1_0119                      00000119
_.org_1_0129                      00000129
_.org_1_013F                      0000013F
_.org_1_02D7                      000002D7
_.org_1_02DA                      000002DA
_.org_1_02DB                      000002DB
_.org_1_02E3                      000002E3
_.org_1_02EA                      000002EA
_.org_1_02F1                      000002F1
_.org_1_0411                      00000411
_.org_1_0426                      00000426
_.org_1_043B                      0000043B
_.org_1_045B                      0000045B
_.org_1_04DF                      000004DF
_BANKFLAG                         00000000
_BLOCKDEPTH                       00000000
_BLOCKNUM1                        00000024
_BOD_NSLEEP                       00003EFF
_BOD_OFF                          00003CFF
_BOD_ON                           00003FFF
_BOD_SBODEN                       00003DFF
_CASE1                            00000074
_CASE10                           000000A7
_CASE11                           00000536
_CASE12                           0000053C
_CASE13                           00000542
_CASE14                           00000548
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 91


SYMBOL TABLE
  LABEL                             VALUE 

_CASE15                           0000054F
_CASE16                           00000550
_CASE2                            0000007A
_CASE3                            00000080
_CASE4                            00000086
_CASE5                            0000008C
_CASE6                            00000092
_CASE7                            00000098
_CASE8                            0000009E
_CASE9                            000000A4
_CASECOUNT                        00000010
_CASEVAL                          0000000D
_CPD_OFF                          00003FFF
_CPD_ON                           00003F7F
_CP_OFF                           00003FFF
_CP_ON                            00003FBF
_EC_OSC                           00003FFB
_ENDBLOCK10                       00000133
_ENDBLOCK11                       000003FF
_ENDBLOCK12                       0000040B
_ENDBLOCK13                       00000421
_ENDBLOCK14                       00000436
_ENDBLOCK15                       0000044B
_ENDBLOCK20                       000004E2
_ENDBLOCK21                       000004F4
_ENDBLOCK23                       00000504
_ENDBLOCK25                       00000511
_ENDBLOCK27                       00000551
_ENDBLOCK3                        00000061
_ENDBLOCK31                       0000056B
_ENDBLOCK32                       0000057E
_ENDBLOCK34                       00000589
_ENDBLOCK35                       0000059E
_ENDBLOCK36                       000005B1
_ENDBLOCK5                        000000B9
_ENDBLOCK6                        000000CC
_ENDBLOCK7                        000000DE
_ENDBLOCK8                        00000101
_ENDBLOCK9                        00000120
_ENDSWITCH30                      00000550
_ENDSWITCH4                       000000A7
_EXTRC                            00003FFF
_EXTRCIO                          00003FFE
_EXTRC_OSC_CLKOUT                 00003FFF
_EXTRC_OSC_NOCLKOUT               00003FFE
_FCMEN_OFF                        000037FF
_FCMEN_ON                         00003FFF
_HS_OSC                           00003FFA
_IESO_OFF                         00003BFF
_IESO_ON                          00003FFF
_IF1                              0000000C
_IF16                             000004CF
_IF17                             000004DC
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 92


SYMBOL TABLE
  LABEL                             VALUE 

_IF18                             000004DB
_IF19                             000004DA
_IF2                              00000010
_IF22                             0000050A
_IF24                             0000051A
_IF26                             0000051A
_IF28                             00000528
_IF29                             0000052E
_IF33                             00000584
_IFDEPTH                          00000000
_IFNUM1                           00000021
_IFNUM2                           0000001A
_IFNUM3                           00000013
_INTOSC                           00003FFD
_INTOSCIO                         00003FFC
_INTRC_OSC_CLKOUT                 00003FFD
_INTRC_OSC_NOCLKOUT               00003FFC
_LABELCOUNT                       00000024
_LOOP10                           0000012F
_LOOP11                           000003F5
_LOOP12                           00000401
_LOOP13                           00000417
_LOOP14                           0000042C
_LOOP15                           00000441
_LOOP20                           000004DF
_LOOP21                           000004EE
_LOOP23                           000004FE
_LOOP25                           0000050B
_LOOP27                           00000520
_LOOP3                            00000058
_LOOP31                           00000569
_LOOP32                           00000575
_LOOP34                           00000587
_LOOP35                           00000595
_LOOP36                           000005AF
_LOOP5                            000000B0
_LOOP6                            000000C3
_LOOP7                            000000D5
_LOOP8                            000000F7
_LOOP9                            00000116
_LOOPTEST10                       0000012A
_LOOPTEST11                       000003F5
_LOOPTEST12                       00000401
_LOOPTEST13                       00000412
_LOOPTEST14                       00000427
_LOOPTEST15                       0000043C
_LOOPTEST20                       000004E0
_LOOPTEST21                       000004EE
_LOOPTEST23                       000004FE
_LOOPTEST25                       0000050B
_LOOPTEST27                       00000520
_LOOPTEST3                        00000053
_LOOPTEST31                       00000569
MPASM  5.03                    BEELINE105.ASM   10-4-2012  22:38:51         PAGE 93


SYMBOL TABLE
  LABEL                             VALUE 

_LOOPTEST32                       0000057C
_LOOPTEST34                       00000587
_LOOPTEST35                       0000059C
_LOOPTEST36                       000005AF
_LOOPTEST5                        000000AB
_LOOPTEST6                        000000BE
_LOOPTEST7                        000000D0
_LOOPTEST8                        000000F2
_LOOPTEST9                        00000111
_LOOPVAR1                         00000076
_LP_OSC                           00003FF8
_MCLRE_OFF                        00003FDF
_MCLRE_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FEF
_SWITCHDEPTH                      00000000
_SWITCHNUM1                       0000001E
_WDT_OFF                          00003FF7
_WDT_ON                           00003FFF
_XT_OSC                           00003FF9
__16F688                          00000001

Errors   :     9
Warnings :     2 reported,     0 suppressed
Messages :    12 reported,    30 suppressed

