
	NOLIST
; PICBASIC PRO(TM) Compiler 2.60C, (c) 1998, 2011 microEngineering Labs, Inc. All Rights Reserved. 

LABEL?L macro Label
        RST?RP
    ifdef PM_USED
        LALL
Label
        XALL
    else
Label
    endif
    endm

CMPGT?BCL macro Bin, Cin, Label
    if ((Cin) < 0)
        L?GOTO  Label
    else
      if ((Cin) < 0ffh)
        CLRWDT?
        MOVE?CA (Cin) + 1
        CHK?RP  Bin
        subwf   Bin, W
        BIT?GOTO 1, STATUS, C, Label
      endif
    endif
    endm

END? macro
    local loop
loop    sleep
        L?GOTO  loop
    endm

GOSUB?L macro Label
    local dlabel
    ifdef DEBUG_STACK
        CHK?RP  DEBUG_STACK
      ifdef DEBUG_STACK_ADDR
        bcf     STATUS, C
        rlcf    DEBUG_STACK, W
        addlw   DEBUG_STACK_ADDR
        movwf   FSR0L
        clrf    FSR0H
        movlw   low (dlabel)
        movwf   POSTINC0
        movlw   high (dlabel)
        movwf   INDF0
      endif
        incf    DEBUG_STACK, F
    endif
        L?CALL  Label
dlabel
    endm

GOTO?L macro Label
        L?GOTO  Label
    endm

HIGH?T macro Regin, Bitin
        MOVE?CT 1, Regin, Bitin
        MOVE?CT 0, ((Regin) + 12h), Bitin
    endm

LOW?T macro Regin, Bitin
        MOVE?CT 0, Regin, Bitin
        MOVE?CT 0, ((Regin) + 12h), Bitin
    endm

NEXT?BCL macro Bin, Cin, Label
    if ((Cin) == 1)
        CHK?RP  Bin
        incf    Bin, F
    else
        movlw	Cin
        CHK?RP  Bin
        addwf   Bin, F
    endif
    if ((Cin) <= 255)
        BIT?GOTO 0, STATUS, C, Label
    endif
    endm

PAUSE?C macro Cin
    if (((Cin) >> 8) == 0)
        MOVE?CA Cin
        L?CALL  PAUSE
    else
        MOVE?CB (Cin) >> 8, R1 + 1
        MOVE?CA low (Cin)
        L?CALL  PAUSEL
    endif
    endm
PAUSE_USED = 1

RETURN? macro
    ifdef DEBUG_STACK
        CHK?RP  DEBUG_STACK
        decf    DEBUG_STACK, F
    endif
        RST?RP
        return
    endm

SHIFTCLOCK?T macro Regin, Bitin
        BIT?R2  Regin, Bitin
    endm

SHIFTDATA?T macro Regin, Bitin
        BIT?R1  Regin, Bitin
    endm

SHIFTIN?BC macro Bout, Cin
    if ((Cin) == 8)
        L?CALL  SHIFTIN8
    else
        movlw   Cin
        L?CALL  SHIFTIN
    endif
        MOVE?AB Bout
    endm
SHIFTIN_USED = 1

SHIFTIN?TC macro Regout, Bitout, Cin
    if ((Cin) == 8)
        L?CALL  SHIFTIN8
    else
        movlw   Cin
        L?CALL  SHIFTIN
    endif
        MOVE?AT Regout, Bitout
    endm
SHIFTIN_USED = 1

SHIFTMODE?C macro Cin
        MOVE?CB Cin, GOP
    endm

SHIFTOUT?BC macro Bin, Cin
        MOVE?BW Bin, R0
    if ((Cin) == 8)
        L?CALL  SHIFTOUT8
    else
        movlw   Cin
        L?CALL  SHIFTOUT
    endif
    endm
SHIFTOUT_USED = 1

SHIFTOUT?CC macro Cin1, Cin2
        MOVE?CW Cin1, R0
    if ((Cin2) == 8)
        L?CALL  SHIFTOUT8
    else
        movlw   Cin2
        L?CALL  SHIFTOUT
    endif
    endm
SHIFTOUT_USED = 1

TOGGLE?T macro Regin, Bitin
        BIT?FLIP Regin, Bitin
        MOVE?CT 0, ((Regin) + 12h), Bitin
    endm


	LIST
